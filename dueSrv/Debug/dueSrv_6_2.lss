
dueSrv_6_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005d64  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00085d64  00085d64  0000dd64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009ec  20070000  00085d6c  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000f0  200709ec  00086758  000109ec  2**2
                  ALLOC
  4 .stack        00002004  20070adc  00086848  000109ec  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109ec  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010a15  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000b0a6  00000000  00000000  00010a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002097  00000000  00000000  0001bb16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000043a3  00000000  00000000  0001dbad  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009f0  00000000  00000000  00021f50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008b0  00000000  00000000  00022940  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019057  00000000  00000000  000231f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000101e0  00000000  00000000  0003c247  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00062709  00000000  00000000  0004c427  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001e1c  00000000  00000000  000aeb30  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072ae0 	.word	0x20072ae0
   80004:	00080de1 	.word	0x00080de1
   80008:	00080ddd 	.word	0x00080ddd
   8000c:	00080ddd 	.word	0x00080ddd
   80010:	00080ddd 	.word	0x00080ddd
   80014:	00080ddd 	.word	0x00080ddd
   80018:	00080ddd 	.word	0x00080ddd
	...
   8002c:	00080ddd 	.word	0x00080ddd
   80030:	00080ddd 	.word	0x00080ddd
   80034:	00000000 	.word	0x00000000
   80038:	00080ddd 	.word	0x00080ddd
   8003c:	00080ddd 	.word	0x00080ddd
   80040:	00080ddd 	.word	0x00080ddd
   80044:	00080ddd 	.word	0x00080ddd
   80048:	00080ddd 	.word	0x00080ddd
   8004c:	00080ddd 	.word	0x00080ddd
   80050:	00080ddd 	.word	0x00080ddd
   80054:	00080ddd 	.word	0x00080ddd
   80058:	00080ddd 	.word	0x00080ddd
   8005c:	00080ddd 	.word	0x00080ddd
   80060:	00080ddd 	.word	0x00080ddd
   80064:	00080ddd 	.word	0x00080ddd
   80068:	00000000 	.word	0x00000000
   8006c:	00080c4d 	.word	0x00080c4d
   80070:	00080c61 	.word	0x00080c61
   80074:	00080c75 	.word	0x00080c75
   80078:	00080c89 	.word	0x00080c89
	...
   80084:	00080ddd 	.word	0x00080ddd
   80088:	00080ddd 	.word	0x00080ddd
   8008c:	00080ddd 	.word	0x00080ddd
   80090:	00080ddd 	.word	0x00080ddd
   80094:	00080ddd 	.word	0x00080ddd
   80098:	00080ddd 	.word	0x00080ddd
   8009c:	00080ddd 	.word	0x00080ddd
   800a0:	00080ddd 	.word	0x00080ddd
   800a4:	00000000 	.word	0x00000000
   800a8:	00080ddd 	.word	0x00080ddd
   800ac:	00080ddd 	.word	0x00080ddd
   800b0:	00080ddd 	.word	0x00080ddd
   800b4:	00080ddd 	.word	0x00080ddd
   800b8:	00080ddd 	.word	0x00080ddd
   800bc:	00080ddd 	.word	0x00080ddd
   800c0:	00080ddd 	.word	0x00080ddd
   800c4:	00080ddd 	.word	0x00080ddd
   800c8:	00080ddd 	.word	0x00080ddd
   800cc:	00080ddd 	.word	0x00080ddd
   800d0:	00080ddd 	.word	0x00080ddd
   800d4:	00080ddd 	.word	0x00080ddd
   800d8:	00080ddd 	.word	0x00080ddd
   800dc:	00080ddd 	.word	0x00080ddd
   800e0:	00080ddd 	.word	0x00080ddd
   800e4:	00080ddd 	.word	0x00080ddd
   800e8:	00080ddd 	.word	0x00080ddd
   800ec:	00080ddd 	.word	0x00080ddd
   800f0:	00080ddd 	.word	0x00080ddd

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709ec 	.word	0x200709ec
   80110:	00000000 	.word	0x00000000
   80114:	00085d6c 	.word	0x00085d6c

00080118 <frame_dummy>:
   80118:	4b08      	ldr	r3, [pc, #32]	; (8013c <frame_dummy+0x24>)
   8011a:	b510      	push	{r4, lr}
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4808      	ldr	r0, [pc, #32]	; (80140 <frame_dummy+0x28>)
   80120:	4908      	ldr	r1, [pc, #32]	; (80144 <frame_dummy+0x2c>)
   80122:	f3af 8000 	nop.w
   80126:	4808      	ldr	r0, [pc, #32]	; (80148 <frame_dummy+0x30>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b903      	cbnz	r3, 8012e <frame_dummy+0x16>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	4b07      	ldr	r3, [pc, #28]	; (8014c <frame_dummy+0x34>)
   80130:	2b00      	cmp	r3, #0
   80132:	d0fb      	beq.n	8012c <frame_dummy+0x14>
   80134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80138:	4718      	bx	r3
   8013a:	bf00      	nop
   8013c:	00000000 	.word	0x00000000
   80140:	00085d6c 	.word	0x00085d6c
   80144:	200709f0 	.word	0x200709f0
   80148:	00085d6c 	.word	0x00085d6c
   8014c:	00000000 	.word	0x00000000

00080150 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   80150:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   80152:	2401      	movs	r4, #1
   80154:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   80156:	2400      	movs	r4, #0
   80158:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   8015a:	f240 2502 	movw	r5, #514	; 0x202
   8015e:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   80162:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   80166:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   8016a:	6845      	ldr	r5, [r0, #4]
   8016c:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   8016e:	0052      	lsls	r2, r2, #1
   80170:	fbb1 f1f2 	udiv	r1, r1, r2
   80174:	1e4a      	subs	r2, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80176:	0212      	lsls	r2, r2, #8
   80178:	b292      	uxth	r2, r2
   8017a:	4313      	orrs	r3, r2
   8017c:	6043      	str	r3, [r0, #4]
	return 0;
}
   8017e:	4620      	mov	r0, r4
   80180:	bc30      	pop	{r4, r5}
   80182:	4770      	bx	lr

00080184 <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   80184:	6843      	ldr	r3, [r0, #4]
   80186:	f023 0310 	bic.w	r3, r3, #16
   8018a:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   8018c:	6843      	ldr	r3, [r0, #4]
   8018e:	4319      	orrs	r1, r3
   80190:	6041      	str	r1, [r0, #4]
   80192:	4770      	bx	lr

00080194 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   80194:	6843      	ldr	r3, [r0, #4]
   80196:	4319      	orrs	r1, r3
   80198:	01d2      	lsls	r2, r2, #7
   8019a:	b2d2      	uxtb	r2, r2
   8019c:	4311      	orrs	r1, r2
   8019e:	6041      	str	r1, [r0, #4]
   801a0:	4770      	bx	lr
   801a2:	bf00      	nop

000801a4 <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   801a4:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801a6:	6844      	ldr	r4, [r0, #4]
   801a8:	4322      	orrs	r2, r4
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   801aa:	0609      	lsls	r1, r1, #24
   801ac:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
   801b0:	430a      	orrs	r2, r1
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801b2:	071b      	lsls	r3, r3, #28
   801b4:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   801b8:	4313      	orrs	r3, r2
   801ba:	6043      	str	r3, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   801bc:	f85d 4b04 	ldr.w	r4, [sp], #4
   801c0:	4770      	bx	lr
   801c2:	bf00      	nop

000801c4 <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   801c4:	2302      	movs	r3, #2
   801c6:	6003      	str	r3, [r0, #0]
   801c8:	4770      	bx	lr
   801ca:	bf00      	nop

000801cc <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   801cc:	2301      	movs	r3, #1
   801ce:	408b      	lsls	r3, r1
   801d0:	6103      	str	r3, [r0, #16]
   801d2:	4770      	bx	lr

000801d4 <adc_enable_all_channel>:
 * \param p_adc Pointer to an ADC instance.
 */
void adc_enable_all_channel(Adc *p_adc)
{
#if SAM3S || SAM4S || SAM3N || SAM3XA
	p_adc->ADC_CHER = 0xFFFF;
   801d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
   801d8:	6103      	str	r3, [r0, #16]
   801da:	4770      	bx	lr

000801dc <pin_mapper>:
					PIO_PA22_IDX,PIO_PA6_IDX,PIO_PA4_IDX,PIO_PA3_IDX,PIO_PA2_IDX,PIO_PB17_IDX,
					PIO_PB18_IDX,PIO_PB19_IDX,PIO_PB20_IDX};
					
uint8_t pin_mapper(uint8_t pin){
	return pin_table[pin];
}
   801dc:	4b01      	ldr	r3, [pc, #4]	; (801e4 <pin_mapper+0x8>)
   801de:	5c18      	ldrb	r0, [r3, r0]
   801e0:	4770      	bx	lr
   801e2:	bf00      	nop
   801e4:	2007012c 	.word	0x2007012c

000801e8 <map_value>:
/*
* Mapping values from one range to another, be warned this function will 
* probably run dead slow on the arduino due. Its not intended to be used
* where speed is essential.  
*/
uint32_t map_value(uint32_t x, uint32_t in_min, uint32_t in_max, uint32_t out_min, uint32_t out_max){
   801e8:	b410      	push	{r4}
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
   801ea:	1a40      	subs	r0, r0, r1
   801ec:	9c01      	ldr	r4, [sp, #4]
   801ee:	1ae4      	subs	r4, r4, r3
   801f0:	fb04 f000 	mul.w	r0, r4, r0
   801f4:	1a52      	subs	r2, r2, r1
   801f6:	fbb0 f0f2 	udiv	r0, r0, r2
   801fa:	4418      	add	r0, r3
   801fc:	f85d 4b04 	ldr.w	r4, [sp], #4
   80200:	4770      	bx	lr
   80202:	bf00      	nop

00080204 <pwm_set_duty>:
		pwm_set_duty(0);
	}
}


void pwm_set_duty(uint32_t duty_cycle){
   80204:	b508      	push	{r3, lr}
   80206:	4602      	mov	r2, r0
	/*Set duty cycle*/
	pwm_channel_update_duty(PWM,&pwm_channel_instance,duty_cycle);
   80208:	4802      	ldr	r0, [pc, #8]	; (80214 <pwm_set_duty+0x10>)
   8020a:	4903      	ldr	r1, [pc, #12]	; (80218 <pwm_set_duty+0x14>)
   8020c:	4b03      	ldr	r3, [pc, #12]	; (8021c <pwm_set_duty+0x18>)
   8020e:	4798      	blx	r3
   80210:	bd08      	pop	{r3, pc}
   80212:	bf00      	nop
   80214:	40094000 	.word	0x40094000
   80218:	20070a08 	.word	0x20070a08
   8021c:	00080831 	.word	0x00080831

00080220 <pwm_setup>:
#include <pwm.h>
#include "analog_output.h"

static pwm_channel_t pwm_channel_instance;

void pwm_setup(){
   80220:	b530      	push	{r4, r5, lr}
   80222:	b085      	sub	sp, #20
	/* Enable the specified peripheral clock (PWM clock).
	   If function returns 0, then we can proceed... */
	if (pmc_enable_periph_clk(ID_PWM) == 0) {
   80224:	2024      	movs	r0, #36	; 0x24
   80226:	4b17      	ldr	r3, [pc, #92]	; (80284 <pwm_setup+0x64>)
   80228:	4798      	blx	r3
   8022a:	2800      	cmp	r0, #0
   8022c:	d128      	bne.n	80280 <pwm_setup+0x60>
		pwm_channel_disable(PWM, PWM_CHANNEL_0);
   8022e:	4d16      	ldr	r5, [pc, #88]	; (80288 <pwm_setup+0x68>)
   80230:	4628      	mov	r0, r5
   80232:	2100      	movs	r1, #0
   80234:	4b15      	ldr	r3, [pc, #84]	; (8028c <pwm_setup+0x6c>)
   80236:	4798      	blx	r3
		pwm_clock_t clock_setting = {
   80238:	4b15      	ldr	r3, [pc, #84]	; (80290 <pwm_setup+0x70>)
   8023a:	9301      	str	r3, [sp, #4]
   8023c:	2400      	movs	r4, #0
   8023e:	9402      	str	r4, [sp, #8]
   80240:	4b14      	ldr	r3, [pc, #80]	; (80294 <pwm_setup+0x74>)
   80242:	9303      	str	r3, [sp, #12]
			.ul_clka = PWM_FREQUENCY * PWM_RESOLUTION,
			.ul_clkb = 0,
			.ul_mck = sysclk_get_cpu_hz()
		};
		pwm_init(PWM, &clock_setting);
   80244:	4628      	mov	r0, r5
   80246:	a901      	add	r1, sp, #4
   80248:	4b13      	ldr	r3, [pc, #76]	; (80298 <pwm_setup+0x78>)
   8024a:	4798      	blx	r3
		pwm_channel_instance.alignment = PWM_ALIGN_LEFT;
   8024c:	4913      	ldr	r1, [pc, #76]	; (8029c <pwm_setup+0x7c>)
   8024e:	810c      	strh	r4, [r1, #8]
		pwm_channel_instance.polarity = PWM_POLARITY;
   80250:	728c      	strb	r4, [r1, #10]
		pwm_channel_instance.ul_prescaler = PWM_CMR_CPRE_CLKA;
   80252:	230b      	movs	r3, #11
   80254:	604b      	str	r3, [r1, #4]
		pwm_channel_instance.ul_period = PWM_RESOLUTION;
   80256:	23ff      	movs	r3, #255	; 0xff
   80258:	610b      	str	r3, [r1, #16]
		pwm_channel_instance.ul_duty = 0;
   8025a:	60cc      	str	r4, [r1, #12]
		pwm_channel_instance.channel = PWM_CHANNEL_0;
   8025c:	600c      	str	r4, [r1, #0]
		pwm_channel_init(PWM, &pwm_channel_instance);
   8025e:	4628      	mov	r0, r5
   80260:	4b0f      	ldr	r3, [pc, #60]	; (802a0 <pwm_setup+0x80>)
   80262:	4798      	blx	r3
		/* setup PWM for pin */
		pio_set_peripheral(PWM_PIO, PWM_PERIPHERAL, PWM_PIN);
   80264:	480f      	ldr	r0, [pc, #60]	; (802a4 <pwm_setup+0x84>)
   80266:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8026a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   8026e:	4b0e      	ldr	r3, [pc, #56]	; (802a8 <pwm_setup+0x88>)
   80270:	4798      	blx	r3
		/* enable PWM channel */
		pwm_channel_enable(PWM, PWM_CHANNEL_0);	
   80272:	4628      	mov	r0, r5
   80274:	4621      	mov	r1, r4
   80276:	4b0d      	ldr	r3, [pc, #52]	; (802ac <pwm_setup+0x8c>)
   80278:	4798      	blx	r3
		pwm_set_duty(0);
   8027a:	4620      	mov	r0, r4
   8027c:	4b0c      	ldr	r3, [pc, #48]	; (802b0 <pwm_setup+0x90>)
   8027e:	4798      	blx	r3
	}
}
   80280:	b005      	add	sp, #20
   80282:	bd30      	pop	{r4, r5, pc}
   80284:	00080d89 	.word	0x00080d89
   80288:	40094000 	.word	0x40094000
   8028c:	0008085d 	.word	0x0008085d
   80290:	0003e418 	.word	0x0003e418
   80294:	0501bd00 	.word	0x0501bd00
   80298:	000806dd 	.word	0x000806dd
   8029c:	20070a08 	.word	0x20070a08
   802a0:	00080729 	.word	0x00080729
   802a4:	400e1000 	.word	0x400e1000
   802a8:	000809e5 	.word	0x000809e5
   802ac:	00080855 	.word	0x00080855
   802b0:	00080205 	.word	0x00080205

000802b4 <dac_setup>:
 */ 
 #include <asf.h>
 #include "io_control/dac.h"
 #include "common/pin_mapper.h"

 void dac_setup() {
   802b4:	b538      	push	{r3, r4, r5, lr}
	 pmc_enable_periph_clk(ID_DACC);
   802b6:	2026      	movs	r0, #38	; 0x26
   802b8:	4b0c      	ldr	r3, [pc, #48]	; (802ec <dac_setup+0x38>)
   802ba:	4798      	blx	r3
	 dacc_reset(DACC);
   802bc:	4c0c      	ldr	r4, [pc, #48]	; (802f0 <dac_setup+0x3c>)
   802be:	4620      	mov	r0, r4
   802c0:	4b0c      	ldr	r3, [pc, #48]	; (802f4 <dac_setup+0x40>)
   802c2:	4798      	blx	r3
	 dacc_set_transfer_mode(DACC, 0);
   802c4:	4620      	mov	r0, r4
   802c6:	2100      	movs	r1, #0
   802c8:	4b0b      	ldr	r3, [pc, #44]	; (802f8 <dac_setup+0x44>)
   802ca:	4798      	blx	r3
	 dacc_set_timing(DACC,1,1,0);			//1 is shortest refresh period, 1 max. speed, 0 startup time
   802cc:	4620      	mov	r0, r4
   802ce:	2101      	movs	r1, #1
   802d0:	460a      	mov	r2, r1
   802d2:	2300      	movs	r3, #0
   802d4:	4d09      	ldr	r5, [pc, #36]	; (802fc <dac_setup+0x48>)
   802d6:	47a8      	blx	r5
	 
	 dacc_set_channel_selection(DACC,0);	//Channel DAC0
   802d8:	4620      	mov	r0, r4
   802da:	2100      	movs	r1, #0
   802dc:	4b08      	ldr	r3, [pc, #32]	; (80300 <dac_setup+0x4c>)
   802de:	4798      	blx	r3
	 dacc_enable_channel(DACC, 0);			//enable DAC0
   802e0:	4620      	mov	r0, r4
   802e2:	2100      	movs	r1, #0
   802e4:	4b07      	ldr	r3, [pc, #28]	; (80304 <dac_setup+0x50>)
   802e6:	4798      	blx	r3
   802e8:	bd38      	pop	{r3, r4, r5, pc}
   802ea:	bf00      	nop
   802ec:	00080d89 	.word	0x00080d89
   802f0:	400c8000 	.word	0x400c8000
   802f4:	00080609 	.word	0x00080609
   802f8:	00080611 	.word	0x00080611
   802fc:	00080645 	.word	0x00080645
   80300:	0008062d 	.word	0x0008062d
   80304:	00080675 	.word	0x00080675

00080308 <dac_write>:
 }

 void dac_write(uint32_t value){
   80308:	b510      	push	{r4, lr}
   8030a:	b082      	sub	sp, #8
	uint32_t dac_val;
	dac_val = map_value(value,0,255,0,4095);
   8030c:	f640 73ff 	movw	r3, #4095	; 0xfff
   80310:	9300      	str	r3, [sp, #0]
   80312:	2100      	movs	r1, #0
   80314:	22ff      	movs	r2, #255	; 0xff
   80316:	460b      	mov	r3, r1
   80318:	4c03      	ldr	r4, [pc, #12]	; (80328 <dac_write+0x20>)
   8031a:	47a0      	blx	r4
   8031c:	4601      	mov	r1, r0
	dacc_write_conversion_data(DACC,dac_val);
   8031e:	4803      	ldr	r0, [pc, #12]	; (8032c <dac_write+0x24>)
   80320:	4b03      	ldr	r3, [pc, #12]	; (80330 <dac_write+0x28>)
   80322:	4798      	blx	r3
   80324:	b002      	add	sp, #8
   80326:	bd10      	pop	{r4, pc}
   80328:	000801e9 	.word	0x000801e9
   8032c:	400c8000 	.word	0x400c8000
   80330:	00080629 	.word	0x00080629

00080334 <uart_config>:
void uart_config(uint32_t baud)
{
	/* reset and disable receiver & transmitter */
	UART_CR = UART_CR_RSTRX | UART_CR_RSTTX	| UART_CR_RXDIS | UART_CR_TXDIS;
	/* configure baud rate */
	UART_BRGR = (MCK >> 4) / baud;
   80334:	4b0c      	ldr	r3, [pc, #48]	; (80368 <uart_config+0x34>)
   80336:	fbb3 f0f0 	udiv	r0, r3, r0
   8033a:	4b0c      	ldr	r3, [pc, #48]	; (8036c <uart_config+0x38>)
   8033c:	6018      	str	r0, [r3, #0]
	/* configure mode */
	UART_MR = UART_MR_PAR_NO | UART_MR_CHMODE_NORMAL;
   8033e:	f44f 6200 	mov.w	r2, #2048	; 0x800
   80342:	3b1c      	subs	r3, #28
   80344:	601a      	str	r2, [r3, #0]
	/* enable receiver and transmitter */
	UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80346:	2250      	movs	r2, #80	; 0x50
   80348:	3b04      	subs	r3, #4
   8034a:	601a      	str	r2, [r3, #0]
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   8034c:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
   80350:	f44f 7280 	mov.w	r2, #256	; 0x100
   80354:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   80356:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80358:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   8035a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   8035e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80360:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   80364:	671a      	str	r2, [r3, #112]	; 0x70
   80366:	4770      	bx	lr
   80368:	00501bd0 	.word	0x00501bd0
   8036c:	400e0820 	.word	0x400e0820

00080370 <uart_transmitter_ready>:
 * Transmitter Ready?
 * Return 1 if "Transmitter Ready" flag is set, otherwise 0.
 */
int uart_transmitter_ready(void)
{
	return (UART_SR & UART_SR_TXRDY);
   80370:	4b02      	ldr	r3, [pc, #8]	; (8037c <uart_transmitter_ready+0xc>)
   80372:	6818      	ldr	r0, [r3, #0]
}
   80374:	f000 0002 	and.w	r0, r0, #2
   80378:	4770      	bx	lr
   8037a:	bf00      	nop
   8037c:	400e0814 	.word	0x400e0814

00080380 <uart_receiver_ready>:
 * Receiver Ready?
 * Return 1 if "Receiver Ready" flag is set, otherwise 0.
 */
int uart_receiver_ready(void)
{
	return (UART_SR & UART_SR_RXRDY);
   80380:	4b02      	ldr	r3, [pc, #8]	; (8038c <uart_receiver_ready+0xc>)
   80382:	6818      	ldr	r0, [r3, #0]
}
   80384:	f000 0001 	and.w	r0, r0, #1
   80388:	4770      	bx	lr
   8038a:	bf00      	nop
   8038c:	400e0814 	.word	0x400e0814

00080390 <uart_send_char>:
 * Send character
 * Write character to Transmit Holding Register.
 */
void uart_send_char(uint8_t chr)
{
	UART_THR = chr;
   80390:	4b01      	ldr	r3, [pc, #4]	; (80398 <uart_send_char+0x8>)
   80392:	6018      	str	r0, [r3, #0]
   80394:	4770      	bx	lr
   80396:	bf00      	nop
   80398:	400e081c 	.word	0x400e081c

0008039c <uart_receive_char>:
 */
char uart_receive_char(void)
{
	char chr = UART_RHR;
	return chr;
   8039c:	4b01      	ldr	r3, [pc, #4]	; (803a4 <uart_receive_char+0x8>)
   8039e:	7818      	ldrb	r0, [r3, #0]
   803a0:	4770      	bx	lr
   803a2:	bf00      	nop
   803a4:	400e0818 	.word	0x400e0818

000803a8 <io_pin_dir>:
#include "common/pin_mapper.h"
#include "io_control/analog_output.h"
#include "io_control/adc.h"
#include "io_control/dac.h"

void io_pin_dir(uint8_t pin,int8_t dir){
   803a8:	b510      	push	{r4, lr}
   803aa:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   803ac:	4b0e      	ldr	r3, [pc, #56]	; (803e8 <io_pin_dir+0x40>)
   803ae:	4798      	blx	r3
	ioport_set_pin_dir(mapp_pin,dir);
   803b0:	b2e1      	uxtb	r1, r4
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   803b2:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   803b4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   803b8:	f203 7307 	addw	r3, r3, #1799	; 0x707
   803bc:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
   803be:	2901      	cmp	r1, #1
   803c0:	d105      	bne.n	803ce <io_pin_dir+0x26>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   803c2:	f000 011f 	and.w	r1, r0, #31
   803c6:	2201      	movs	r2, #1
   803c8:	408a      	lsls	r2, r1
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803ca:	611a      	str	r2, [r3, #16]
   803cc:	e005      	b.n	803da <io_pin_dir+0x32>
	} else if (dir == IOPORT_DIR_INPUT) {
   803ce:	b921      	cbnz	r1, 803da <io_pin_dir+0x32>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   803d0:	f000 011f 	and.w	r1, r0, #31
   803d4:	2201      	movs	r2, #1
   803d6:	408a      	lsls	r2, r1
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   803d8:	615a      	str	r2, [r3, #20]
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   803da:	f000 001f 	and.w	r0, r0, #31
   803de:	2201      	movs	r2, #1
   803e0:	4082      	lsls	r2, r0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803e2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
   803e6:	bd10      	pop	{r4, pc}
   803e8:	000801dd 	.word	0x000801dd

000803ec <io_pin_level>:
}

void io_pin_level(int8_t pin,int8_t level){
   803ec:	b510      	push	{r4, lr}
   803ee:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   803f0:	b2c0      	uxtb	r0, r0
   803f2:	4b0a      	ldr	r3, [pc, #40]	; (8041c <io_pin_level+0x30>)
   803f4:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   803f6:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   803f8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   803fc:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80400:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   80402:	b12c      	cbz	r4, 80410 <io_pin_level+0x24>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80404:	f000 001f 	and.w	r0, r0, #31
   80408:	2201      	movs	r2, #1
   8040a:	4082      	lsls	r2, r0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8040c:	631a      	str	r2, [r3, #48]	; 0x30
   8040e:	bd10      	pop	{r4, pc}
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80410:	f000 001f 	and.w	r0, r0, #31
   80414:	2201      	movs	r2, #1
   80416:	4082      	lsls	r2, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80418:	635a      	str	r2, [r3, #52]	; 0x34
   8041a:	bd10      	pop	{r4, pc}
   8041c:	000801dd 	.word	0x000801dd

00080420 <io_pin_status>:
	ioport_set_pin_level(mapp_pin,level);
}

int8_t io_pin_status(int8_t pin){
   80420:	b508      	push	{r3, lr}
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   80422:	b2c0      	uxtb	r0, r0
   80424:	4b08      	ldr	r3, [pc, #32]	; (80448 <io_pin_status+0x28>)
   80426:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   80428:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   8042a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8042e:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80432:	025b      	lsls	r3, r3, #9
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80434:	6bda      	ldr	r2, [r3, #60]	; 0x3c
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80436:	f000 001f 	and.w	r0, r0, #31
   8043a:	2301      	movs	r3, #1
   8043c:	4083      	lsls	r3, r0
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   8043e:	4213      	tst	r3, r2
	return ioport_get_pin_level(mapp_pin);
}
   80440:	bf14      	ite	ne
   80442:	2001      	movne	r0, #1
   80444:	2000      	moveq	r0, #0
   80446:	bd08      	pop	{r3, pc}
   80448:	000801dd 	.word	0x000801dd

0008044c <io_pwm_duty>:

void io_pwm_duty(uint8_t duty){
   8044c:	b508      	push	{r3, lr}
	pwm_set_duty(duty);
   8044e:	4b01      	ldr	r3, [pc, #4]	; (80454 <io_pwm_duty+0x8>)
   80450:	4798      	blx	r3
   80452:	bd08      	pop	{r3, pc}
   80454:	00080205 	.word	0x00080205

00080458 <io_adc_value>:
}

uint16_t io_adc_value(uint32_t channel){
   80458:	b508      	push	{r3, lr}
	return read_adc_value(channel);
   8045a:	4b01      	ldr	r3, [pc, #4]	; (80460 <io_adc_value+0x8>)
   8045c:	4798      	blx	r3
}
   8045e:	bd08      	pop	{r3, pc}
   80460:	000808e1 	.word	0x000808e1

00080464 <send_char_term>:

void send_char_term(uint8_t chr){
   80464:	b538      	push	{r3, r4, r5, lr}
   80466:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   80468:	4c07      	ldr	r4, [pc, #28]	; (80488 <send_char_term+0x24>)
   8046a:	47a0      	blx	r4
   8046c:	2800      	cmp	r0, #0
   8046e:	d0fc      	beq.n	8046a <send_char_term+0x6>
	uart_send_char(chr);
   80470:	4628      	mov	r0, r5
   80472:	4b06      	ldr	r3, [pc, #24]	; (8048c <send_char_term+0x28>)
   80474:	4798      	blx	r3
	/*Line terminator*/
	while (!uart_transmitter_ready());
   80476:	4c04      	ldr	r4, [pc, #16]	; (80488 <send_char_term+0x24>)
   80478:	47a0      	blx	r4
   8047a:	2800      	cmp	r0, #0
   8047c:	d0fc      	beq.n	80478 <send_char_term+0x14>
	uart_send_char(10);
   8047e:	200a      	movs	r0, #10
   80480:	4b02      	ldr	r3, [pc, #8]	; (8048c <send_char_term+0x28>)
   80482:	4798      	blx	r3
   80484:	bd38      	pop	{r3, r4, r5, pc}
   80486:	bf00      	nop
   80488:	00080371 	.word	0x00080371
   8048c:	00080391 	.word	0x00080391

00080490 <send_char_no_term>:
}

void send_char_no_term(uint8_t chr){
   80490:	b538      	push	{r3, r4, r5, lr}
   80492:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   80494:	4c03      	ldr	r4, [pc, #12]	; (804a4 <send_char_no_term+0x14>)
   80496:	47a0      	blx	r4
   80498:	2800      	cmp	r0, #0
   8049a:	d0fc      	beq.n	80496 <send_char_no_term+0x6>
	uart_send_char(chr);
   8049c:	4628      	mov	r0, r5
   8049e:	4b02      	ldr	r3, [pc, #8]	; (804a8 <send_char_no_term+0x18>)
   804a0:	4798      	blx	r3
   804a2:	bd38      	pop	{r3, r4, r5, pc}
   804a4:	00080371 	.word	0x00080371
   804a8:	00080391 	.word	0x00080391

000804ac <read_char>:
}

uint8_t read_char(void){
   804ac:	b508      	push	{r3, lr}
	/*Read char if receiver is ready*/
	if (uart_receiver_ready())
   804ae:	4b04      	ldr	r3, [pc, #16]	; (804c0 <read_char+0x14>)
   804b0:	4798      	blx	r3
   804b2:	b110      	cbz	r0, 804ba <read_char+0xe>
	{
		return uart_receive_char();
   804b4:	4b03      	ldr	r3, [pc, #12]	; (804c4 <read_char+0x18>)
   804b6:	4798      	blx	r3
   804b8:	bd08      	pop	{r3, pc}
	}
	/*failed to read char*/
	return 0;
   804ba:	2000      	movs	r0, #0
}
   804bc:	bd08      	pop	{r3, pc}
   804be:	bf00      	nop
   804c0:	00080381 	.word	0x00080381
   804c4:	0008039d 	.word	0x0008039d

000804c8 <read_when_ready>:

uint8_t read_when_ready(void){
   804c8:	b510      	push	{r4, lr}
	while (!uart_receiver_ready());
   804ca:	4c03      	ldr	r4, [pc, #12]	; (804d8 <read_when_ready+0x10>)
   804cc:	47a0      	blx	r4
   804ce:	2800      	cmp	r0, #0
   804d0:	d0fc      	beq.n	804cc <read_when_ready+0x4>
	return read_char();
   804d2:	4b02      	ldr	r3, [pc, #8]	; (804dc <read_when_ready+0x14>)
   804d4:	4798      	blx	r3
}
   804d6:	bd10      	pop	{r4, pc}
   804d8:	00080381 	.word	0x00080381
   804dc:	000804ad 	.word	0x000804ad

000804e0 <send_number>:

void send_number(uint16_t nbr){
   804e0:	b530      	push	{r4, r5, lr}
   804e2:	b085      	sub	sp, #20
   804e4:	4602      	mov	r2, r0
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
   804e6:	a801      	add	r0, sp, #4
   804e8:	4908      	ldr	r1, [pc, #32]	; (8050c <send_number+0x2c>)
   804ea:	4b09      	ldr	r3, [pc, #36]	; (80510 <send_number+0x30>)
   804ec:	4798      	blx	r3
	
	while (string[i] != '\0')
   804ee:	f89d 0004 	ldrb.w	r0, [sp, #4]
   804f2:	b130      	cbz	r0, 80502 <send_number+0x22>
   804f4:	ac01      	add	r4, sp, #4
	{
		send_char_no_term(string[i]);
   804f6:	4d07      	ldr	r5, [pc, #28]	; (80514 <send_number+0x34>)
   804f8:	47a8      	blx	r5
void send_number(uint16_t nbr){
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
	
	while (string[i] != '\0')
   804fa:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   804fe:	2800      	cmp	r0, #0
   80500:	d1fa      	bne.n	804f8 <send_number+0x18>
	{
		send_char_no_term(string[i]);
		i++;
	}
	
	send_char_term(13); //Carriage Return and terminator;
   80502:	200d      	movs	r0, #13
   80504:	4b04      	ldr	r3, [pc, #16]	; (80518 <send_number+0x38>)
   80506:	4798      	blx	r3
}
   80508:	b005      	add	sp, #20
   8050a:	bd30      	pop	{r4, r5, pc}
   8050c:	00085b84 	.word	0x00085b84
   80510:	00081111 	.word	0x00081111
   80514:	00080491 	.word	0x00080491
   80518:	00080465 	.word	0x00080465

0008051c <io_dac_value>:

void io_dac_value(uint8_t value){
   8051c:	b508      	push	{r3, lr}
	dac_write(value);
   8051e:	4b01      	ldr	r3, [pc, #4]	; (80524 <io_dac_value+0x8>)
   80520:	4798      	blx	r3
   80522:	bd08      	pop	{r3, pc}
   80524:	00080309 	.word	0x00080309

00080528 <start_coms>:
#include "io_control/io_uart.h"
#include "matlab_coms/matlab_functions.h"
#include "matlab_coms/matlab_state.h"


void start_coms(){
   80528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint16_t adc_val;
	pin = 0;
	val = 0;
	adc_val = 0;
	
	state next_state = STANDBY;
   8052a:	2400      	movs	r4, #0
			val = 0;
			next_state = STANDBY;
			break;
			
			case A_READ:
			pin = read_when_ready();
   8052c:	4d2c      	ldr	r5, [pc, #176]	; (805e0 <start_coms+0xb8>)
			adc_val = io_adc_value(pin);
   8052e:	4f2d      	ldr	r7, [pc, #180]	; (805e4 <start_coms+0xbc>)
			send_number(adc_val);
   80530:	4e2d      	ldr	r6, [pc, #180]	; (805e8 <start_coms+0xc0>)
	state next_state = STANDBY;
	state current_state = STANDBY;
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
   80532:	2c07      	cmp	r4, #7
   80534:	d8fd      	bhi.n	80532 <start_coms+0xa>
   80536:	e8df f004 	tbb	[pc, r4]
   8053a:	2104      	.short	0x2104
   8053c:	443c3126 	.word	0x443c3126
   80540:	4e49      	.short	0x4e49
			case STANDBY:
			switch (read_char())
   80542:	4b2a      	ldr	r3, [pc, #168]	; (805ec <start_coms+0xc4>)
   80544:	4798      	blx	r3
   80546:	2858      	cmp	r0, #88	; 0x58
   80548:	d012      	beq.n	80570 <start_coms+0x48>
   8054a:	d806      	bhi.n	8055a <start_coms+0x32>
   8054c:	2856      	cmp	r0, #86	; 0x56
   8054e:	d00b      	beq.n	80568 <start_coms+0x40>
   80550:	d80c      	bhi.n	8056c <start_coms+0x44>
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
   80552:	2805      	cmp	r0, #5
   80554:	bf08      	it	eq
   80556:	2401      	moveq	r4, #1
   80558:	e7eb      	b.n	80532 <start_coms+0xa>
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
			case STANDBY:
			switch (read_char())
   8055a:	285a      	cmp	r0, #90	; 0x5a
   8055c:	d00c      	beq.n	80578 <start_coms+0x50>
   8055e:	d309      	bcc.n	80574 <start_coms+0x4c>
				break;
				case ANALOG_READ:
				next_state = A_READ;
				break;
				case ANALOG_WRITE_D:
				next_state = A_WRITE_DAC;
   80560:	285b      	cmp	r0, #91	; 0x5b
   80562:	bf08      	it	eq
   80564:	2406      	moveq	r4, #6
   80566:	e7e4      	b.n	80532 <start_coms+0xa>
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
				break;
				case PIN_MODE:
				next_state = P_MODE;
   80568:	2402      	movs	r4, #2
				break;
   8056a:	e7e2      	b.n	80532 <start_coms+0xa>
				case DIGITAL_WRITE:
				next_state = D_WRITE;
   8056c:	2403      	movs	r4, #3
				break;
   8056e:	e7e0      	b.n	80532 <start_coms+0xa>
				case DIGITAL_READ:
				next_state = D_READ;
   80570:	2404      	movs	r4, #4
				break;
   80572:	e7de      	b.n	80532 <start_coms+0xa>
				case ANALOG_WRITE:
				next_state = A_WRITE;
   80574:	2405      	movs	r4, #5
				break;
   80576:	e7dc      	b.n	80532 <start_coms+0xa>
				case ANALOG_READ:
				next_state = A_READ;
   80578:	2407      	movs	r4, #7
				break;
   8057a:	e7da      	b.n	80532 <start_coms+0xa>
				break;
			}
			break;
			
			case HANDSHAKE: /*Handshake with matlab*/
			send_char_term(ACK);
   8057c:	2006      	movs	r0, #6
   8057e:	4b1c      	ldr	r3, [pc, #112]	; (805f0 <start_coms+0xc8>)
   80580:	4798      	blx	r3
			next_state = STANDBY;
   80582:	2400      	movs	r4, #0
			break;
   80584:	e7d5      	b.n	80532 <start_coms+0xa>
			
			case P_MODE: 
			pin = read_when_ready();
   80586:	47a8      	blx	r5
   80588:	4604      	mov	r4, r0
			val = read_when_ready();
   8058a:	47a8      	blx	r5
			io_pin_dir(pin,(val-10));	//calculate value
   8058c:	f1a0 010a 	sub.w	r1, r0, #10
   80590:	4620      	mov	r0, r4
   80592:	b249      	sxtb	r1, r1
   80594:	4b17      	ldr	r3, [pc, #92]	; (805f4 <start_coms+0xcc>)
   80596:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   80598:	2400      	movs	r4, #0
			break;
   8059a:	e7ca      	b.n	80532 <start_coms+0xa>
			
			case D_WRITE:
			pin = read_when_ready();
   8059c:	47a8      	blx	r5
   8059e:	4604      	mov	r4, r0
			val = read_when_ready();
   805a0:	47a8      	blx	r5
			io_pin_level(pin,(val-10));	//calculate value
   805a2:	f1a0 010a 	sub.w	r1, r0, #10
   805a6:	b260      	sxtb	r0, r4
   805a8:	b249      	sxtb	r1, r1
   805aa:	4b13      	ldr	r3, [pc, #76]	; (805f8 <start_coms+0xd0>)
   805ac:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   805ae:	2400      	movs	r4, #0
			break;
   805b0:	e7bf      	b.n	80532 <start_coms+0xa>
			
			case D_READ:
			pin = read_when_ready();
   805b2:	47a8      	blx	r5
			val = io_pin_status(pin);
   805b4:	b240      	sxtb	r0, r0
   805b6:	4b11      	ldr	r3, [pc, #68]	; (805fc <start_coms+0xd4>)
   805b8:	4798      	blx	r3
			send_number(val);
   805ba:	b2c0      	uxtb	r0, r0
   805bc:	47b0      	blx	r6
			pin = 0;
			val = 0;
			next_state = STANDBY;
   805be:	2400      	movs	r4, #0
			break;
   805c0:	e7b7      	b.n	80532 <start_coms+0xa>
			
			case A_WRITE:
			val = read_when_ready();
   805c2:	47a8      	blx	r5
			io_pwm_duty(val);
   805c4:	4b0e      	ldr	r3, [pc, #56]	; (80600 <start_coms+0xd8>)
   805c6:	4798      	blx	r3
			val = 0;
			next_state = STANDBY;
   805c8:	2400      	movs	r4, #0
			break;
   805ca:	e7b2      	b.n	80532 <start_coms+0xa>

			case A_WRITE_DAC:
			val = read_when_ready();
   805cc:	47a8      	blx	r5
			io_dac_value(val);
   805ce:	4b0d      	ldr	r3, [pc, #52]	; (80604 <start_coms+0xdc>)
   805d0:	4798      	blx	r3
			val = 0;
			next_state = STANDBY;
   805d2:	2400      	movs	r4, #0
			break;
   805d4:	e7ad      	b.n	80532 <start_coms+0xa>
			
			case A_READ:
			pin = read_when_ready();
   805d6:	47a8      	blx	r5
			adc_val = io_adc_value(pin);
   805d8:	47b8      	blx	r7
			send_number(adc_val);
   805da:	47b0      	blx	r6
			pin = 0;
			adc_val = 0;
			next_state = STANDBY;
   805dc:	2400      	movs	r4, #0
			break;
   805de:	e7a8      	b.n	80532 <start_coms+0xa>
   805e0:	000804c9 	.word	0x000804c9
   805e4:	00080459 	.word	0x00080459
   805e8:	000804e1 	.word	0x000804e1
   805ec:	000804ad 	.word	0x000804ad
   805f0:	00080465 	.word	0x00080465
   805f4:	000803a9 	.word	0x000803a9
   805f8:	000803ed 	.word	0x000803ed
   805fc:	00080421 	.word	0x00080421
   80600:	0008044d 	.word	0x0008044d
   80604:	0008051d 	.word	0x0008051d

00080608 <dacc_reset>:
 *
 * \param p_dacc Pointer to a DACC instance. 
 */
void dacc_reset(Dacc *p_dacc)
{
	p_dacc->DACC_CR = DACC_CR_SWRST;
   80608:	2301      	movs	r3, #1
   8060a:	6003      	str	r3, [r0, #0]
   8060c:	4770      	bx	lr
   8060e:	bf00      	nop

00080610 <dacc_set_transfer_mode>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
	if (ul_mode) {
   80610:	b121      	cbz	r1, 8061c <dacc_set_transfer_mode+0xc>
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR |= DACC_MR_WORD;
#else
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   80612:	6843      	ldr	r3, [r0, #4]
   80614:	f043 0310 	orr.w	r3, r3, #16
   80618:	6043      	str	r3, [r0, #4]
   8061a:	e003      	b.n	80624 <dacc_set_transfer_mode+0x14>
#endif
	} else {
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR &= (~DACC_MR_WORD);
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   8061c:	6843      	ldr	r3, [r0, #4]
   8061e:	f023 0310 	bic.w	r3, r3, #16
   80622:	6043      	str	r3, [r0, #4]
#endif
	}
	return DACC_RC_OK;
}
   80624:	2000      	movs	r0, #0
   80626:	4770      	bx	lr

00080628 <dacc_write_conversion_data>:
 * \param p_dacc Pointer to a DACC instance. 
 * \param ul_data The data to be transferred to analog value. 
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
	p_dacc->DACC_CDR = ul_data;
   80628:	6201      	str	r1, [r0, #32]
   8062a:	4770      	bx	lr

0008062c <dacc_set_channel_selection>:
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   8062c:	6843      	ldr	r3, [r0, #4]
	if (ul_channel > MAX_CH_NB) {
   8062e:	2901      	cmp	r1, #1
   80630:	d806      	bhi.n	80640 <dacc_set_channel_selection+0x14>
		return DACC_RC_INVALID_PARAM;
	}
	mr &= ~(DACC_MR_TAG);
   80632:	f423 1398 	bic.w	r3, r3, #1245184	; 0x130000
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   80636:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
	p_dacc->DACC_MR = mr;
   8063a:	6041      	str	r1, [r0, #4]
	return DACC_RC_OK;
   8063c:	2000      	movs	r0, #0
   8063e:	4770      	bx	lr
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
	if (ul_channel > MAX_CH_NB) {
		return DACC_RC_INVALID_PARAM;
   80640:	2001      	movs	r0, #1
	}
	mr &= ~(DACC_MR_TAG);
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
	p_dacc->DACC_MR = mr;
	return DACC_RC_OK;
}
   80642:	4770      	bx	lr

00080644 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   80644:	b410      	push	{r4}
	uint32_t mr = p_dacc->DACC_MR
   80646:	6844      	ldr	r4, [r0, #4]
   80648:	f024 547c 	bic.w	r4, r4, #1056964608	; 0x3f000000
   8064c:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
		& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   80650:	0209      	lsls	r1, r1, #8
   80652:	b289      	uxth	r1, r1
   80654:	430c      	orrs	r4, r1
	if (ul_maxs) {
   80656:	b112      	cbz	r2, 8065e <dacc_set_timing+0x1a>
		mr |= DACC_MR_MAXS;
   80658:	f444 1400 	orr.w	r4, r4, #2097152	; 0x200000
   8065c:	e001      	b.n	80662 <dacc_set_timing+0x1e>
	} else {
		mr &= ~DACC_MR_MAXS;
   8065e:	f424 1400 	bic.w	r4, r4, #2097152	; 0x200000
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   80662:	061b      	lsls	r3, r3, #24
   80664:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   80668:	431c      	orrs	r4, r3
	p_dacc->DACC_MR = mr;
   8066a:	6044      	str	r4, [r0, #4]
	return DACC_RC_OK;
}
   8066c:	2000      	movs	r0, #0
   8066e:	f85d 4b04 	ldr.w	r4, [sp], #4
   80672:	4770      	bx	lr

00080674 <dacc_enable_channel>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
   80674:	2901      	cmp	r1, #1
   80676:	d804      	bhi.n	80682 <dacc_enable_channel+0xe>
		return DACC_RC_INVALID_PARAM;

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   80678:	2301      	movs	r3, #1
   8067a:	408b      	lsls	r3, r1
   8067c:	6103      	str	r3, [r0, #16]
	return DACC_RC_OK;
   8067e:	2000      	movs	r0, #0
   80680:	4770      	bx	lr
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
		return DACC_RC_INVALID_PARAM;
   80682:	2001      	movs	r0, #1

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
	return DACC_RC_OK;
}
   80684:	4770      	bx	lr
   80686:	bf00      	nop

00080688 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
   80688:	b4f0      	push	{r4, r5, r6, r7}
   8068a:	b08c      	sub	sp, #48	; 0x30
   8068c:	4607      	mov	r7, r0
   8068e:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
   80690:	ac01      	add	r4, sp, #4
   80692:	4d11      	ldr	r5, [pc, #68]	; (806d8 <pwm_clocks_generate+0x50>)
   80694:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80696:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80698:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   8069a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   8069c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   806a0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   806a4:	aa01      	add	r2, sp, #4
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
   806a6:	2000      	movs	r0, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
   806a8:	f852 3b04 	ldr.w	r3, [r2], #4
   806ac:	fbb6 f3f3 	udiv	r3, r6, r3
   806b0:	fbb3 f3f7 	udiv	r3, r3, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
   806b4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   806b8:	d905      	bls.n	806c6 <pwm_clocks_generate+0x3e>
			break;
		}
		ul_pre++;
   806ba:	3001      	adds	r0, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
   806bc:	280b      	cmp	r0, #11
   806be:	d1f3      	bne.n	806a8 <pwm_clocks_generate+0x20>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
		return ul_div | (ul_pre << 8);
	} else {
		return PWM_INVALID_ARGUMENT;
   806c0:	f64f 70ff 	movw	r0, #65535	; 0xffff
   806c4:	e005      	b.n	806d2 <pwm_clocks_generate+0x4a>
		}
		ul_pre++;
	} while (ul_pre < PWM_CLOCK_PRE_MAX);

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
   806c6:	280a      	cmp	r0, #10
		return ul_div | (ul_pre << 8);
   806c8:	bf94      	ite	ls
   806ca:	ea43 2000 	orrls.w	r0, r3, r0, lsl #8
	} else {
		return PWM_INVALID_ARGUMENT;
   806ce:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
	}
}
   806d2:	b00c      	add	sp, #48	; 0x30
   806d4:	bcf0      	pop	{r4, r5, r6, r7}
   806d6:	4770      	bx	lr
   806d8:	00085b88 	.word	0x00085b88

000806dc <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
   806dc:	b570      	push	{r4, r5, r6, lr}
   806de:	4606      	mov	r6, r0
   806e0:	460c      	mov	r4, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
   806e2:	6808      	ldr	r0, [r1, #0]
   806e4:	b140      	cbz	r0, 806f8 <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
   806e6:	6889      	ldr	r1, [r1, #8]
   806e8:	4b0e      	ldr	r3, [pc, #56]	; (80724 <pwm_init+0x48>)
   806ea:	4798      	blx	r3
   806ec:	4605      	mov	r5, r0
		if (result == PWM_INVALID_ARGUMENT) {
   806ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
   806f2:	4298      	cmp	r0, r3
   806f4:	d101      	bne.n	806fa <pwm_init+0x1e>
   806f6:	e00e      	b.n	80716 <pwm_init+0x3a>
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
	uint32_t clock = 0;
   806f8:	2500      	movs	r5, #0

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
   806fa:	6860      	ldr	r0, [r4, #4]
   806fc:	b140      	cbz	r0, 80710 <pwm_init+0x34>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
   806fe:	68a1      	ldr	r1, [r4, #8]
   80700:	4b08      	ldr	r3, [pc, #32]	; (80724 <pwm_init+0x48>)
   80702:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
   80704:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80708:	4298      	cmp	r0, r3
   8070a:	d007      	beq.n	8071c <pwm_init+0x40>
			return result;
		}

		clock |= (result << 16);
   8070c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
   80710:	6035      	str	r5, [r6, #0]
#endif
	return 0;
   80712:	2000      	movs	r0, #0
   80714:	bd70      	pop	{r4, r5, r6, pc}

	/* Clock A */
	if (clock_config->ul_clka != 0) {
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
		if (result == PWM_INVALID_ARGUMENT) {
			return result;
   80716:	f64f 70ff 	movw	r0, #65535	; 0xffff
   8071a:	bd70      	pop	{r4, r5, r6, pc}
	/* Clock B */
	if (clock_config->ul_clkb != 0) {
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);

		if (result == PWM_INVALID_ARGUMENT) {
			return result;
   8071c:	f64f 70ff 	movw	r0, #65535	; 0xffff
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
#endif
	return 0;
}
   80720:	bd70      	pop	{r4, r5, r6, pc}
   80722:	bf00      	nop
   80724:	00080689 	.word	0x00080689

00080728 <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
   80728:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
   8072a:	680b      	ldr	r3, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   8072c:	8a8a      	ldrh	r2, [r1, #20]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   8072e:	684c      	ldr	r4, [r1, #4]
   80730:	f004 040f 	and.w	r4, r4, #15
   80734:	4322      	orrs	r2, r4
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
   80736:	890c      	ldrh	r4, [r1, #8]
   80738:	4322      	orrs	r2, r4
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   8073a:	7a8c      	ldrb	r4, [r1, #10]
   8073c:	ea42 2244 	orr.w	r2, r2, r4, lsl #9
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
			(p_channel->b_deadtime_generator << 16) |
   80740:	7d8c      	ldrb	r4, [r1, #22]
   80742:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
   80746:	7dcc      	ldrb	r4, [r1, #23]
   80748:	ea42 4244 	orr.w	r2, r2, r4, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
   8074c:	7e0c      	ldrb	r4, [r1, #24]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   8074e:	ea42 4284 	orr.w	r2, r2, r4, lsl #18
   80752:	eb00 1443 	add.w	r4, r0, r3, lsl #5
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
   80756:	f8c4 2200 	str.w	r2, [r4, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
   8075a:	68ca      	ldr	r2, [r1, #12]
   8075c:	f8c4 2204 	str.w	r2, [r4, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
   80760:	690a      	ldr	r2, [r1, #16]
   80762:	f8c4 220c 	str.w	r2, [r4, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
   80766:	7d8a      	ldrb	r2, [r1, #22]
   80768:	b13a      	cbz	r2, 8077a <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
   8076a:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
   8076c:	8b4a      	ldrh	r2, [r1, #26]
   8076e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
   80772:	eb00 1443 	add.w	r4, r0, r3, lsl #5
   80776:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
   8077a:	6c84      	ldr	r4, [r0, #72]	; 0x48
   8077c:	f04f 1201 	mov.w	r2, #65537	; 0x10001
   80780:	409a      	lsls	r2, r3
   80782:	43d2      	mvns	r2, r2
   80784:	ea02 0504 	and.w	r5, r2, r4
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
   80788:	7fcc      	ldrb	r4, [r1, #31]
   8078a:	fa04 f603 	lsl.w	r6, r4, r3
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
   8078e:	7f8c      	ldrb	r4, [r1, #30]
   80790:	409c      	lsls	r4, r3
   80792:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   80796:	432c      	orrs	r4, r5
			(((p_channel->output_selection.b_override_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
   80798:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
   8079a:	6c44      	ldr	r4, [r0, #68]	; 0x44
   8079c:	4014      	ands	r4, r2
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
   8079e:	f891 2021 	ldrb.w	r2, [r1, #33]	; 0x21
   807a2:	fa02 f503 	lsl.w	r5, r2, r3
					<< 16);
	p_pwm->PWM_OS = tmp_reg;

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
   807a6:	f891 2020 	ldrb.w	r2, [r1, #32]
   807aa:	409a      	lsls	r2, r3
   807ac:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
   807b0:	4322      	orrs	r2, r4
			(((p_channel->output_selection.override_level_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
   807b2:	6442      	str	r2, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
   807b4:	2201      	movs	r2, #1
   807b6:	409a      	lsls	r2, r3
	if (p_channel->b_sync_ch) {
   807b8:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   807bc:	b11c      	cbz	r4, 807c6 <pwm_channel_init+0x9e>
		p_pwm->PWM_SCM |= channel;
   807be:	6a04      	ldr	r4, [r0, #32]
   807c0:	4314      	orrs	r4, r2
   807c2:	6204      	str	r4, [r0, #32]
   807c4:	e003      	b.n	807ce <pwm_channel_init+0xa6>
	} else {
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
   807c6:	6a04      	ldr	r4, [r0, #32]
   807c8:	ea24 0402 	bic.w	r4, r4, r2
   807cc:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
   807ce:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   807d2:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
   807d4:	6e84      	ldr	r4, [r0, #104]	; 0x68
   807d6:	bf0c      	ite	eq
   807d8:	4314      	orreq	r4, r2
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
   807da:	4394      	bicne	r4, r2
   807dc:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
   807de:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   807e2:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
   807e4:	6e84      	ldr	r4, [r0, #104]	; 0x68
   807e6:	bf0c      	ite	eq
   807e8:	ea44 4202 	orreq.w	r2, r4, r2, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
   807ec:	ea24 4202 	bicne.w	r2, r4, r2, lsl #16
   807f0:	6682      	str	r2, [r0, #104]	; 0x68
	}
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
   807f2:	2b03      	cmp	r3, #3
   807f4:	d80b      	bhi.n	8080e <pwm_channel_init+0xe6>
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE1;
   807f6:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
		ch_num *= 8;
   807f8:	00dd      	lsls	r5, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE1;
		fault_enable_reg &= ~(0xFF << ch_num);
   807fa:	22ff      	movs	r2, #255	; 0xff
   807fc:	40aa      	lsls	r2, r5
   807fe:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   80802:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
   80806:	40ab      	lsls	r3, r5
   80808:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE1 = fault_enable_reg;
   8080a:	66c3      	str	r3, [r0, #108]	; 0x6c
   8080c:	e00c      	b.n	80828 <pwm_channel_init+0x100>
	} else {
		ch_num -= 4;
   8080e:	3b04      	subs	r3, #4
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE2;
   80810:	6f02      	ldr	r2, [r0, #112]	; 0x70
		fault_enable_reg &= ~(0xFF << ch_num);
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
		p_pwm->PWM_FPE1 = fault_enable_reg;
	} else {
		ch_num -= 4;
		ch_num *= 8;
   80812:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE2;
		fault_enable_reg &= ~(0xFF << ch_num);
   80814:	24ff      	movs	r4, #255	; 0xff
   80816:	409c      	lsls	r4, r3
   80818:	ea22 0404 	bic.w	r4, r2, r4
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   8081c:	f891 2023 	ldrb.w	r2, [r1, #35]	; 0x23
   80820:	fa02 f303 	lsl.w	r3, r2, r3
   80824:	4323      	orrs	r3, r4
		p_pwm->PWM_FPE2 = fault_enable_reg;
   80826:	6703      	str	r3, [r0, #112]	; 0x70
			PWM_CAE_ADEDGV(p_channel->ul_additional_edge) |
			p_channel->additional_edge_mode;
#endif

	return 0;
}
   80828:	2000      	movs	r0, #0
   8082a:	bc70      	pop	{r4, r5, r6}
   8082c:	4770      	bx	lr
   8082e:	bf00      	nop

00080830 <pwm_channel_update_duty>:
 *
 * \retval 0 if changing succeeds, otherwise fails.
 */
uint32_t pwm_channel_update_duty(Pwm *p_pwm, pwm_channel_t *p_channel,
		uint32_t ul_duty)
{
   80830:	b410      	push	{r4}
	uint32_t ch_num = p_channel->channel;
   80832:	680c      	ldr	r4, [r1, #0]

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
   80834:	690b      	ldr	r3, [r1, #16]
   80836:	4293      	cmp	r3, r2
   80838:	d306      	bcc.n	80848 <pwm_channel_update_duty+0x18>
		return PWM_INVALID_ARGUMENT;
	} else {
		/* Save new duty cycle value */
		p_channel->ul_duty = ul_duty;
   8083a:	60ca      	str	r2, [r1, #12]
		mode &= ~PWM_CMR_CPD;
		p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = mode;

		p_pwm->PWM_CH_NUM[ch_num].PWM_CUPD = ul_duty;
#else
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
   8083c:	eb00 1044 	add.w	r0, r0, r4, lsl #5
   80840:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
#endif
	}

	return 0;
   80844:	2000      	movs	r0, #0
   80846:	e001      	b.n	8084c <pwm_channel_update_duty+0x1c>
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
		return PWM_INVALID_ARGUMENT;
   80848:	f64f 70ff 	movw	r0, #65535	; 0xffff
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
#endif
	}

	return 0;
}
   8084c:	f85d 4b04 	ldr.w	r4, [sp], #4
   80850:	4770      	bx	lr
   80852:	bf00      	nop

00080854 <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
   80854:	2301      	movs	r3, #1
   80856:	408b      	lsls	r3, r1
   80858:	6043      	str	r3, [r0, #4]
   8085a:	4770      	bx	lr

0008085c <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
   8085c:	2301      	movs	r3, #1
   8085e:	408b      	lsls	r3, r1
   80860:	6083      	str	r3, [r0, #8]
   80862:	4770      	bx	lr

00080864 <init_adc>:
 */ 
#include <adc.h>
#include <asf.h>
#include "io_control/adc.h"

void init_adc(){
   80864:	b538      	push	{r3, r4, r5, lr}
	pmc_enable_periph_clk(ID_ADC);
   80866:	2025      	movs	r0, #37	; 0x25
   80868:	4b13      	ldr	r3, [pc, #76]	; (808b8 <init_adc+0x54>)
   8086a:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz()/2, ADC_CLOCK, 8);
   8086c:	4c13      	ldr	r4, [pc, #76]	; (808bc <init_adc+0x58>)
   8086e:	4620      	mov	r0, r4
   80870:	4913      	ldr	r1, [pc, #76]	; (808c0 <init_adc+0x5c>)
   80872:	4a14      	ldr	r2, [pc, #80]	; (808c4 <init_adc+0x60>)
   80874:	2308      	movs	r3, #8
   80876:	4d14      	ldr	r5, [pc, #80]	; (808c8 <init_adc+0x64>)
   80878:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, ADC_SETTLING_TIME_3, 1);
   8087a:	4620      	mov	r0, r4
   8087c:	2100      	movs	r1, #0
   8087e:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
   80882:	2301      	movs	r3, #1
   80884:	4d11      	ldr	r5, [pc, #68]	; (808cc <init_adc+0x68>)
   80886:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_10);
   80888:	4620      	mov	r0, r4
   8088a:	2110      	movs	r1, #16
   8088c:	4b10      	ldr	r3, [pc, #64]	; (808d0 <init_adc+0x6c>)
   8088e:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_7);	//A0
   80890:	4620      	mov	r0, r4
   80892:	2107      	movs	r1, #7
   80894:	4d0f      	ldr	r5, [pc, #60]	; (808d4 <init_adc+0x70>)
   80896:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_6);	//A1
   80898:	4620      	mov	r0, r4
   8089a:	2106      	movs	r1, #6
   8089c:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_5);	//A2
   8089e:	4620      	mov	r0, r4
   808a0:	2105      	movs	r1, #5
   808a2:	47a8      	blx	r5
	adc_enable_all_channel(ADC);
   808a4:	4620      	mov	r0, r4
   808a6:	4b0c      	ldr	r3, [pc, #48]	; (808d8 <init_adc+0x74>)
   808a8:	4798      	blx	r3
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
   808aa:	4620      	mov	r0, r4
   808ac:	2100      	movs	r1, #0
   808ae:	460a      	mov	r2, r1
   808b0:	4b0a      	ldr	r3, [pc, #40]	; (808dc <init_adc+0x78>)
   808b2:	4798      	blx	r3
   808b4:	bd38      	pop	{r3, r4, r5, pc}
   808b6:	bf00      	nop
   808b8:	00080d89 	.word	0x00080d89
   808bc:	400c0000 	.word	0x400c0000
   808c0:	0501bd00 	.word	0x0501bd00
   808c4:	000f4240 	.word	0x000f4240
   808c8:	00080151 	.word	0x00080151
   808cc:	000801a5 	.word	0x000801a5
   808d0:	00080185 	.word	0x00080185
   808d4:	000801cd 	.word	0x000801cd
   808d8:	000801d5 	.word	0x000801d5
   808dc:	00080195 	.word	0x00080195

000808e0 <read_adc_value>:
}

uint16_t read_adc_value(uint32_t channel){
   808e0:	b538      	push	{r3, r4, r5, lr}
   808e2:	4604      	mov	r4, r0
	adc_start(ADC);
   808e4:	4d04      	ldr	r5, [pc, #16]	; (808f8 <read_adc_value+0x18>)
   808e6:	4628      	mov	r0, r5
   808e8:	4b04      	ldr	r3, [pc, #16]	; (808fc <read_adc_value+0x1c>)
   808ea:	4798      	blx	r3
	return ADC->ADC_CDR[channel];
   808ec:	3414      	adds	r4, #20
   808ee:	f855 0024 	ldr.w	r0, [r5, r4, lsl #2]
   808f2:	b280      	uxth	r0, r0
   808f4:	bd38      	pop	{r3, r4, r5, pc}
   808f6:	bf00      	nop
   808f8:	400c0000 	.word	0x400c0000
   808fc:	000801c5 	.word	0x000801c5

00080900 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80900:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   80902:	480e      	ldr	r0, [pc, #56]	; (8093c <sysclk_init+0x3c>)
   80904:	4b0e      	ldr	r3, [pc, #56]	; (80940 <sysclk_init+0x40>)
   80906:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80908:	2000      	movs	r0, #0
   8090a:	213e      	movs	r1, #62	; 0x3e
   8090c:	4b0d      	ldr	r3, [pc, #52]	; (80944 <sysclk_init+0x44>)
   8090e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   80910:	4c0d      	ldr	r4, [pc, #52]	; (80948 <sysclk_init+0x48>)
   80912:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80914:	2800      	cmp	r0, #0
   80916:	d0fc      	beq.n	80912 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80918:	4b0c      	ldr	r3, [pc, #48]	; (8094c <sysclk_init+0x4c>)
   8091a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   8091c:	4a0c      	ldr	r2, [pc, #48]	; (80950 <sysclk_init+0x50>)
   8091e:	4b0d      	ldr	r3, [pc, #52]	; (80954 <sysclk_init+0x54>)
   80920:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   80922:	4c0d      	ldr	r4, [pc, #52]	; (80958 <sysclk_init+0x58>)
   80924:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80926:	2800      	cmp	r0, #0
   80928:	d0fc      	beq.n	80924 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   8092a:	2010      	movs	r0, #16
   8092c:	4b0b      	ldr	r3, [pc, #44]	; (8095c <sysclk_init+0x5c>)
   8092e:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80930:	4b0b      	ldr	r3, [pc, #44]	; (80960 <sysclk_init+0x60>)
   80932:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80934:	4801      	ldr	r0, [pc, #4]	; (8093c <sysclk_init+0x3c>)
   80936:	4b02      	ldr	r3, [pc, #8]	; (80940 <sysclk_init+0x40>)
   80938:	4798      	blx	r3
   8093a:	bd10      	pop	{r4, pc}
   8093c:	0501bd00 	.word	0x0501bd00
   80940:	200700a5 	.word	0x200700a5
   80944:	00080d05 	.word	0x00080d05
   80948:	00080d59 	.word	0x00080d59
   8094c:	00080d69 	.word	0x00080d69
   80950:	200d3f01 	.word	0x200d3f01
   80954:	400e0600 	.word	0x400e0600
   80958:	00080d79 	.word	0x00080d79
   8095c:	00080c9d 	.word	0x00080c9d
   80960:	00080e91 	.word	0x00080e91

00080964 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80964:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80966:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   8096a:	4b16      	ldr	r3, [pc, #88]	; (809c4 <board_init+0x60>)
   8096c:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8096e:	200b      	movs	r0, #11
   80970:	4c15      	ldr	r4, [pc, #84]	; (809c8 <board_init+0x64>)
   80972:	47a0      	blx	r4
   80974:	200c      	movs	r0, #12
   80976:	47a0      	blx	r4
   80978:	200d      	movs	r0, #13
   8097a:	47a0      	blx	r4
   8097c:	200e      	movs	r0, #14
   8097e:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80980:	203b      	movs	r0, #59	; 0x3b
   80982:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80986:	4c11      	ldr	r4, [pc, #68]	; (809cc <board_init+0x68>)
   80988:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   8098a:	2055      	movs	r0, #85	; 0x55
   8098c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80990:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   80992:	2056      	movs	r0, #86	; 0x56
   80994:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80998:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   8099a:	2068      	movs	r0, #104	; 0x68
   8099c:	490c      	ldr	r1, [pc, #48]	; (809d0 <board_init+0x6c>)
   8099e:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   809a0:	205c      	movs	r0, #92	; 0x5c
   809a2:	490c      	ldr	r1, [pc, #48]	; (809d4 <board_init+0x70>)
   809a4:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   809a6:	480c      	ldr	r0, [pc, #48]	; (809d8 <board_init+0x74>)
   809a8:	f44f 7140 	mov.w	r1, #768	; 0x300
   809ac:	4a0b      	ldr	r2, [pc, #44]	; (809dc <board_init+0x78>)
   809ae:	4b0c      	ldr	r3, [pc, #48]	; (809e0 <board_init+0x7c>)
   809b0:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   809b2:	202b      	movs	r0, #43	; 0x2b
   809b4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809b8:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   809ba:	202a      	movs	r0, #42	; 0x2a
   809bc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809c0:	47a0      	blx	r4
   809c2:	bd10      	pop	{r4, pc}
   809c4:	400e1a50 	.word	0x400e1a50
   809c8:	00080d89 	.word	0x00080d89
   809cc:	00080a89 	.word	0x00080a89
   809d0:	28000079 	.word	0x28000079
   809d4:	28000001 	.word	0x28000001
   809d8:	400e0e00 	.word	0x400e0e00
   809dc:	08000001 	.word	0x08000001
   809e0:	00080b5d 	.word	0x00080b5d

000809e4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   809e4:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   809e6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   809ea:	d016      	beq.n	80a1a <pio_set_peripheral+0x36>
   809ec:	d804      	bhi.n	809f8 <pio_set_peripheral+0x14>
   809ee:	b1c1      	cbz	r1, 80a22 <pio_set_peripheral+0x3e>
   809f0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   809f4:	d00a      	beq.n	80a0c <pio_set_peripheral+0x28>
   809f6:	e013      	b.n	80a20 <pio_set_peripheral+0x3c>
   809f8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   809fc:	d011      	beq.n	80a22 <pio_set_peripheral+0x3e>
   809fe:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80a02:	d00e      	beq.n	80a22 <pio_set_peripheral+0x3e>
   80a04:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80a08:	d10a      	bne.n	80a20 <pio_set_peripheral+0x3c>
   80a0a:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80a0c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80a0e:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80a10:	400b      	ands	r3, r1
   80a12:	ea23 0302 	bic.w	r3, r3, r2
   80a16:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80a18:	e002      	b.n	80a20 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   80a1a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80a1c:	4313      	orrs	r3, r2
   80a1e:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80a20:	6042      	str	r2, [r0, #4]
   80a22:	4770      	bx	lr

00080a24 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80a24:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a26:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80a2a:	bf14      	ite	ne
   80a2c:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a2e:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80a30:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80a34:	bf14      	ite	ne
   80a36:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80a38:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80a3a:	f012 0f02 	tst.w	r2, #2
   80a3e:	d002      	beq.n	80a46 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80a40:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80a44:	e004      	b.n	80a50 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80a46:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80a4a:	bf18      	it	ne
   80a4c:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80a50:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80a52:	6001      	str	r1, [r0, #0]
   80a54:	4770      	bx	lr
   80a56:	bf00      	nop

00080a58 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80a58:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80a5a:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a5c:	9c01      	ldr	r4, [sp, #4]
   80a5e:	b10c      	cbz	r4, 80a64 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80a60:	6641      	str	r1, [r0, #100]	; 0x64
   80a62:	e000      	b.n	80a66 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a64:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80a66:	b10b      	cbz	r3, 80a6c <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80a68:	6501      	str	r1, [r0, #80]	; 0x50
   80a6a:	e000      	b.n	80a6e <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80a6c:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80a6e:	b10a      	cbz	r2, 80a74 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80a70:	6301      	str	r1, [r0, #48]	; 0x30
   80a72:	e000      	b.n	80a76 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80a74:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80a76:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80a78:	6001      	str	r1, [r0, #0]
}
   80a7a:	f85d 4b04 	ldr.w	r4, [sp], #4
   80a7e:	4770      	bx	lr

00080a80 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80a80:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80a82:	4770      	bx	lr

00080a84 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80a84:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80a86:	4770      	bx	lr

00080a88 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80a88:	b570      	push	{r4, r5, r6, lr}
   80a8a:	b082      	sub	sp, #8
   80a8c:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80a8e:	0943      	lsrs	r3, r0, #5
   80a90:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80a94:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80a98:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80a9a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   80a9e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80aa2:	d030      	beq.n	80b06 <pio_configure_pin+0x7e>
   80aa4:	d806      	bhi.n	80ab4 <pio_configure_pin+0x2c>
   80aa6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80aaa:	d00a      	beq.n	80ac2 <pio_configure_pin+0x3a>
   80aac:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80ab0:	d018      	beq.n	80ae4 <pio_configure_pin+0x5c>
   80ab2:	e049      	b.n	80b48 <pio_configure_pin+0xc0>
   80ab4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80ab8:	d030      	beq.n	80b1c <pio_configure_pin+0x94>
   80aba:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80abe:	d02d      	beq.n	80b1c <pio_configure_pin+0x94>
   80ac0:	e042      	b.n	80b48 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80ac2:	f000 001f 	and.w	r0, r0, #31
   80ac6:	2601      	movs	r6, #1
   80ac8:	4086      	lsls	r6, r0
   80aca:	4620      	mov	r0, r4
   80acc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80ad0:	4632      	mov	r2, r6
   80ad2:	4b1f      	ldr	r3, [pc, #124]	; (80b50 <pio_configure_pin+0xc8>)
   80ad4:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80ad6:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ada:	bf14      	ite	ne
   80adc:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80ade:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80ae0:	2001      	movs	r0, #1
   80ae2:	e032      	b.n	80b4a <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80ae4:	f000 001f 	and.w	r0, r0, #31
   80ae8:	2601      	movs	r6, #1
   80aea:	4086      	lsls	r6, r0
   80aec:	4620      	mov	r0, r4
   80aee:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80af2:	4632      	mov	r2, r6
   80af4:	4b16      	ldr	r3, [pc, #88]	; (80b50 <pio_configure_pin+0xc8>)
   80af6:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80af8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80afc:	bf14      	ite	ne
   80afe:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80b00:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80b02:	2001      	movs	r0, #1
   80b04:	e021      	b.n	80b4a <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80b06:	f000 031f 	and.w	r3, r0, #31
   80b0a:	2601      	movs	r6, #1
   80b0c:	4620      	mov	r0, r4
   80b0e:	fa06 f103 	lsl.w	r1, r6, r3
   80b12:	462a      	mov	r2, r5
   80b14:	4b0f      	ldr	r3, [pc, #60]	; (80b54 <pio_configure_pin+0xcc>)
   80b16:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80b18:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80b1a:	e016      	b.n	80b4a <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80b1c:	f000 031f 	and.w	r3, r0, #31
   80b20:	2601      	movs	r6, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80b22:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80b26:	ea05 0106 	and.w	r1, r5, r6
   80b2a:	9100      	str	r1, [sp, #0]
   80b2c:	4620      	mov	r0, r4
   80b2e:	fa06 f103 	lsl.w	r1, r6, r3
   80b32:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80b36:	bf14      	ite	ne
   80b38:	2200      	movne	r2, #0
   80b3a:	2201      	moveq	r2, #1
   80b3c:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80b40:	4c05      	ldr	r4, [pc, #20]	; (80b58 <pio_configure_pin+0xd0>)
   80b42:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80b44:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80b46:	e000      	b.n	80b4a <pio_configure_pin+0xc2>

	default:
		return 0;
   80b48:	2000      	movs	r0, #0
	}

	return 1;
}
   80b4a:	b002      	add	sp, #8
   80b4c:	bd70      	pop	{r4, r5, r6, pc}
   80b4e:	bf00      	nop
   80b50:	000809e5 	.word	0x000809e5
   80b54:	00080a25 	.word	0x00080a25
   80b58:	00080a59 	.word	0x00080a59

00080b5c <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80b5c:	b570      	push	{r4, r5, r6, lr}
   80b5e:	b082      	sub	sp, #8
   80b60:	4606      	mov	r6, r0
   80b62:	460d      	mov	r5, r1
   80b64:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80b66:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   80b6a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80b6e:	d026      	beq.n	80bbe <pio_configure_pin_group+0x62>
   80b70:	d806      	bhi.n	80b80 <pio_configure_pin_group+0x24>
   80b72:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80b76:	d00a      	beq.n	80b8e <pio_configure_pin_group+0x32>
   80b78:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80b7c:	d013      	beq.n	80ba6 <pio_configure_pin_group+0x4a>
   80b7e:	e034      	b.n	80bea <pio_configure_pin_group+0x8e>
   80b80:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80b84:	d01f      	beq.n	80bc6 <pio_configure_pin_group+0x6a>
   80b86:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80b8a:	d01c      	beq.n	80bc6 <pio_configure_pin_group+0x6a>
   80b8c:	e02d      	b.n	80bea <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80b8e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80b92:	462a      	mov	r2, r5
   80b94:	4b16      	ldr	r3, [pc, #88]	; (80bf0 <pio_configure_pin_group+0x94>)
   80b96:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80b98:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80b9c:	bf14      	ite	ne
   80b9e:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80ba0:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80ba2:	2001      	movs	r0, #1
   80ba4:	e022      	b.n	80bec <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80ba6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80baa:	462a      	mov	r2, r5
   80bac:	4b10      	ldr	r3, [pc, #64]	; (80bf0 <pio_configure_pin_group+0x94>)
   80bae:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80bb0:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80bb4:	bf14      	ite	ne
   80bb6:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80bb8:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80bba:	2001      	movs	r0, #1
   80bbc:	e016      	b.n	80bec <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80bbe:	4b0d      	ldr	r3, [pc, #52]	; (80bf4 <pio_configure_pin_group+0x98>)
   80bc0:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80bc2:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80bc4:	e012      	b.n	80bec <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80bc6:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80bca:	f004 0301 	and.w	r3, r4, #1
   80bce:	9300      	str	r3, [sp, #0]
   80bd0:	4630      	mov	r0, r6
   80bd2:	4629      	mov	r1, r5
   80bd4:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80bd8:	bf14      	ite	ne
   80bda:	2200      	movne	r2, #0
   80bdc:	2201      	moveq	r2, #1
   80bde:	f3c4 0380 	ubfx	r3, r4, #2, #1
   80be2:	4c05      	ldr	r4, [pc, #20]	; (80bf8 <pio_configure_pin_group+0x9c>)
   80be4:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80be6:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80be8:	e000      	b.n	80bec <pio_configure_pin_group+0x90>

	default:
		return 0;
   80bea:	2000      	movs	r0, #0
	}

	return 1;
}
   80bec:	b002      	add	sp, #8
   80bee:	bd70      	pop	{r4, r5, r6, pc}
   80bf0:	000809e5 	.word	0x000809e5
   80bf4:	00080a25 	.word	0x00080a25
   80bf8:	00080a59 	.word	0x00080a59

00080bfc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80bfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80c00:	4604      	mov	r4, r0
   80c02:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80c04:	4b0e      	ldr	r3, [pc, #56]	; (80c40 <pio_handler_process+0x44>)
   80c06:	4798      	blx	r3
   80c08:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80c0a:	4620      	mov	r0, r4
   80c0c:	4b0d      	ldr	r3, [pc, #52]	; (80c44 <pio_handler_process+0x48>)
   80c0e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80c10:	4005      	ands	r5, r0
   80c12:	d013      	beq.n	80c3c <pio_handler_process+0x40>
   80c14:	4c0c      	ldr	r4, [pc, #48]	; (80c48 <pio_handler_process+0x4c>)
   80c16:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80c1a:	6823      	ldr	r3, [r4, #0]
   80c1c:	4543      	cmp	r3, r8
   80c1e:	d108      	bne.n	80c32 <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80c20:	6861      	ldr	r1, [r4, #4]
   80c22:	4229      	tst	r1, r5
   80c24:	d005      	beq.n	80c32 <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c26:	68e3      	ldr	r3, [r4, #12]
   80c28:	4640      	mov	r0, r8
   80c2a:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80c2c:	6863      	ldr	r3, [r4, #4]
   80c2e:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80c32:	42b4      	cmp	r4, r6
   80c34:	d002      	beq.n	80c3c <pio_handler_process+0x40>
   80c36:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80c38:	2d00      	cmp	r5, #0
   80c3a:	d1ee      	bne.n	80c1a <pio_handler_process+0x1e>
   80c3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80c40:	00080a81 	.word	0x00080a81
   80c44:	00080a85 	.word	0x00080a85
   80c48:	20070a30 	.word	0x20070a30

00080c4c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80c4c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80c4e:	4802      	ldr	r0, [pc, #8]	; (80c58 <PIOA_Handler+0xc>)
   80c50:	210b      	movs	r1, #11
   80c52:	4b02      	ldr	r3, [pc, #8]	; (80c5c <PIOA_Handler+0x10>)
   80c54:	4798      	blx	r3
   80c56:	bd08      	pop	{r3, pc}
   80c58:	400e0e00 	.word	0x400e0e00
   80c5c:	00080bfd 	.word	0x00080bfd

00080c60 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80c60:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80c62:	4802      	ldr	r0, [pc, #8]	; (80c6c <PIOB_Handler+0xc>)
   80c64:	210c      	movs	r1, #12
   80c66:	4b02      	ldr	r3, [pc, #8]	; (80c70 <PIOB_Handler+0x10>)
   80c68:	4798      	blx	r3
   80c6a:	bd08      	pop	{r3, pc}
   80c6c:	400e1000 	.word	0x400e1000
   80c70:	00080bfd 	.word	0x00080bfd

00080c74 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80c74:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80c76:	4802      	ldr	r0, [pc, #8]	; (80c80 <PIOC_Handler+0xc>)
   80c78:	210d      	movs	r1, #13
   80c7a:	4b02      	ldr	r3, [pc, #8]	; (80c84 <PIOC_Handler+0x10>)
   80c7c:	4798      	blx	r3
   80c7e:	bd08      	pop	{r3, pc}
   80c80:	400e1200 	.word	0x400e1200
   80c84:	00080bfd 	.word	0x00080bfd

00080c88 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80c88:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80c8a:	4802      	ldr	r0, [pc, #8]	; (80c94 <PIOD_Handler+0xc>)
   80c8c:	210e      	movs	r1, #14
   80c8e:	4b02      	ldr	r3, [pc, #8]	; (80c98 <PIOD_Handler+0x10>)
   80c90:	4798      	blx	r3
   80c92:	bd08      	pop	{r3, pc}
   80c94:	400e1400 	.word	0x400e1400
   80c98:	00080bfd 	.word	0x00080bfd

00080c9c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80c9c:	4a18      	ldr	r2, [pc, #96]	; (80d00 <pmc_switch_mck_to_pllack+0x64>)
   80c9e:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80ca0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80ca4:	4318      	orrs	r0, r3
   80ca6:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80ca8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80caa:	f013 0f08 	tst.w	r3, #8
   80cae:	d003      	beq.n	80cb8 <pmc_switch_mck_to_pllack+0x1c>
   80cb0:	e009      	b.n	80cc6 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80cb2:	3b01      	subs	r3, #1
   80cb4:	d103      	bne.n	80cbe <pmc_switch_mck_to_pllack+0x22>
   80cb6:	e01e      	b.n	80cf6 <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80cb8:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80cbc:	4910      	ldr	r1, [pc, #64]	; (80d00 <pmc_switch_mck_to_pllack+0x64>)
   80cbe:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80cc0:	f012 0f08 	tst.w	r2, #8
   80cc4:	d0f5      	beq.n	80cb2 <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80cc6:	4a0e      	ldr	r2, [pc, #56]	; (80d00 <pmc_switch_mck_to_pllack+0x64>)
   80cc8:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80cca:	f023 0303 	bic.w	r3, r3, #3
   80cce:	f043 0302 	orr.w	r3, r3, #2
   80cd2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80cd4:	6e90      	ldr	r0, [r2, #104]	; 0x68
   80cd6:	f010 0008 	ands.w	r0, r0, #8
   80cda:	d004      	beq.n	80ce6 <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80cdc:	2000      	movs	r0, #0
   80cde:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
   80ce0:	3b01      	subs	r3, #1
   80ce2:	d103      	bne.n	80cec <pmc_switch_mck_to_pllack+0x50>
   80ce4:	e009      	b.n	80cfa <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80ce6:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80cea:	4905      	ldr	r1, [pc, #20]	; (80d00 <pmc_switch_mck_to_pllack+0x64>)
   80cec:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80cee:	f012 0f08 	tst.w	r2, #8
   80cf2:	d0f5      	beq.n	80ce0 <pmc_switch_mck_to_pllack+0x44>
   80cf4:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80cf6:	2001      	movs	r0, #1
   80cf8:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80cfa:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80cfc:	4770      	bx	lr
   80cfe:	bf00      	nop
   80d00:	400e0600 	.word	0x400e0600

00080d04 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80d04:	b138      	cbz	r0, 80d16 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80d06:	4911      	ldr	r1, [pc, #68]	; (80d4c <pmc_switch_mainck_to_xtal+0x48>)
   80d08:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80d0a:	4a11      	ldr	r2, [pc, #68]	; (80d50 <pmc_switch_mainck_to_xtal+0x4c>)
   80d0c:	401a      	ands	r2, r3
   80d0e:	4b11      	ldr	r3, [pc, #68]	; (80d54 <pmc_switch_mainck_to_xtal+0x50>)
   80d10:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80d12:	620b      	str	r3, [r1, #32]
   80d14:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80d16:	4a0d      	ldr	r2, [pc, #52]	; (80d4c <pmc_switch_mainck_to_xtal+0x48>)
   80d18:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80d1a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80d1e:	f023 0303 	bic.w	r3, r3, #3
   80d22:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80d26:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80d2a:	0209      	lsls	r1, r1, #8
   80d2c:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80d2e:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80d30:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80d32:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80d34:	f013 0f01 	tst.w	r3, #1
   80d38:	d0fb      	beq.n	80d32 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80d3a:	4a04      	ldr	r2, [pc, #16]	; (80d4c <pmc_switch_mainck_to_xtal+0x48>)
   80d3c:	6a13      	ldr	r3, [r2, #32]
   80d3e:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80d42:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80d46:	6213      	str	r3, [r2, #32]
   80d48:	4770      	bx	lr
   80d4a:	bf00      	nop
   80d4c:	400e0600 	.word	0x400e0600
   80d50:	fec8fffc 	.word	0xfec8fffc
   80d54:	01370002 	.word	0x01370002

00080d58 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80d58:	4b02      	ldr	r3, [pc, #8]	; (80d64 <pmc_osc_is_ready_mainck+0xc>)
   80d5a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d5c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80d60:	4770      	bx	lr
   80d62:	bf00      	nop
   80d64:	400e0600 	.word	0x400e0600

00080d68 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80d68:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80d6c:	4b01      	ldr	r3, [pc, #4]	; (80d74 <pmc_disable_pllack+0xc>)
   80d6e:	629a      	str	r2, [r3, #40]	; 0x28
   80d70:	4770      	bx	lr
   80d72:	bf00      	nop
   80d74:	400e0600 	.word	0x400e0600

00080d78 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80d78:	4b02      	ldr	r3, [pc, #8]	; (80d84 <pmc_is_locked_pllack+0xc>)
   80d7a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d7c:	f000 0002 	and.w	r0, r0, #2
   80d80:	4770      	bx	lr
   80d82:	bf00      	nop
   80d84:	400e0600 	.word	0x400e0600

00080d88 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80d88:	282c      	cmp	r0, #44	; 0x2c
   80d8a:	d81e      	bhi.n	80dca <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   80d8c:	281f      	cmp	r0, #31
   80d8e:	d80c      	bhi.n	80daa <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80d90:	4b11      	ldr	r3, [pc, #68]	; (80dd8 <pmc_enable_periph_clk+0x50>)
   80d92:	699a      	ldr	r2, [r3, #24]
   80d94:	2301      	movs	r3, #1
   80d96:	4083      	lsls	r3, r0
   80d98:	401a      	ands	r2, r3
   80d9a:	4293      	cmp	r3, r2
   80d9c:	d017      	beq.n	80dce <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   80d9e:	2301      	movs	r3, #1
   80da0:	4083      	lsls	r3, r0
   80da2:	4a0d      	ldr	r2, [pc, #52]	; (80dd8 <pmc_enable_periph_clk+0x50>)
   80da4:	6113      	str	r3, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80da6:	2000      	movs	r0, #0
   80da8:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80daa:	4b0b      	ldr	r3, [pc, #44]	; (80dd8 <pmc_enable_periph_clk+0x50>)
   80dac:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
   80db0:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80db2:	2301      	movs	r3, #1
   80db4:	4083      	lsls	r3, r0
   80db6:	401a      	ands	r2, r3
   80db8:	4293      	cmp	r3, r2
   80dba:	d00a      	beq.n	80dd2 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   80dbc:	2301      	movs	r3, #1
   80dbe:	4083      	lsls	r3, r0
   80dc0:	4a05      	ldr	r2, [pc, #20]	; (80dd8 <pmc_enable_periph_clk+0x50>)
   80dc2:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
   80dc6:	2000      	movs	r0, #0
   80dc8:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80dca:	2001      	movs	r0, #1
   80dcc:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80dce:	2000      	movs	r0, #0
   80dd0:	4770      	bx	lr
   80dd2:	2000      	movs	r0, #0
}
   80dd4:	4770      	bx	lr
   80dd6:	bf00      	nop
   80dd8:	400e0600 	.word	0x400e0600

00080ddc <Dummy_Handler>:
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
	}
   80ddc:	e7fe      	b.n	80ddc <Dummy_Handler>
   80dde:	bf00      	nop

00080de0 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80de0:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80de2:	4b1f      	ldr	r3, [pc, #124]	; (80e60 <Reset_Handler+0x80>)
   80de4:	4a1f      	ldr	r2, [pc, #124]	; (80e64 <Reset_Handler+0x84>)
   80de6:	429a      	cmp	r2, r3
   80de8:	d003      	beq.n	80df2 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80dea:	4b1f      	ldr	r3, [pc, #124]	; (80e68 <Reset_Handler+0x88>)
   80dec:	4a1c      	ldr	r2, [pc, #112]	; (80e60 <Reset_Handler+0x80>)
   80dee:	429a      	cmp	r2, r3
   80df0:	d304      	bcc.n	80dfc <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80df2:	4b1e      	ldr	r3, [pc, #120]	; (80e6c <Reset_Handler+0x8c>)
   80df4:	4a1e      	ldr	r2, [pc, #120]	; (80e70 <Reset_Handler+0x90>)
   80df6:	429a      	cmp	r2, r3
   80df8:	d310      	bcc.n	80e1c <Reset_Handler+0x3c>
   80dfa:	e01b      	b.n	80e34 <Reset_Handler+0x54>
   80dfc:	4918      	ldr	r1, [pc, #96]	; (80e60 <Reset_Handler+0x80>)
   80dfe:	1d0a      	adds	r2, r1, #4
   80e00:	4b1c      	ldr	r3, [pc, #112]	; (80e74 <Reset_Handler+0x94>)
   80e02:	1a9b      	subs	r3, r3, r2
   80e04:	f023 0303 	bic.w	r3, r3, #3
   80e08:	3304      	adds	r3, #4
   80e0a:	4a16      	ldr	r2, [pc, #88]	; (80e64 <Reset_Handler+0x84>)
   80e0c:	4413      	add	r3, r2
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
			*pDest++ = *pSrc++;
   80e0e:	f852 0b04 	ldr.w	r0, [r2], #4
   80e12:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80e16:	429a      	cmp	r2, r3
   80e18:	d1f9      	bne.n	80e0e <Reset_Handler+0x2e>
   80e1a:	e7ea      	b.n	80df2 <Reset_Handler+0x12>
   80e1c:	4b16      	ldr	r3, [pc, #88]	; (80e78 <Reset_Handler+0x98>)
   80e1e:	4a17      	ldr	r2, [pc, #92]	; (80e7c <Reset_Handler+0x9c>)
   80e20:	1ad2      	subs	r2, r2, r3
   80e22:	f022 0203 	bic.w	r2, r2, #3
   80e26:	441a      	add	r2, r3
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e28:	3b04      	subs	r3, #4
		*pDest++ = 0;
   80e2a:	2100      	movs	r1, #0
   80e2c:	f843 1b04 	str.w	r1, [r3], #4
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e30:	4293      	cmp	r3, r2
   80e32:	d1fb      	bne.n	80e2c <Reset_Handler+0x4c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80e34:	4b12      	ldr	r3, [pc, #72]	; (80e80 <Reset_Handler+0xa0>)
   80e36:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80e3a:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80e3e:	4911      	ldr	r1, [pc, #68]	; (80e84 <Reset_Handler+0xa4>)
   80e40:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80e42:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80e46:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80e4a:	d203      	bcs.n	80e54 <Reset_Handler+0x74>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80e4c:	688b      	ldr	r3, [r1, #8]
   80e4e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80e52:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80e54:	4b0c      	ldr	r3, [pc, #48]	; (80e88 <Reset_Handler+0xa8>)
   80e56:	4798      	blx	r3

	/* Branch to main function */
	main();
   80e58:	4b0c      	ldr	r3, [pc, #48]	; (80e8c <Reset_Handler+0xac>)
   80e5a:	4798      	blx	r3

	/* Infinite loop */
	while (1);
   80e5c:	e7fe      	b.n	80e5c <Reset_Handler+0x7c>
   80e5e:	bf00      	nop
   80e60:	20070000 	.word	0x20070000
   80e64:	00085d6c 	.word	0x00085d6c
   80e68:	200709ec 	.word	0x200709ec
   80e6c:	20070adc 	.word	0x20070adc
   80e70:	200709ec 	.word	0x200709ec
   80e74:	200709ef 	.word	0x200709ef
   80e78:	200709f0 	.word	0x200709f0
   80e7c:	20070adf 	.word	0x20070adf
   80e80:	00080000 	.word	0x00080000
   80e84:	e000ed00 	.word	0xe000ed00
   80e88:	00081025 	.word	0x00081025
   80e8c:	00080fe1 	.word	0x00080fe1

00080e90 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80e90:	4b3e      	ldr	r3, [pc, #248]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80e92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e94:	f003 0303 	and.w	r3, r3, #3
   80e98:	2b03      	cmp	r3, #3
   80e9a:	d85f      	bhi.n	80f5c <SystemCoreClockUpdate+0xcc>
   80e9c:	e8df f003 	tbb	[pc, r3]
   80ea0:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80ea4:	4b3a      	ldr	r3, [pc, #232]	; (80f90 <SystemCoreClockUpdate+0x100>)
   80ea6:	695b      	ldr	r3, [r3, #20]
   80ea8:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80eac:	bf14      	ite	ne
   80eae:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80eb2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80eb6:	4b37      	ldr	r3, [pc, #220]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80eb8:	601a      	str	r2, [r3, #0]
   80eba:	e04f      	b.n	80f5c <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80ebc:	4b33      	ldr	r3, [pc, #204]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80ebe:	6a1b      	ldr	r3, [r3, #32]
   80ec0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80ec4:	d003      	beq.n	80ece <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80ec6:	4a34      	ldr	r2, [pc, #208]	; (80f98 <SystemCoreClockUpdate+0x108>)
   80ec8:	4b32      	ldr	r3, [pc, #200]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80eca:	601a      	str	r2, [r3, #0]
   80ecc:	e046      	b.n	80f5c <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80ece:	4a33      	ldr	r2, [pc, #204]	; (80f9c <SystemCoreClockUpdate+0x10c>)
   80ed0:	4b30      	ldr	r3, [pc, #192]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80ed2:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80ed4:	4b2d      	ldr	r3, [pc, #180]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80ed6:	6a1b      	ldr	r3, [r3, #32]
   80ed8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80edc:	2b10      	cmp	r3, #16
   80ede:	d002      	beq.n	80ee6 <SystemCoreClockUpdate+0x56>
   80ee0:	2b20      	cmp	r3, #32
   80ee2:	d004      	beq.n	80eee <SystemCoreClockUpdate+0x5e>
   80ee4:	e03a      	b.n	80f5c <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80ee6:	4a2e      	ldr	r2, [pc, #184]	; (80fa0 <SystemCoreClockUpdate+0x110>)
   80ee8:	4b2a      	ldr	r3, [pc, #168]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80eea:	601a      	str	r2, [r3, #0]
				break;
   80eec:	e036      	b.n	80f5c <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80eee:	4a2a      	ldr	r2, [pc, #168]	; (80f98 <SystemCoreClockUpdate+0x108>)
   80ef0:	4b28      	ldr	r3, [pc, #160]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80ef2:	601a      	str	r2, [r3, #0]
				break;
   80ef4:	e032      	b.n	80f5c <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80ef6:	4b25      	ldr	r3, [pc, #148]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80ef8:	6a1b      	ldr	r3, [r3, #32]
   80efa:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80efe:	d003      	beq.n	80f08 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80f00:	4a25      	ldr	r2, [pc, #148]	; (80f98 <SystemCoreClockUpdate+0x108>)
   80f02:	4b24      	ldr	r3, [pc, #144]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80f04:	601a      	str	r2, [r3, #0]
   80f06:	e012      	b.n	80f2e <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80f08:	4a24      	ldr	r2, [pc, #144]	; (80f9c <SystemCoreClockUpdate+0x10c>)
   80f0a:	4b22      	ldr	r3, [pc, #136]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80f0c:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80f0e:	4b1f      	ldr	r3, [pc, #124]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80f10:	6a1b      	ldr	r3, [r3, #32]
   80f12:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f16:	2b10      	cmp	r3, #16
   80f18:	d002      	beq.n	80f20 <SystemCoreClockUpdate+0x90>
   80f1a:	2b20      	cmp	r3, #32
   80f1c:	d004      	beq.n	80f28 <SystemCoreClockUpdate+0x98>
   80f1e:	e006      	b.n	80f2e <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80f20:	4a1f      	ldr	r2, [pc, #124]	; (80fa0 <SystemCoreClockUpdate+0x110>)
   80f22:	4b1c      	ldr	r3, [pc, #112]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80f24:	601a      	str	r2, [r3, #0]
				break;
   80f26:	e002      	b.n	80f2e <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80f28:	4a1b      	ldr	r2, [pc, #108]	; (80f98 <SystemCoreClockUpdate+0x108>)
   80f2a:	4b1a      	ldr	r3, [pc, #104]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80f2c:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80f2e:	4b17      	ldr	r3, [pc, #92]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80f30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f32:	f003 0303 	and.w	r3, r3, #3
   80f36:	2b02      	cmp	r3, #2
   80f38:	d10d      	bne.n	80f56 <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f3a:	4a14      	ldr	r2, [pc, #80]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80f3c:	6a93      	ldr	r3, [r2, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f3e:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80f40:	4814      	ldr	r0, [pc, #80]	; (80f94 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f42:	f3c3 410a 	ubfx	r1, r3, #16, #11
   80f46:	6803      	ldr	r3, [r0, #0]
   80f48:	fb01 3303 	mla	r3, r1, r3, r3
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f4c:	b2d2      	uxtb	r2, r2
   80f4e:	fbb3 f3f2 	udiv	r3, r3, r2
   80f52:	6003      	str	r3, [r0, #0]
   80f54:	e002      	b.n	80f5c <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80f56:	4a13      	ldr	r2, [pc, #76]	; (80fa4 <SystemCoreClockUpdate+0x114>)
   80f58:	4b0e      	ldr	r3, [pc, #56]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80f5a:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80f5c:	4b0b      	ldr	r3, [pc, #44]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80f5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f60:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f64:	2b70      	cmp	r3, #112	; 0x70
   80f66:	d107      	bne.n	80f78 <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80f68:	4a0a      	ldr	r2, [pc, #40]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80f6a:	6813      	ldr	r3, [r2, #0]
   80f6c:	490e      	ldr	r1, [pc, #56]	; (80fa8 <SystemCoreClockUpdate+0x118>)
   80f6e:	fba1 1303 	umull	r1, r3, r1, r3
   80f72:	085b      	lsrs	r3, r3, #1
   80f74:	6013      	str	r3, [r2, #0]
   80f76:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80f78:	4b04      	ldr	r3, [pc, #16]	; (80f8c <SystemCoreClockUpdate+0xfc>)
   80f7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80f7c:	4905      	ldr	r1, [pc, #20]	; (80f94 <SystemCoreClockUpdate+0x104>)
   80f7e:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80f82:	680b      	ldr	r3, [r1, #0]
   80f84:	40d3      	lsrs	r3, r2
   80f86:	600b      	str	r3, [r1, #0]
   80f88:	4770      	bx	lr
   80f8a:	bf00      	nop
   80f8c:	400e0600 	.word	0x400e0600
   80f90:	400e1a10 	.word	0x400e1a10
   80f94:	20070170 	.word	0x20070170
   80f98:	00b71b00 	.word	0x00b71b00
   80f9c:	003d0900 	.word	0x003d0900
   80fa0:	007a1200 	.word	0x007a1200
   80fa4:	0e4e1c00 	.word	0x0e4e1c00
   80fa8:	aaaaaaab 	.word	0xaaaaaaab

00080fac <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80fac:	4b09      	ldr	r3, [pc, #36]	; (80fd4 <_sbrk+0x28>)
   80fae:	681b      	ldr	r3, [r3, #0]
   80fb0:	b913      	cbnz	r3, 80fb8 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80fb2:	4a09      	ldr	r2, [pc, #36]	; (80fd8 <_sbrk+0x2c>)
   80fb4:	4b07      	ldr	r3, [pc, #28]	; (80fd4 <_sbrk+0x28>)
   80fb6:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80fb8:	4b06      	ldr	r3, [pc, #24]	; (80fd4 <_sbrk+0x28>)
   80fba:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80fbc:	181a      	adds	r2, r3, r0
   80fbe:	4907      	ldr	r1, [pc, #28]	; (80fdc <_sbrk+0x30>)
   80fc0:	4291      	cmp	r1, r2
   80fc2:	db04      	blt.n	80fce <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80fc4:	4610      	mov	r0, r2
   80fc6:	4a03      	ldr	r2, [pc, #12]	; (80fd4 <_sbrk+0x28>)
   80fc8:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80fca:	4618      	mov	r0, r3
   80fcc:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80fce:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80fd2:	4770      	bx	lr
   80fd4:	20070aa0 	.word	0x20070aa0
   80fd8:	20072ae0 	.word	0x20072ae0
   80fdc:	20087ffc 	.word	0x20087ffc

00080fe0 <main>:
#include "io_control/dac.h"

#define UART_BAUDRATE	115200		//Baud must be the same in Matlab

int main (void)
{
   80fe0:	b508      	push	{r3, lr}
	sysclk_init();
   80fe2:	4b09      	ldr	r3, [pc, #36]	; (81008 <main+0x28>)
   80fe4:	4798      	blx	r3
	board_init();
   80fe6:	4b09      	ldr	r3, [pc, #36]	; (8100c <main+0x2c>)
   80fe8:	4798      	blx	r3
	uart_config((uint32_t)UART_BAUDRATE);
   80fea:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80fee:	4b08      	ldr	r3, [pc, #32]	; (81010 <main+0x30>)
   80ff0:	4798      	blx	r3
	init_adc();
   80ff2:	4b08      	ldr	r3, [pc, #32]	; (81014 <main+0x34>)
   80ff4:	4798      	blx	r3
	pwm_setup();
   80ff6:	4b08      	ldr	r3, [pc, #32]	; (81018 <main+0x38>)
   80ff8:	4798      	blx	r3
	dac_setup();
   80ffa:	4b08      	ldr	r3, [pc, #32]	; (8101c <main+0x3c>)
   80ffc:	4798      	blx	r3
	start_coms();					//Run state machine
   80ffe:	4b08      	ldr	r3, [pc, #32]	; (81020 <main+0x40>)
   81000:	4798      	blx	r3
	
	
}
   81002:	2000      	movs	r0, #0
   81004:	bd08      	pop	{r3, pc}
   81006:	bf00      	nop
   81008:	00080901 	.word	0x00080901
   8100c:	00080965 	.word	0x00080965
   81010:	00080335 	.word	0x00080335
   81014:	00080865 	.word	0x00080865
   81018:	00080221 	.word	0x00080221
   8101c:	000802b5 	.word	0x000802b5
   81020:	00080529 	.word	0x00080529

00081024 <__libc_init_array>:
   81024:	b570      	push	{r4, r5, r6, lr}
   81026:	4e0f      	ldr	r6, [pc, #60]	; (81064 <__libc_init_array+0x40>)
   81028:	4d0f      	ldr	r5, [pc, #60]	; (81068 <__libc_init_array+0x44>)
   8102a:	1b76      	subs	r6, r6, r5
   8102c:	10b6      	asrs	r6, r6, #2
   8102e:	bf18      	it	ne
   81030:	2400      	movne	r4, #0
   81032:	d005      	beq.n	81040 <__libc_init_array+0x1c>
   81034:	3401      	adds	r4, #1
   81036:	f855 3b04 	ldr.w	r3, [r5], #4
   8103a:	4798      	blx	r3
   8103c:	42a6      	cmp	r6, r4
   8103e:	d1f9      	bne.n	81034 <__libc_init_array+0x10>
   81040:	4e0a      	ldr	r6, [pc, #40]	; (8106c <__libc_init_array+0x48>)
   81042:	4d0b      	ldr	r5, [pc, #44]	; (81070 <__libc_init_array+0x4c>)
   81044:	f004 fe7c 	bl	85d40 <_init>
   81048:	1b76      	subs	r6, r6, r5
   8104a:	10b6      	asrs	r6, r6, #2
   8104c:	bf18      	it	ne
   8104e:	2400      	movne	r4, #0
   81050:	d006      	beq.n	81060 <__libc_init_array+0x3c>
   81052:	3401      	adds	r4, #1
   81054:	f855 3b04 	ldr.w	r3, [r5], #4
   81058:	4798      	blx	r3
   8105a:	42a6      	cmp	r6, r4
   8105c:	d1f9      	bne.n	81052 <__libc_init_array+0x2e>
   8105e:	bd70      	pop	{r4, r5, r6, pc}
   81060:	bd70      	pop	{r4, r5, r6, pc}
   81062:	bf00      	nop
   81064:	00085d4c 	.word	0x00085d4c
   81068:	00085d4c 	.word	0x00085d4c
   8106c:	00085d54 	.word	0x00085d54
   81070:	00085d4c 	.word	0x00085d4c

00081074 <memset>:
   81074:	b470      	push	{r4, r5, r6}
   81076:	0784      	lsls	r4, r0, #30
   81078:	d046      	beq.n	81108 <memset+0x94>
   8107a:	1e54      	subs	r4, r2, #1
   8107c:	2a00      	cmp	r2, #0
   8107e:	d041      	beq.n	81104 <memset+0x90>
   81080:	b2cd      	uxtb	r5, r1
   81082:	4603      	mov	r3, r0
   81084:	e002      	b.n	8108c <memset+0x18>
   81086:	1e62      	subs	r2, r4, #1
   81088:	b3e4      	cbz	r4, 81104 <memset+0x90>
   8108a:	4614      	mov	r4, r2
   8108c:	f803 5b01 	strb.w	r5, [r3], #1
   81090:	079a      	lsls	r2, r3, #30
   81092:	d1f8      	bne.n	81086 <memset+0x12>
   81094:	2c03      	cmp	r4, #3
   81096:	d92e      	bls.n	810f6 <memset+0x82>
   81098:	b2cd      	uxtb	r5, r1
   8109a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8109e:	2c0f      	cmp	r4, #15
   810a0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   810a4:	d919      	bls.n	810da <memset+0x66>
   810a6:	4626      	mov	r6, r4
   810a8:	f103 0210 	add.w	r2, r3, #16
   810ac:	3e10      	subs	r6, #16
   810ae:	2e0f      	cmp	r6, #15
   810b0:	f842 5c10 	str.w	r5, [r2, #-16]
   810b4:	f842 5c0c 	str.w	r5, [r2, #-12]
   810b8:	f842 5c08 	str.w	r5, [r2, #-8]
   810bc:	f842 5c04 	str.w	r5, [r2, #-4]
   810c0:	f102 0210 	add.w	r2, r2, #16
   810c4:	d8f2      	bhi.n	810ac <memset+0x38>
   810c6:	f1a4 0210 	sub.w	r2, r4, #16
   810ca:	f022 020f 	bic.w	r2, r2, #15
   810ce:	f004 040f 	and.w	r4, r4, #15
   810d2:	3210      	adds	r2, #16
   810d4:	2c03      	cmp	r4, #3
   810d6:	4413      	add	r3, r2
   810d8:	d90d      	bls.n	810f6 <memset+0x82>
   810da:	461e      	mov	r6, r3
   810dc:	4622      	mov	r2, r4
   810de:	3a04      	subs	r2, #4
   810e0:	2a03      	cmp	r2, #3
   810e2:	f846 5b04 	str.w	r5, [r6], #4
   810e6:	d8fa      	bhi.n	810de <memset+0x6a>
   810e8:	1f22      	subs	r2, r4, #4
   810ea:	f022 0203 	bic.w	r2, r2, #3
   810ee:	3204      	adds	r2, #4
   810f0:	4413      	add	r3, r2
   810f2:	f004 0403 	and.w	r4, r4, #3
   810f6:	b12c      	cbz	r4, 81104 <memset+0x90>
   810f8:	b2c9      	uxtb	r1, r1
   810fa:	441c      	add	r4, r3
   810fc:	f803 1b01 	strb.w	r1, [r3], #1
   81100:	42a3      	cmp	r3, r4
   81102:	d1fb      	bne.n	810fc <memset+0x88>
   81104:	bc70      	pop	{r4, r5, r6}
   81106:	4770      	bx	lr
   81108:	4614      	mov	r4, r2
   8110a:	4603      	mov	r3, r0
   8110c:	e7c2      	b.n	81094 <memset+0x20>
   8110e:	bf00      	nop

00081110 <sprintf>:
   81110:	b40e      	push	{r1, r2, r3}
   81112:	b5f0      	push	{r4, r5, r6, r7, lr}
   81114:	4606      	mov	r6, r0
   81116:	f64f 7eff 	movw	lr, #65535	; 0xffff
   8111a:	b09c      	sub	sp, #112	; 0x70
   8111c:	ac21      	add	r4, sp, #132	; 0x84
   8111e:	f854 2b04 	ldr.w	r2, [r4], #4
   81122:	490d      	ldr	r1, [pc, #52]	; (81158 <sprintf+0x48>)
   81124:	4623      	mov	r3, r4
   81126:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   8112a:	6808      	ldr	r0, [r1, #0]
   8112c:	f44f 7702 	mov.w	r7, #520	; 0x208
   81130:	a902      	add	r1, sp, #8
   81132:	9602      	str	r6, [sp, #8]
   81134:	9606      	str	r6, [sp, #24]
   81136:	9401      	str	r4, [sp, #4]
   81138:	f8ad e016 	strh.w	lr, [sp, #22]
   8113c:	f8ad 7014 	strh.w	r7, [sp, #20]
   81140:	9504      	str	r5, [sp, #16]
   81142:	9507      	str	r5, [sp, #28]
   81144:	f000 f838 	bl	811b8 <_svfprintf_r>
   81148:	9b02      	ldr	r3, [sp, #8]
   8114a:	2200      	movs	r2, #0
   8114c:	701a      	strb	r2, [r3, #0]
   8114e:	b01c      	add	sp, #112	; 0x70
   81150:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81154:	b003      	add	sp, #12
   81156:	4770      	bx	lr
   81158:	200705a0 	.word	0x200705a0

0008115c <strlen>:
   8115c:	f020 0103 	bic.w	r1, r0, #3
   81160:	f010 0003 	ands.w	r0, r0, #3
   81164:	f1c0 0000 	rsb	r0, r0, #0
   81168:	f851 3b04 	ldr.w	r3, [r1], #4
   8116c:	f100 0c04 	add.w	ip, r0, #4
   81170:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81174:	f06f 0200 	mvn.w	r2, #0
   81178:	bf1c      	itt	ne
   8117a:	fa22 f20c 	lsrne.w	r2, r2, ip
   8117e:	4313      	orrne	r3, r2
   81180:	f04f 0c01 	mov.w	ip, #1
   81184:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81188:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   8118c:	eba3 020c 	sub.w	r2, r3, ip
   81190:	ea22 0203 	bic.w	r2, r2, r3
   81194:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81198:	bf04      	itt	eq
   8119a:	f851 3b04 	ldreq.w	r3, [r1], #4
   8119e:	3004      	addeq	r0, #4
   811a0:	d0f4      	beq.n	8118c <strlen+0x30>
   811a2:	f1c2 0100 	rsb	r1, r2, #0
   811a6:	ea02 0201 	and.w	r2, r2, r1
   811aa:	fab2 f282 	clz	r2, r2
   811ae:	f1c2 021f 	rsb	r2, r2, #31
   811b2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   811b6:	4770      	bx	lr

000811b8 <_svfprintf_r>:
   811b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   811bc:	b0c1      	sub	sp, #260	; 0x104
   811be:	4689      	mov	r9, r1
   811c0:	920a      	str	r2, [sp, #40]	; 0x28
   811c2:	930e      	str	r3, [sp, #56]	; 0x38
   811c4:	9008      	str	r0, [sp, #32]
   811c6:	f002 fba9 	bl	8391c <_localeconv_r>
   811ca:	6803      	ldr	r3, [r0, #0]
   811cc:	4618      	mov	r0, r3
   811ce:	9317      	str	r3, [sp, #92]	; 0x5c
   811d0:	f7ff ffc4 	bl	8115c <strlen>
   811d4:	f8b9 300c 	ldrh.w	r3, [r9, #12]
   811d8:	9018      	str	r0, [sp, #96]	; 0x60
   811da:	061c      	lsls	r4, r3, #24
   811dc:	d504      	bpl.n	811e8 <_svfprintf_r+0x30>
   811de:	f8d9 3010 	ldr.w	r3, [r9, #16]
   811e2:	2b00      	cmp	r3, #0
   811e4:	f001 80c2 	beq.w	8236c <_svfprintf_r+0x11b4>
   811e8:	af30      	add	r7, sp, #192	; 0xc0
   811ea:	463c      	mov	r4, r7
   811ec:	464e      	mov	r6, r9
   811ee:	2300      	movs	r3, #0
   811f0:	9313      	str	r3, [sp, #76]	; 0x4c
   811f2:	9316      	str	r3, [sp, #88]	; 0x58
   811f4:	9319      	str	r3, [sp, #100]	; 0x64
   811f6:	930b      	str	r3, [sp, #44]	; 0x2c
   811f8:	9325      	str	r3, [sp, #148]	; 0x94
   811fa:	9324      	str	r3, [sp, #144]	; 0x90
   811fc:	9723      	str	r7, [sp, #140]	; 0x8c
   811fe:	9314      	str	r3, [sp, #80]	; 0x50
   81200:	9315      	str	r3, [sp, #84]	; 0x54
   81202:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81204:	782b      	ldrb	r3, [r5, #0]
   81206:	2b00      	cmp	r3, #0
   81208:	f000 80a9 	beq.w	8135e <_svfprintf_r+0x1a6>
   8120c:	2b25      	cmp	r3, #37	; 0x25
   8120e:	d102      	bne.n	81216 <_svfprintf_r+0x5e>
   81210:	e0a5      	b.n	8135e <_svfprintf_r+0x1a6>
   81212:	2b25      	cmp	r3, #37	; 0x25
   81214:	d003      	beq.n	8121e <_svfprintf_r+0x66>
   81216:	f815 3f01 	ldrb.w	r3, [r5, #1]!
   8121a:	2b00      	cmp	r3, #0
   8121c:	d1f9      	bne.n	81212 <_svfprintf_r+0x5a>
   8121e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81220:	1aeb      	subs	r3, r5, r3
   81222:	b173      	cbz	r3, 81242 <_svfprintf_r+0x8a>
   81224:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81226:	9925      	ldr	r1, [sp, #148]	; 0x94
   81228:	3201      	adds	r2, #1
   8122a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8122c:	4419      	add	r1, r3
   8122e:	2a07      	cmp	r2, #7
   81230:	e884 0009 	stmia.w	r4, {r0, r3}
   81234:	9125      	str	r1, [sp, #148]	; 0x94
   81236:	9224      	str	r2, [sp, #144]	; 0x90
   81238:	dc72      	bgt.n	81320 <_svfprintf_r+0x168>
   8123a:	3408      	adds	r4, #8
   8123c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   8123e:	441a      	add	r2, r3
   81240:	920b      	str	r2, [sp, #44]	; 0x2c
   81242:	782b      	ldrb	r3, [r5, #0]
   81244:	2b00      	cmp	r3, #0
   81246:	f000 87e2 	beq.w	8220e <_svfprintf_r+0x1056>
   8124a:	2300      	movs	r3, #0
   8124c:	461a      	mov	r2, r3
   8124e:	1c69      	adds	r1, r5, #1
   81250:	786d      	ldrb	r5, [r5, #1]
   81252:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   81256:	930c      	str	r3, [sp, #48]	; 0x30
   81258:	9307      	str	r3, [sp, #28]
   8125a:	f04f 3aff 	mov.w	sl, #4294967295
   8125e:	1c4b      	adds	r3, r1, #1
   81260:	f1a5 0120 	sub.w	r1, r5, #32
   81264:	2958      	cmp	r1, #88	; 0x58
   81266:	f200 83ea 	bhi.w	81a3e <_svfprintf_r+0x886>
   8126a:	e8df f011 	tbh	[pc, r1, lsl #1]
   8126e:	026d      	.short	0x026d
   81270:	03e803e8 	.word	0x03e803e8
   81274:	03e802d1 	.word	0x03e802d1
   81278:	03e803e8 	.word	0x03e803e8
   8127c:	03e803e8 	.word	0x03e803e8
   81280:	02bc03e8 	.word	0x02bc03e8
   81284:	03e8020d 	.word	0x03e8020d
   81288:	021101f4 	.word	0x021101f4
   8128c:	02d803e8 	.word	0x02d803e8
   81290:	027b027b 	.word	0x027b027b
   81294:	027b027b 	.word	0x027b027b
   81298:	027b027b 	.word	0x027b027b
   8129c:	027b027b 	.word	0x027b027b
   812a0:	03e8027b 	.word	0x03e8027b
   812a4:	03e803e8 	.word	0x03e803e8
   812a8:	03e803e8 	.word	0x03e803e8
   812ac:	03e803e8 	.word	0x03e803e8
   812b0:	03e803e8 	.word	0x03e803e8
   812b4:	028a03e8 	.word	0x028a03e8
   812b8:	03e802df 	.word	0x03e802df
   812bc:	03e802df 	.word	0x03e802df
   812c0:	03e803e8 	.word	0x03e803e8
   812c4:	03cb03e8 	.word	0x03cb03e8
   812c8:	03e803e8 	.word	0x03e803e8
   812cc:	03e8032f 	.word	0x03e8032f
   812d0:	03e803e8 	.word	0x03e803e8
   812d4:	03e803e8 	.word	0x03e803e8
   812d8:	03e8034d 	.word	0x03e8034d
   812dc:	036703e8 	.word	0x036703e8
   812e0:	03e803e8 	.word	0x03e803e8
   812e4:	03e803e8 	.word	0x03e803e8
   812e8:	03e803e8 	.word	0x03e803e8
   812ec:	03e803e8 	.word	0x03e803e8
   812f0:	03e803e8 	.word	0x03e803e8
   812f4:	022b0382 	.word	0x022b0382
   812f8:	02df02df 	.word	0x02df02df
   812fc:	02ca02df 	.word	0x02ca02df
   81300:	03e8022b 	.word	0x03e8022b
   81304:	02b203e8 	.word	0x02b203e8
   81308:	03d203e8 	.word	0x03d203e8
   8130c:	031901fb 	.word	0x031901fb
   81310:	03e80274 	.word	0x03e80274
   81314:	03e803a3 	.word	0x03e803a3
   81318:	03e8007a 	.word	0x03e8007a
   8131c:	024703e8 	.word	0x024703e8
   81320:	9808      	ldr	r0, [sp, #32]
   81322:	4631      	mov	r1, r6
   81324:	aa23      	add	r2, sp, #140	; 0x8c
   81326:	9307      	str	r3, [sp, #28]
   81328:	f003 fbd6 	bl	84ad8 <__ssprint_r>
   8132c:	b950      	cbnz	r0, 81344 <_svfprintf_r+0x18c>
   8132e:	463c      	mov	r4, r7
   81330:	9b07      	ldr	r3, [sp, #28]
   81332:	e783      	b.n	8123c <_svfprintf_r+0x84>
   81334:	9808      	ldr	r0, [sp, #32]
   81336:	4631      	mov	r1, r6
   81338:	aa23      	add	r2, sp, #140	; 0x8c
   8133a:	f003 fbcd 	bl	84ad8 <__ssprint_r>
   8133e:	2800      	cmp	r0, #0
   81340:	f000 8185 	beq.w	8164e <_svfprintf_r+0x496>
   81344:	46b1      	mov	r9, r6
   81346:	f8b9 300c 	ldrh.w	r3, [r9, #12]
   8134a:	f013 0f40 	tst.w	r3, #64	; 0x40
   8134e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81350:	bf18      	it	ne
   81352:	f04f 33ff 	movne.w	r3, #4294967295
   81356:	4618      	mov	r0, r3
   81358:	b041      	add	sp, #260	; 0x104
   8135a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8135e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81360:	e76f      	b.n	81242 <_svfprintf_r+0x8a>
   81362:	930a      	str	r3, [sp, #40]	; 0x28
   81364:	9b07      	ldr	r3, [sp, #28]
   81366:	0698      	lsls	r0, r3, #26
   81368:	f140 82d7 	bpl.w	8191a <_svfprintf_r+0x762>
   8136c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8136e:	f103 0907 	add.w	r9, r3, #7
   81372:	f029 0307 	bic.w	r3, r9, #7
   81376:	f103 0208 	add.w	r2, r3, #8
   8137a:	e9d3 8900 	ldrd	r8, r9, [r3]
   8137e:	920e      	str	r2, [sp, #56]	; 0x38
   81380:	2301      	movs	r3, #1
   81382:	2200      	movs	r2, #0
   81384:	4694      	mov	ip, r2
   81386:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   8138a:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   8138e:	f1ba 0f00 	cmp.w	sl, #0
   81392:	db03      	blt.n	8139c <_svfprintf_r+0x1e4>
   81394:	9a07      	ldr	r2, [sp, #28]
   81396:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   8139a:	9207      	str	r2, [sp, #28]
   8139c:	ea58 0209 	orrs.w	r2, r8, r9
   813a0:	f040 836f 	bne.w	81a82 <_svfprintf_r+0x8ca>
   813a4:	f1ba 0f00 	cmp.w	sl, #0
   813a8:	f000 8474 	beq.w	81c94 <_svfprintf_r+0xadc>
   813ac:	2b01      	cmp	r3, #1
   813ae:	f000 8372 	beq.w	81a96 <_svfprintf_r+0x8de>
   813b2:	2b02      	cmp	r3, #2
   813b4:	f000 84c2 	beq.w	81d3c <_svfprintf_r+0xb84>
   813b8:	4639      	mov	r1, r7
   813ba:	ea4f 02d8 	mov.w	r2, r8, lsr #3
   813be:	ea42 7249 	orr.w	r2, r2, r9, lsl #29
   813c2:	ea4f 00d9 	mov.w	r0, r9, lsr #3
   813c6:	f008 0307 	and.w	r3, r8, #7
   813ca:	4681      	mov	r9, r0
   813cc:	4690      	mov	r8, r2
   813ce:	3330      	adds	r3, #48	; 0x30
   813d0:	ea58 0209 	orrs.w	r2, r8, r9
   813d4:	f801 3d01 	strb.w	r3, [r1, #-1]!
   813d8:	d1ef      	bne.n	813ba <_svfprintf_r+0x202>
   813da:	9a07      	ldr	r2, [sp, #28]
   813dc:	9110      	str	r1, [sp, #64]	; 0x40
   813de:	07d2      	lsls	r2, r2, #31
   813e0:	f100 857f 	bmi.w	81ee2 <_svfprintf_r+0xd2a>
   813e4:	1a7b      	subs	r3, r7, r1
   813e6:	930d      	str	r3, [sp, #52]	; 0x34
   813e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   813ea:	4653      	mov	r3, sl
   813ec:	4592      	cmp	sl, r2
   813ee:	bfb8      	it	lt
   813f0:	4613      	movlt	r3, r2
   813f2:	9309      	str	r3, [sp, #36]	; 0x24
   813f4:	2300      	movs	r3, #0
   813f6:	9312      	str	r3, [sp, #72]	; 0x48
   813f8:	f1bc 0f00 	cmp.w	ip, #0
   813fc:	d002      	beq.n	81404 <_svfprintf_r+0x24c>
   813fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81400:	3301      	adds	r3, #1
   81402:	9309      	str	r3, [sp, #36]	; 0x24
   81404:	9b07      	ldr	r3, [sp, #28]
   81406:	f013 0302 	ands.w	r3, r3, #2
   8140a:	930f      	str	r3, [sp, #60]	; 0x3c
   8140c:	d002      	beq.n	81414 <_svfprintf_r+0x25c>
   8140e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81410:	3302      	adds	r3, #2
   81412:	9309      	str	r3, [sp, #36]	; 0x24
   81414:	9b07      	ldr	r3, [sp, #28]
   81416:	f013 0984 	ands.w	r9, r3, #132	; 0x84
   8141a:	f040 832f 	bne.w	81a7c <_svfprintf_r+0x8c4>
   8141e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   81420:	9a09      	ldr	r2, [sp, #36]	; 0x24
   81422:	ebc2 0803 	rsb	r8, r2, r3
   81426:	f1b8 0f00 	cmp.w	r8, #0
   8142a:	f340 8327 	ble.w	81a7c <_svfprintf_r+0x8c4>
   8142e:	f1b8 0f10 	cmp.w	r8, #16
   81432:	9925      	ldr	r1, [sp, #148]	; 0x94
   81434:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81436:	f8df a570 	ldr.w	sl, [pc, #1392]	; 819a8 <_svfprintf_r+0x7f0>
   8143a:	dd29      	ble.n	81490 <_svfprintf_r+0x2d8>
   8143c:	4653      	mov	r3, sl
   8143e:	f04f 0b10 	mov.w	fp, #16
   81442:	46c2      	mov	sl, r8
   81444:	46a8      	mov	r8, r5
   81446:	461d      	mov	r5, r3
   81448:	e006      	b.n	81458 <_svfprintf_r+0x2a0>
   8144a:	f1aa 0a10 	sub.w	sl, sl, #16
   8144e:	f1ba 0f10 	cmp.w	sl, #16
   81452:	f104 0408 	add.w	r4, r4, #8
   81456:	dd17      	ble.n	81488 <_svfprintf_r+0x2d0>
   81458:	3201      	adds	r2, #1
   8145a:	3110      	adds	r1, #16
   8145c:	2a07      	cmp	r2, #7
   8145e:	9125      	str	r1, [sp, #148]	; 0x94
   81460:	9224      	str	r2, [sp, #144]	; 0x90
   81462:	e884 0820 	stmia.w	r4, {r5, fp}
   81466:	ddf0      	ble.n	8144a <_svfprintf_r+0x292>
   81468:	9808      	ldr	r0, [sp, #32]
   8146a:	4631      	mov	r1, r6
   8146c:	aa23      	add	r2, sp, #140	; 0x8c
   8146e:	f003 fb33 	bl	84ad8 <__ssprint_r>
   81472:	2800      	cmp	r0, #0
   81474:	f47f af66 	bne.w	81344 <_svfprintf_r+0x18c>
   81478:	f1aa 0a10 	sub.w	sl, sl, #16
   8147c:	f1ba 0f10 	cmp.w	sl, #16
   81480:	463c      	mov	r4, r7
   81482:	9925      	ldr	r1, [sp, #148]	; 0x94
   81484:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81486:	dce7      	bgt.n	81458 <_svfprintf_r+0x2a0>
   81488:	462b      	mov	r3, r5
   8148a:	4645      	mov	r5, r8
   8148c:	46d0      	mov	r8, sl
   8148e:	469a      	mov	sl, r3
   81490:	3201      	adds	r2, #1
   81492:	eb08 0b01 	add.w	fp, r8, r1
   81496:	2a07      	cmp	r2, #7
   81498:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   8149c:	9224      	str	r2, [sp, #144]	; 0x90
   8149e:	f8c4 a000 	str.w	sl, [r4]
   814a2:	f8c4 8004 	str.w	r8, [r4, #4]
   814a6:	f300 82de 	bgt.w	81a66 <_svfprintf_r+0x8ae>
   814aa:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   814ae:	3408      	adds	r4, #8
   814b0:	f1bc 0f00 	cmp.w	ip, #0
   814b4:	d00f      	beq.n	814d6 <_svfprintf_r+0x31e>
   814b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   814b8:	f10b 0b01 	add.w	fp, fp, #1
   814bc:	3301      	adds	r3, #1
   814be:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
   814c2:	2201      	movs	r2, #1
   814c4:	2b07      	cmp	r3, #7
   814c6:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   814ca:	9324      	str	r3, [sp, #144]	; 0x90
   814cc:	e884 0006 	stmia.w	r4, {r1, r2}
   814d0:	f300 83fd 	bgt.w	81cce <_svfprintf_r+0xb16>
   814d4:	3408      	adds	r4, #8
   814d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   814d8:	b173      	cbz	r3, 814f8 <_svfprintf_r+0x340>
   814da:	9b24      	ldr	r3, [sp, #144]	; 0x90
   814dc:	f10b 0b02 	add.w	fp, fp, #2
   814e0:	3301      	adds	r3, #1
   814e2:	a91c      	add	r1, sp, #112	; 0x70
   814e4:	2202      	movs	r2, #2
   814e6:	2b07      	cmp	r3, #7
   814e8:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   814ec:	9324      	str	r3, [sp, #144]	; 0x90
   814ee:	e884 0006 	stmia.w	r4, {r1, r2}
   814f2:	f300 83f9 	bgt.w	81ce8 <_svfprintf_r+0xb30>
   814f6:	3408      	adds	r4, #8
   814f8:	f1b9 0f80 	cmp.w	r9, #128	; 0x80
   814fc:	f000 8334 	beq.w	81b68 <_svfprintf_r+0x9b0>
   81500:	9b11      	ldr	r3, [sp, #68]	; 0x44
   81502:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81504:	ebc2 0a03 	rsb	sl, r2, r3
   81508:	f1ba 0f00 	cmp.w	sl, #0
   8150c:	dd3c      	ble.n	81588 <_svfprintf_r+0x3d0>
   8150e:	f1ba 0f10 	cmp.w	sl, #16
   81512:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81514:	f8df 9494 	ldr.w	r9, [pc, #1172]	; 819ac <_svfprintf_r+0x7f4>
   81518:	dd2b      	ble.n	81572 <_svfprintf_r+0x3ba>
   8151a:	4649      	mov	r1, r9
   8151c:	465b      	mov	r3, fp
   8151e:	46a9      	mov	r9, r5
   81520:	f04f 0810 	mov.w	r8, #16
   81524:	f8dd b020 	ldr.w	fp, [sp, #32]
   81528:	460d      	mov	r5, r1
   8152a:	e006      	b.n	8153a <_svfprintf_r+0x382>
   8152c:	f1aa 0a10 	sub.w	sl, sl, #16
   81530:	f1ba 0f10 	cmp.w	sl, #16
   81534:	f104 0408 	add.w	r4, r4, #8
   81538:	dd17      	ble.n	8156a <_svfprintf_r+0x3b2>
   8153a:	3201      	adds	r2, #1
   8153c:	3310      	adds	r3, #16
   8153e:	2a07      	cmp	r2, #7
   81540:	9325      	str	r3, [sp, #148]	; 0x94
   81542:	9224      	str	r2, [sp, #144]	; 0x90
   81544:	e884 0120 	stmia.w	r4, {r5, r8}
   81548:	ddf0      	ble.n	8152c <_svfprintf_r+0x374>
   8154a:	4658      	mov	r0, fp
   8154c:	4631      	mov	r1, r6
   8154e:	aa23      	add	r2, sp, #140	; 0x8c
   81550:	f003 fac2 	bl	84ad8 <__ssprint_r>
   81554:	2800      	cmp	r0, #0
   81556:	f47f aef5 	bne.w	81344 <_svfprintf_r+0x18c>
   8155a:	f1aa 0a10 	sub.w	sl, sl, #16
   8155e:	f1ba 0f10 	cmp.w	sl, #16
   81562:	463c      	mov	r4, r7
   81564:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81566:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81568:	dce7      	bgt.n	8153a <_svfprintf_r+0x382>
   8156a:	469b      	mov	fp, r3
   8156c:	462b      	mov	r3, r5
   8156e:	464d      	mov	r5, r9
   81570:	4699      	mov	r9, r3
   81572:	3201      	adds	r2, #1
   81574:	44d3      	add	fp, sl
   81576:	2a07      	cmp	r2, #7
   81578:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   8157c:	9224      	str	r2, [sp, #144]	; 0x90
   8157e:	e884 0600 	stmia.w	r4, {r9, sl}
   81582:	f300 8398 	bgt.w	81cb6 <_svfprintf_r+0xafe>
   81586:	3408      	adds	r4, #8
   81588:	9b07      	ldr	r3, [sp, #28]
   8158a:	05d9      	lsls	r1, r3, #23
   8158c:	f100 828f 	bmi.w	81aae <_svfprintf_r+0x8f6>
   81590:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81592:	990d      	ldr	r1, [sp, #52]	; 0x34
   81594:	3301      	adds	r3, #1
   81596:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81598:	448b      	add	fp, r1
   8159a:	2b07      	cmp	r3, #7
   8159c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   815a0:	6022      	str	r2, [r4, #0]
   815a2:	6061      	str	r1, [r4, #4]
   815a4:	9324      	str	r3, [sp, #144]	; 0x90
   815a6:	f300 83b8 	bgt.w	81d1a <_svfprintf_r+0xb62>
   815aa:	3408      	adds	r4, #8
   815ac:	9b07      	ldr	r3, [sp, #28]
   815ae:	075a      	lsls	r2, r3, #29
   815b0:	d541      	bpl.n	81636 <_svfprintf_r+0x47e>
   815b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   815b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   815b6:	1a9d      	subs	r5, r3, r2
   815b8:	2d00      	cmp	r5, #0
   815ba:	dd3c      	ble.n	81636 <_svfprintf_r+0x47e>
   815bc:	2d10      	cmp	r5, #16
   815be:	9b24      	ldr	r3, [sp, #144]	; 0x90
   815c0:	f8df a3e4 	ldr.w	sl, [pc, #996]	; 819a8 <_svfprintf_r+0x7f0>
   815c4:	dd23      	ble.n	8160e <_svfprintf_r+0x456>
   815c6:	f04f 0810 	mov.w	r8, #16
   815ca:	465a      	mov	r2, fp
   815cc:	f8dd 9020 	ldr.w	r9, [sp, #32]
   815d0:	e004      	b.n	815dc <_svfprintf_r+0x424>
   815d2:	3d10      	subs	r5, #16
   815d4:	2d10      	cmp	r5, #16
   815d6:	f104 0408 	add.w	r4, r4, #8
   815da:	dd17      	ble.n	8160c <_svfprintf_r+0x454>
   815dc:	3301      	adds	r3, #1
   815de:	3210      	adds	r2, #16
   815e0:	2b07      	cmp	r3, #7
   815e2:	9225      	str	r2, [sp, #148]	; 0x94
   815e4:	9324      	str	r3, [sp, #144]	; 0x90
   815e6:	f8c4 a000 	str.w	sl, [r4]
   815ea:	f8c4 8004 	str.w	r8, [r4, #4]
   815ee:	ddf0      	ble.n	815d2 <_svfprintf_r+0x41a>
   815f0:	4648      	mov	r0, r9
   815f2:	4631      	mov	r1, r6
   815f4:	aa23      	add	r2, sp, #140	; 0x8c
   815f6:	f003 fa6f 	bl	84ad8 <__ssprint_r>
   815fa:	2800      	cmp	r0, #0
   815fc:	f47f aea2 	bne.w	81344 <_svfprintf_r+0x18c>
   81600:	3d10      	subs	r5, #16
   81602:	2d10      	cmp	r5, #16
   81604:	463c      	mov	r4, r7
   81606:	9a25      	ldr	r2, [sp, #148]	; 0x94
   81608:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8160a:	dce7      	bgt.n	815dc <_svfprintf_r+0x424>
   8160c:	4693      	mov	fp, r2
   8160e:	3301      	adds	r3, #1
   81610:	44ab      	add	fp, r5
   81612:	2b07      	cmp	r3, #7
   81614:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81618:	9324      	str	r3, [sp, #144]	; 0x90
   8161a:	f8c4 a000 	str.w	sl, [r4]
   8161e:	6065      	str	r5, [r4, #4]
   81620:	dd09      	ble.n	81636 <_svfprintf_r+0x47e>
   81622:	9808      	ldr	r0, [sp, #32]
   81624:	4631      	mov	r1, r6
   81626:	aa23      	add	r2, sp, #140	; 0x8c
   81628:	f003 fa56 	bl	84ad8 <__ssprint_r>
   8162c:	2800      	cmp	r0, #0
   8162e:	f47f ae89 	bne.w	81344 <_svfprintf_r+0x18c>
   81632:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81636:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81638:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8163a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8163c:	428a      	cmp	r2, r1
   8163e:	bfac      	ite	ge
   81640:	189b      	addge	r3, r3, r2
   81642:	185b      	addlt	r3, r3, r1
   81644:	930b      	str	r3, [sp, #44]	; 0x2c
   81646:	f1bb 0f00 	cmp.w	fp, #0
   8164a:	f47f ae73 	bne.w	81334 <_svfprintf_r+0x17c>
   8164e:	2300      	movs	r3, #0
   81650:	9324      	str	r3, [sp, #144]	; 0x90
   81652:	463c      	mov	r4, r7
   81654:	e5d5      	b.n	81202 <_svfprintf_r+0x4a>
   81656:	4619      	mov	r1, r3
   81658:	9807      	ldr	r0, [sp, #28]
   8165a:	f040 0004 	orr.w	r0, r0, #4
   8165e:	9007      	str	r0, [sp, #28]
   81660:	781d      	ldrb	r5, [r3, #0]
   81662:	e5fc      	b.n	8125e <_svfprintf_r+0xa6>
   81664:	930a      	str	r3, [sp, #40]	; 0x28
   81666:	9b07      	ldr	r3, [sp, #28]
   81668:	f013 0320 	ands.w	r3, r3, #32
   8166c:	f000 8138 	beq.w	818e0 <_svfprintf_r+0x728>
   81670:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   81672:	f103 0907 	add.w	r9, r3, #7
   81676:	f029 0307 	bic.w	r3, r9, #7
   8167a:	f103 0208 	add.w	r2, r3, #8
   8167e:	e9d3 8900 	ldrd	r8, r9, [r3]
   81682:	920e      	str	r2, [sp, #56]	; 0x38
   81684:	2300      	movs	r3, #0
   81686:	e67c      	b.n	81382 <_svfprintf_r+0x1ca>
   81688:	781d      	ldrb	r5, [r3, #0]
   8168a:	4619      	mov	r1, r3
   8168c:	222b      	movs	r2, #43	; 0x2b
   8168e:	e5e6      	b.n	8125e <_svfprintf_r+0xa6>
   81690:	781d      	ldrb	r5, [r3, #0]
   81692:	1c59      	adds	r1, r3, #1
   81694:	2d2a      	cmp	r5, #42	; 0x2a
   81696:	f000 87e5 	beq.w	82664 <_svfprintf_r+0x14ac>
   8169a:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   8169e:	2809      	cmp	r0, #9
   816a0:	460b      	mov	r3, r1
   816a2:	f04f 0a00 	mov.w	sl, #0
   816a6:	f63f addb 	bhi.w	81260 <_svfprintf_r+0xa8>
   816aa:	f813 5b01 	ldrb.w	r5, [r3], #1
   816ae:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
   816b2:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
   816b6:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   816ba:	2809      	cmp	r0, #9
   816bc:	d9f5      	bls.n	816aa <_svfprintf_r+0x4f2>
   816be:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
   816c2:	e5cd      	b.n	81260 <_svfprintf_r+0xa8>
   816c4:	930a      	str	r3, [sp, #40]	; 0x28
   816c6:	9b07      	ldr	r3, [sp, #28]
   816c8:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   816cc:	0698      	lsls	r0, r3, #26
   816ce:	d562      	bpl.n	81796 <_svfprintf_r+0x5de>
   816d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   816d2:	f103 0907 	add.w	r9, r3, #7
   816d6:	f029 0907 	bic.w	r9, r9, #7
   816da:	e9d9 2300 	ldrd	r2, r3, [r9]
   816de:	f109 0108 	add.w	r1, r9, #8
   816e2:	4690      	mov	r8, r2
   816e4:	4699      	mov	r9, r3
   816e6:	910e      	str	r1, [sp, #56]	; 0x38
   816e8:	2a00      	cmp	r2, #0
   816ea:	f173 0300 	sbcs.w	r3, r3, #0
   816ee:	db64      	blt.n	817ba <_svfprintf_r+0x602>
   816f0:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   816f4:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   816f8:	2301      	movs	r3, #1
   816fa:	e648      	b.n	8138e <_svfprintf_r+0x1d6>
   816fc:	930a      	str	r3, [sp, #40]	; 0x28
   816fe:	4ba7      	ldr	r3, [pc, #668]	; (8199c <_svfprintf_r+0x7e4>)
   81700:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81704:	9316      	str	r3, [sp, #88]	; 0x58
   81706:	9b07      	ldr	r3, [sp, #28]
   81708:	069b      	lsls	r3, r3, #26
   8170a:	f140 8120 	bpl.w	8194e <_svfprintf_r+0x796>
   8170e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   81710:	f103 0907 	add.w	r9, r3, #7
   81714:	f029 0307 	bic.w	r3, r9, #7
   81718:	f103 0208 	add.w	r2, r3, #8
   8171c:	920e      	str	r2, [sp, #56]	; 0x38
   8171e:	e9d3 8900 	ldrd	r8, r9, [r3]
   81722:	9b07      	ldr	r3, [sp, #28]
   81724:	07d9      	lsls	r1, r3, #31
   81726:	f140 8122 	bpl.w	8196e <_svfprintf_r+0x7b6>
   8172a:	ea58 0309 	orrs.w	r3, r8, r9
   8172e:	f000 811e 	beq.w	8196e <_svfprintf_r+0x7b6>
   81732:	9a07      	ldr	r2, [sp, #28]
   81734:	2330      	movs	r3, #48	; 0x30
   81736:	f042 0202 	orr.w	r2, r2, #2
   8173a:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
   8173e:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
   81742:	9207      	str	r2, [sp, #28]
   81744:	2302      	movs	r3, #2
   81746:	e61c      	b.n	81382 <_svfprintf_r+0x1ca>
   81748:	2a00      	cmp	r2, #0
   8174a:	f040 84e5 	bne.w	82118 <_svfprintf_r+0xf60>
   8174e:	781d      	ldrb	r5, [r3, #0]
   81750:	4619      	mov	r1, r3
   81752:	2220      	movs	r2, #32
   81754:	e583      	b.n	8125e <_svfprintf_r+0xa6>
   81756:	9907      	ldr	r1, [sp, #28]
   81758:	f041 0120 	orr.w	r1, r1, #32
   8175c:	9107      	str	r1, [sp, #28]
   8175e:	781d      	ldrb	r5, [r3, #0]
   81760:	4619      	mov	r1, r3
   81762:	e57c      	b.n	8125e <_svfprintf_r+0xa6>
   81764:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   81768:	2100      	movs	r1, #0
   8176a:	f813 5b01 	ldrb.w	r5, [r3], #1
   8176e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81772:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   81776:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   8177a:	2809      	cmp	r0, #9
   8177c:	d9f5      	bls.n	8176a <_svfprintf_r+0x5b2>
   8177e:	910c      	str	r1, [sp, #48]	; 0x30
   81780:	e56e      	b.n	81260 <_svfprintf_r+0xa8>
   81782:	930a      	str	r3, [sp, #40]	; 0x28
   81784:	9b07      	ldr	r3, [sp, #28]
   81786:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   8178a:	f043 0310 	orr.w	r3, r3, #16
   8178e:	9307      	str	r3, [sp, #28]
   81790:	9b07      	ldr	r3, [sp, #28]
   81792:	0698      	lsls	r0, r3, #26
   81794:	d49c      	bmi.n	816d0 <_svfprintf_r+0x518>
   81796:	9b07      	ldr	r3, [sp, #28]
   81798:	06d9      	lsls	r1, r3, #27
   8179a:	f140 84c1 	bpl.w	82120 <_svfprintf_r+0xf68>
   8179e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   817a0:	4613      	mov	r3, r2
   817a2:	681b      	ldr	r3, [r3, #0]
   817a4:	3204      	adds	r2, #4
   817a6:	920e      	str	r2, [sp, #56]	; 0x38
   817a8:	ea4f 79e3 	mov.w	r9, r3, asr #31
   817ac:	461a      	mov	r2, r3
   817ae:	4698      	mov	r8, r3
   817b0:	464b      	mov	r3, r9
   817b2:	2a00      	cmp	r2, #0
   817b4:	f173 0300 	sbcs.w	r3, r3, #0
   817b8:	da9a      	bge.n	816f0 <_svfprintf_r+0x538>
   817ba:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
   817be:	f1d8 0800 	rsbs	r8, r8, #0
   817c2:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
   817c6:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
   817ca:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   817ce:	2301      	movs	r3, #1
   817d0:	e5dd      	b.n	8138e <_svfprintf_r+0x1d6>
   817d2:	781d      	ldrb	r5, [r3, #0]
   817d4:	9907      	ldr	r1, [sp, #28]
   817d6:	2d6c      	cmp	r5, #108	; 0x6c
   817d8:	f000 8525 	beq.w	82226 <_svfprintf_r+0x106e>
   817dc:	f041 0110 	orr.w	r1, r1, #16
   817e0:	9107      	str	r1, [sp, #28]
   817e2:	4619      	mov	r1, r3
   817e4:	e53b      	b.n	8125e <_svfprintf_r+0xa6>
   817e6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   817e8:	6829      	ldr	r1, [r5, #0]
   817ea:	4608      	mov	r0, r1
   817ec:	910c      	str	r1, [sp, #48]	; 0x30
   817ee:	4629      	mov	r1, r5
   817f0:	2800      	cmp	r0, #0
   817f2:	f101 0104 	add.w	r1, r1, #4
   817f6:	f2c0 851d 	blt.w	82234 <_svfprintf_r+0x107c>
   817fa:	910e      	str	r1, [sp, #56]	; 0x38
   817fc:	781d      	ldrb	r5, [r3, #0]
   817fe:	4619      	mov	r1, r3
   81800:	e52d      	b.n	8125e <_svfprintf_r+0xa6>
   81802:	9907      	ldr	r1, [sp, #28]
   81804:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   81808:	9107      	str	r1, [sp, #28]
   8180a:	781d      	ldrb	r5, [r3, #0]
   8180c:	4619      	mov	r1, r3
   8180e:	e526      	b.n	8125e <_svfprintf_r+0xa6>
   81810:	9907      	ldr	r1, [sp, #28]
   81812:	f041 0101 	orr.w	r1, r1, #1
   81816:	9107      	str	r1, [sp, #28]
   81818:	781d      	ldrb	r5, [r3, #0]
   8181a:	4619      	mov	r1, r3
   8181c:	e51f      	b.n	8125e <_svfprintf_r+0xa6>
   8181e:	9907      	ldr	r1, [sp, #28]
   81820:	f041 0180 	orr.w	r1, r1, #128	; 0x80
   81824:	9107      	str	r1, [sp, #28]
   81826:	781d      	ldrb	r5, [r3, #0]
   81828:	4619      	mov	r1, r3
   8182a:	e518      	b.n	8125e <_svfprintf_r+0xa6>
   8182c:	930a      	str	r3, [sp, #40]	; 0x28
   8182e:	9b07      	ldr	r3, [sp, #28]
   81830:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81834:	f013 0f08 	tst.w	r3, #8
   81838:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8183a:	46d3      	mov	fp, sl
   8183c:	f103 0907 	add.w	r9, r3, #7
   81840:	f000 8437 	beq.w	820b2 <_svfprintf_r+0xefa>
   81844:	f029 0307 	bic.w	r3, r9, #7
   81848:	f103 0208 	add.w	r2, r3, #8
   8184c:	920e      	str	r2, [sp, #56]	; 0x38
   8184e:	681a      	ldr	r2, [r3, #0]
   81850:	685b      	ldr	r3, [r3, #4]
   81852:	9214      	str	r2, [sp, #80]	; 0x50
   81854:	9315      	str	r3, [sp, #84]	; 0x54
   81856:	9915      	ldr	r1, [sp, #84]	; 0x54
   81858:	9814      	ldr	r0, [sp, #80]	; 0x50
   8185a:	f003 f8ff 	bl	84a5c <__fpclassifyd>
   8185e:	2801      	cmp	r0, #1
   81860:	9915      	ldr	r1, [sp, #84]	; 0x54
   81862:	9814      	ldr	r0, [sp, #80]	; 0x50
   81864:	f040 840b 	bne.w	8207e <_svfprintf_r+0xec6>
   81868:	2200      	movs	r2, #0
   8186a:	2300      	movs	r3, #0
   8186c:	f003 fe62 	bl	85534 <__aeabi_dcmplt>
   81870:	2800      	cmp	r0, #0
   81872:	f040 8639 	bne.w	824e8 <_svfprintf_r+0x1330>
   81876:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   8187a:	9b07      	ldr	r3, [sp, #28]
   8187c:	4a48      	ldr	r2, [pc, #288]	; (819a0 <_svfprintf_r+0x7e8>)
   8187e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   81882:	9307      	str	r3, [sp, #28]
   81884:	4613      	mov	r3, r2
   81886:	f8df e128 	ldr.w	lr, [pc, #296]	; 819b0 <_svfprintf_r+0x7f8>
   8188a:	2103      	movs	r1, #3
   8188c:	2d47      	cmp	r5, #71	; 0x47
   8188e:	bfd8      	it	le
   81890:	4673      	movle	r3, lr
   81892:	2000      	movs	r0, #0
   81894:	9109      	str	r1, [sp, #36]	; 0x24
   81896:	9011      	str	r0, [sp, #68]	; 0x44
   81898:	9310      	str	r3, [sp, #64]	; 0x40
   8189a:	910d      	str	r1, [sp, #52]	; 0x34
   8189c:	9012      	str	r0, [sp, #72]	; 0x48
   8189e:	e5ab      	b.n	813f8 <_svfprintf_r+0x240>
   818a0:	990e      	ldr	r1, [sp, #56]	; 0x38
   818a2:	9807      	ldr	r0, [sp, #28]
   818a4:	930a      	str	r3, [sp, #40]	; 0x28
   818a6:	2330      	movs	r3, #48	; 0x30
   818a8:	680a      	ldr	r2, [r1, #0]
   818aa:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
   818ae:	4b3b      	ldr	r3, [pc, #236]	; (8199c <_svfprintf_r+0x7e4>)
   818b0:	2578      	movs	r5, #120	; 0x78
   818b2:	f040 0002 	orr.w	r0, r0, #2
   818b6:	3104      	adds	r1, #4
   818b8:	9316      	str	r3, [sp, #88]	; 0x58
   818ba:	9007      	str	r0, [sp, #28]
   818bc:	910e      	str	r1, [sp, #56]	; 0x38
   818be:	4690      	mov	r8, r2
   818c0:	f04f 0900 	mov.w	r9, #0
   818c4:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
   818c8:	2302      	movs	r3, #2
   818ca:	e55a      	b.n	81382 <_svfprintf_r+0x1ca>
   818cc:	930a      	str	r3, [sp, #40]	; 0x28
   818ce:	9b07      	ldr	r3, [sp, #28]
   818d0:	f043 0310 	orr.w	r3, r3, #16
   818d4:	9307      	str	r3, [sp, #28]
   818d6:	9b07      	ldr	r3, [sp, #28]
   818d8:	f013 0320 	ands.w	r3, r3, #32
   818dc:	f47f aec8 	bne.w	81670 <_svfprintf_r+0x4b8>
   818e0:	9a07      	ldr	r2, [sp, #28]
   818e2:	f012 0210 	ands.w	r2, r2, #16
   818e6:	f040 830a 	bne.w	81efe <_svfprintf_r+0xd46>
   818ea:	9b07      	ldr	r3, [sp, #28]
   818ec:	f013 0340 	ands.w	r3, r3, #64	; 0x40
   818f0:	f000 8305 	beq.w	81efe <_svfprintf_r+0xd46>
   818f4:	990e      	ldr	r1, [sp, #56]	; 0x38
   818f6:	4613      	mov	r3, r2
   818f8:	460a      	mov	r2, r1
   818fa:	3204      	adds	r2, #4
   818fc:	f8b1 8000 	ldrh.w	r8, [r1]
   81900:	f04f 0900 	mov.w	r9, #0
   81904:	920e      	str	r2, [sp, #56]	; 0x38
   81906:	e53c      	b.n	81382 <_svfprintf_r+0x1ca>
   81908:	930a      	str	r3, [sp, #40]	; 0x28
   8190a:	9b07      	ldr	r3, [sp, #28]
   8190c:	f043 0310 	orr.w	r3, r3, #16
   81910:	9307      	str	r3, [sp, #28]
   81912:	9b07      	ldr	r3, [sp, #28]
   81914:	0698      	lsls	r0, r3, #26
   81916:	f53f ad29 	bmi.w	8136c <_svfprintf_r+0x1b4>
   8191a:	9b07      	ldr	r3, [sp, #28]
   8191c:	06d9      	lsls	r1, r3, #27
   8191e:	f100 82f7 	bmi.w	81f10 <_svfprintf_r+0xd58>
   81922:	9b07      	ldr	r3, [sp, #28]
   81924:	065a      	lsls	r2, r3, #25
   81926:	f140 82f3 	bpl.w	81f10 <_svfprintf_r+0xd58>
   8192a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   8192c:	f04f 0900 	mov.w	r9, #0
   81930:	f8b2 8000 	ldrh.w	r8, [r2]
   81934:	3204      	adds	r2, #4
   81936:	2301      	movs	r3, #1
   81938:	920e      	str	r2, [sp, #56]	; 0x38
   8193a:	e522      	b.n	81382 <_svfprintf_r+0x1ca>
   8193c:	930a      	str	r3, [sp, #40]	; 0x28
   8193e:	4b19      	ldr	r3, [pc, #100]	; (819a4 <_svfprintf_r+0x7ec>)
   81940:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81944:	9316      	str	r3, [sp, #88]	; 0x58
   81946:	9b07      	ldr	r3, [sp, #28]
   81948:	069b      	lsls	r3, r3, #26
   8194a:	f53f aee0 	bmi.w	8170e <_svfprintf_r+0x556>
   8194e:	9b07      	ldr	r3, [sp, #28]
   81950:	06d8      	lsls	r0, r3, #27
   81952:	f140 83bb 	bpl.w	820cc <_svfprintf_r+0xf14>
   81956:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81958:	4613      	mov	r3, r2
   8195a:	681b      	ldr	r3, [r3, #0]
   8195c:	3204      	adds	r2, #4
   8195e:	4698      	mov	r8, r3
   81960:	9b07      	ldr	r3, [sp, #28]
   81962:	920e      	str	r2, [sp, #56]	; 0x38
   81964:	07d9      	lsls	r1, r3, #31
   81966:	f04f 0900 	mov.w	r9, #0
   8196a:	f53f aede 	bmi.w	8172a <_svfprintf_r+0x572>
   8196e:	2302      	movs	r3, #2
   81970:	e507      	b.n	81382 <_svfprintf_r+0x1ca>
   81972:	980e      	ldr	r0, [sp, #56]	; 0x38
   81974:	930a      	str	r3, [sp, #40]	; 0x28
   81976:	6802      	ldr	r2, [r0, #0]
   81978:	2300      	movs	r3, #0
   8197a:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
   8197e:	4602      	mov	r2, r0
   81980:	2101      	movs	r1, #1
   81982:	469c      	mov	ip, r3
   81984:	3204      	adds	r2, #4
   81986:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   8198a:	9311      	str	r3, [sp, #68]	; 0x44
   8198c:	9312      	str	r3, [sp, #72]	; 0x48
   8198e:	ab26      	add	r3, sp, #152	; 0x98
   81990:	9109      	str	r1, [sp, #36]	; 0x24
   81992:	920e      	str	r2, [sp, #56]	; 0x38
   81994:	910d      	str	r1, [sp, #52]	; 0x34
   81996:	9310      	str	r3, [sp, #64]	; 0x40
   81998:	e534      	b.n	81404 <_svfprintf_r+0x24c>
   8199a:	bf00      	nop
   8199c:	00085c00 	.word	0x00085c00
   819a0:	00085be0 	.word	0x00085be0
   819a4:	00085bec 	.word	0x00085bec
   819a8:	00085bcc 	.word	0x00085bcc
   819ac:	00085bbc 	.word	0x00085bbc
   819b0:	00085bdc 	.word	0x00085bdc
   819b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   819b6:	930a      	str	r3, [sp, #40]	; 0x28
   819b8:	6813      	ldr	r3, [r2, #0]
   819ba:	f04f 0b00 	mov.w	fp, #0
   819be:	9310      	str	r3, [sp, #64]	; 0x40
   819c0:	f88d b06f 	strb.w	fp, [sp, #111]	; 0x6f
   819c4:	f102 0904 	add.w	r9, r2, #4
   819c8:	2b00      	cmp	r3, #0
   819ca:	f000 8558 	beq.w	8247e <_svfprintf_r+0x12c6>
   819ce:	f1ba 0f00 	cmp.w	sl, #0
   819d2:	9810      	ldr	r0, [sp, #64]	; 0x40
   819d4:	f2c0 84ea 	blt.w	823ac <_svfprintf_r+0x11f4>
   819d8:	4659      	mov	r1, fp
   819da:	4652      	mov	r2, sl
   819dc:	f002 fa28 	bl	83e30 <memchr>
   819e0:	2800      	cmp	r0, #0
   819e2:	f000 8589 	beq.w	824f8 <_svfprintf_r+0x1340>
   819e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
   819e8:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
   819ec:	1ac3      	subs	r3, r0, r3
   819ee:	930d      	str	r3, [sp, #52]	; 0x34
   819f0:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   819f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   819f8:	9309      	str	r3, [sp, #36]	; 0x24
   819fa:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
   819fe:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   81a02:	e4f9      	b.n	813f8 <_svfprintf_r+0x240>
   81a04:	9907      	ldr	r1, [sp, #28]
   81a06:	f041 0108 	orr.w	r1, r1, #8
   81a0a:	9107      	str	r1, [sp, #28]
   81a0c:	781d      	ldrb	r5, [r3, #0]
   81a0e:	4619      	mov	r1, r3
   81a10:	e425      	b.n	8125e <_svfprintf_r+0xa6>
   81a12:	930a      	str	r3, [sp, #40]	; 0x28
   81a14:	9b07      	ldr	r3, [sp, #28]
   81a16:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81a1a:	069a      	lsls	r2, r3, #26
   81a1c:	f140 8365 	bpl.w	820ea <_svfprintf_r+0xf32>
   81a20:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81a22:	4613      	mov	r3, r2
   81a24:	3304      	adds	r3, #4
   81a26:	930e      	str	r3, [sp, #56]	; 0x38
   81a28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81a2a:	6811      	ldr	r1, [r2, #0]
   81a2c:	ea4f 79e3 	mov.w	r9, r3, asr #31
   81a30:	461a      	mov	r2, r3
   81a32:	4698      	mov	r8, r3
   81a34:	464b      	mov	r3, r9
   81a36:	e9c1 2300 	strd	r2, r3, [r1]
   81a3a:	f7ff bbe2 	b.w	81202 <_svfprintf_r+0x4a>
   81a3e:	930a      	str	r3, [sp, #40]	; 0x28
   81a40:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81a44:	2d00      	cmp	r5, #0
   81a46:	f000 83e2 	beq.w	8220e <_svfprintf_r+0x1056>
   81a4a:	2300      	movs	r3, #0
   81a4c:	2201      	movs	r2, #1
   81a4e:	469c      	mov	ip, r3
   81a50:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   81a54:	9311      	str	r3, [sp, #68]	; 0x44
   81a56:	9312      	str	r3, [sp, #72]	; 0x48
   81a58:	ab26      	add	r3, sp, #152	; 0x98
   81a5a:	9209      	str	r2, [sp, #36]	; 0x24
   81a5c:	f88d 5098 	strb.w	r5, [sp, #152]	; 0x98
   81a60:	920d      	str	r2, [sp, #52]	; 0x34
   81a62:	9310      	str	r3, [sp, #64]	; 0x40
   81a64:	e4ce      	b.n	81404 <_svfprintf_r+0x24c>
   81a66:	9808      	ldr	r0, [sp, #32]
   81a68:	4631      	mov	r1, r6
   81a6a:	aa23      	add	r2, sp, #140	; 0x8c
   81a6c:	f003 f834 	bl	84ad8 <__ssprint_r>
   81a70:	2800      	cmp	r0, #0
   81a72:	f47f ac67 	bne.w	81344 <_svfprintf_r+0x18c>
   81a76:	463c      	mov	r4, r7
   81a78:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   81a7c:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81a80:	e516      	b.n	814b0 <_svfprintf_r+0x2f8>
   81a82:	2b01      	cmp	r3, #1
   81a84:	f47f ac95 	bne.w	813b2 <_svfprintf_r+0x1fa>
   81a88:	f1b9 0f00 	cmp.w	r9, #0
   81a8c:	bf08      	it	eq
   81a8e:	f1b8 0f0a 	cmpeq.w	r8, #10
   81a92:	f080 8206 	bcs.w	81ea2 <_svfprintf_r+0xcea>
   81a96:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
   81a9a:	f108 0830 	add.w	r8, r8, #48	; 0x30
   81a9e:	f80b 8d41 	strb.w	r8, [fp, #-65]!
   81aa2:	ebcb 0307 	rsb	r3, fp, r7
   81aa6:	930d      	str	r3, [sp, #52]	; 0x34
   81aa8:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81aac:	e49c      	b.n	813e8 <_svfprintf_r+0x230>
   81aae:	2d65      	cmp	r5, #101	; 0x65
   81ab0:	f340 80a0 	ble.w	81bf4 <_svfprintf_r+0xa3c>
   81ab4:	9814      	ldr	r0, [sp, #80]	; 0x50
   81ab6:	9915      	ldr	r1, [sp, #84]	; 0x54
   81ab8:	2200      	movs	r2, #0
   81aba:	2300      	movs	r3, #0
   81abc:	f003 fd30 	bl	85520 <__aeabi_dcmpeq>
   81ac0:	2800      	cmp	r0, #0
   81ac2:	f000 8154 	beq.w	81d6e <_svfprintf_r+0xbb6>
   81ac6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81ac8:	49c1      	ldr	r1, [pc, #772]	; (81dd0 <_svfprintf_r+0xc18>)
   81aca:	3301      	adds	r3, #1
   81acc:	f10b 0b01 	add.w	fp, fp, #1
   81ad0:	2201      	movs	r2, #1
   81ad2:	2b07      	cmp	r3, #7
   81ad4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81ad8:	9324      	str	r3, [sp, #144]	; 0x90
   81ada:	e884 0006 	stmia.w	r4, {r1, r2}
   81ade:	f300 833e 	bgt.w	8215e <_svfprintf_r+0xfa6>
   81ae2:	3408      	adds	r4, #8
   81ae4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   81ae6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81ae8:	4293      	cmp	r3, r2
   81aea:	db03      	blt.n	81af4 <_svfprintf_r+0x93c>
   81aec:	9b07      	ldr	r3, [sp, #28]
   81aee:	07da      	lsls	r2, r3, #31
   81af0:	f57f ad5c 	bpl.w	815ac <_svfprintf_r+0x3f4>
   81af4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81af6:	9918      	ldr	r1, [sp, #96]	; 0x60
   81af8:	3301      	adds	r3, #1
   81afa:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   81afc:	448b      	add	fp, r1
   81afe:	2b07      	cmp	r3, #7
   81b00:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81b04:	6022      	str	r2, [r4, #0]
   81b06:	6061      	str	r1, [r4, #4]
   81b08:	9324      	str	r3, [sp, #144]	; 0x90
   81b0a:	f300 841a 	bgt.w	82342 <_svfprintf_r+0x118a>
   81b0e:	3408      	adds	r4, #8
   81b10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81b12:	1e5d      	subs	r5, r3, #1
   81b14:	2d00      	cmp	r5, #0
   81b16:	f77f ad49 	ble.w	815ac <_svfprintf_r+0x3f4>
   81b1a:	2d10      	cmp	r5, #16
   81b1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81b1e:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 81dd4 <_svfprintf_r+0xc1c>
   81b22:	f340 80ef 	ble.w	81d04 <_svfprintf_r+0xb4c>
   81b26:	f04f 0810 	mov.w	r8, #16
   81b2a:	465a      	mov	r2, fp
   81b2c:	f8dd a020 	ldr.w	sl, [sp, #32]
   81b30:	e004      	b.n	81b3c <_svfprintf_r+0x984>
   81b32:	3408      	adds	r4, #8
   81b34:	3d10      	subs	r5, #16
   81b36:	2d10      	cmp	r5, #16
   81b38:	f340 80e3 	ble.w	81d02 <_svfprintf_r+0xb4a>
   81b3c:	3301      	adds	r3, #1
   81b3e:	3210      	adds	r2, #16
   81b40:	2b07      	cmp	r3, #7
   81b42:	9225      	str	r2, [sp, #148]	; 0x94
   81b44:	9324      	str	r3, [sp, #144]	; 0x90
   81b46:	f8c4 9000 	str.w	r9, [r4]
   81b4a:	f8c4 8004 	str.w	r8, [r4, #4]
   81b4e:	ddf0      	ble.n	81b32 <_svfprintf_r+0x97a>
   81b50:	4650      	mov	r0, sl
   81b52:	4631      	mov	r1, r6
   81b54:	aa23      	add	r2, sp, #140	; 0x8c
   81b56:	f002 ffbf 	bl	84ad8 <__ssprint_r>
   81b5a:	2800      	cmp	r0, #0
   81b5c:	f47f abf2 	bne.w	81344 <_svfprintf_r+0x18c>
   81b60:	463c      	mov	r4, r7
   81b62:	9a25      	ldr	r2, [sp, #148]	; 0x94
   81b64:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81b66:	e7e5      	b.n	81b34 <_svfprintf_r+0x97c>
   81b68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   81b6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   81b6c:	ebc2 0a03 	rsb	sl, r2, r3
   81b70:	f1ba 0f00 	cmp.w	sl, #0
   81b74:	f77f acc4 	ble.w	81500 <_svfprintf_r+0x348>
   81b78:	f1ba 0f10 	cmp.w	sl, #16
   81b7c:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81b7e:	f8df 9254 	ldr.w	r9, [pc, #596]	; 81dd4 <_svfprintf_r+0xc1c>
   81b82:	dd2b      	ble.n	81bdc <_svfprintf_r+0xa24>
   81b84:	4649      	mov	r1, r9
   81b86:	465b      	mov	r3, fp
   81b88:	46a9      	mov	r9, r5
   81b8a:	f04f 0810 	mov.w	r8, #16
   81b8e:	f8dd b020 	ldr.w	fp, [sp, #32]
   81b92:	460d      	mov	r5, r1
   81b94:	e006      	b.n	81ba4 <_svfprintf_r+0x9ec>
   81b96:	f1aa 0a10 	sub.w	sl, sl, #16
   81b9a:	f1ba 0f10 	cmp.w	sl, #16
   81b9e:	f104 0408 	add.w	r4, r4, #8
   81ba2:	dd17      	ble.n	81bd4 <_svfprintf_r+0xa1c>
   81ba4:	3201      	adds	r2, #1
   81ba6:	3310      	adds	r3, #16
   81ba8:	2a07      	cmp	r2, #7
   81baa:	9325      	str	r3, [sp, #148]	; 0x94
   81bac:	9224      	str	r2, [sp, #144]	; 0x90
   81bae:	e884 0120 	stmia.w	r4, {r5, r8}
   81bb2:	ddf0      	ble.n	81b96 <_svfprintf_r+0x9de>
   81bb4:	4658      	mov	r0, fp
   81bb6:	4631      	mov	r1, r6
   81bb8:	aa23      	add	r2, sp, #140	; 0x8c
   81bba:	f002 ff8d 	bl	84ad8 <__ssprint_r>
   81bbe:	2800      	cmp	r0, #0
   81bc0:	f47f abc0 	bne.w	81344 <_svfprintf_r+0x18c>
   81bc4:	f1aa 0a10 	sub.w	sl, sl, #16
   81bc8:	f1ba 0f10 	cmp.w	sl, #16
   81bcc:	463c      	mov	r4, r7
   81bce:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81bd0:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81bd2:	dce7      	bgt.n	81ba4 <_svfprintf_r+0x9ec>
   81bd4:	469b      	mov	fp, r3
   81bd6:	462b      	mov	r3, r5
   81bd8:	464d      	mov	r5, r9
   81bda:	4699      	mov	r9, r3
   81bdc:	3201      	adds	r2, #1
   81bde:	44d3      	add	fp, sl
   81be0:	2a07      	cmp	r2, #7
   81be2:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81be6:	9224      	str	r2, [sp, #144]	; 0x90
   81be8:	e884 0600 	stmia.w	r4, {r9, sl}
   81bec:	f300 823a 	bgt.w	82064 <_svfprintf_r+0xeac>
   81bf0:	3408      	adds	r4, #8
   81bf2:	e485      	b.n	81500 <_svfprintf_r+0x348>
   81bf4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81bf6:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81bf8:	2b01      	cmp	r3, #1
   81bfa:	f340 81fc 	ble.w	81ff6 <_svfprintf_r+0xe3e>
   81bfe:	3501      	adds	r5, #1
   81c00:	9910      	ldr	r1, [sp, #64]	; 0x40
   81c02:	f10b 0301 	add.w	r3, fp, #1
   81c06:	2201      	movs	r2, #1
   81c08:	2d07      	cmp	r5, #7
   81c0a:	9325      	str	r3, [sp, #148]	; 0x94
   81c0c:	6021      	str	r1, [r4, #0]
   81c0e:	9524      	str	r5, [sp, #144]	; 0x90
   81c10:	6062      	str	r2, [r4, #4]
   81c12:	f300 820e 	bgt.w	82032 <_svfprintf_r+0xe7a>
   81c16:	3408      	adds	r4, #8
   81c18:	9918      	ldr	r1, [sp, #96]	; 0x60
   81c1a:	3501      	adds	r5, #1
   81c1c:	eb03 0b01 	add.w	fp, r3, r1
   81c20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   81c22:	2d07      	cmp	r5, #7
   81c24:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81c28:	9524      	str	r5, [sp, #144]	; 0x90
   81c2a:	6023      	str	r3, [r4, #0]
   81c2c:	6061      	str	r1, [r4, #4]
   81c2e:	f300 820c 	bgt.w	8204a <_svfprintf_r+0xe92>
   81c32:	3408      	adds	r4, #8
   81c34:	2300      	movs	r3, #0
   81c36:	9814      	ldr	r0, [sp, #80]	; 0x50
   81c38:	9915      	ldr	r1, [sp, #84]	; 0x54
   81c3a:	2200      	movs	r2, #0
   81c3c:	f003 fc70 	bl	85520 <__aeabi_dcmpeq>
   81c40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81c42:	2800      	cmp	r0, #0
   81c44:	f040 80e3 	bne.w	81e0e <_svfprintf_r+0xc56>
   81c48:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81c4a:	3b01      	subs	r3, #1
   81c4c:	3501      	adds	r5, #1
   81c4e:	3201      	adds	r2, #1
   81c50:	449b      	add	fp, r3
   81c52:	2d07      	cmp	r5, #7
   81c54:	6022      	str	r2, [r4, #0]
   81c56:	9524      	str	r5, [sp, #144]	; 0x90
   81c58:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81c5c:	6063      	str	r3, [r4, #4]
   81c5e:	f300 8113 	bgt.w	81e88 <_svfprintf_r+0xcd0>
   81c62:	3408      	adds	r4, #8
   81c64:	9a19      	ldr	r2, [sp, #100]	; 0x64
   81c66:	3501      	adds	r5, #1
   81c68:	4493      	add	fp, r2
   81c6a:	ab1f      	add	r3, sp, #124	; 0x7c
   81c6c:	2d07      	cmp	r5, #7
   81c6e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81c72:	9524      	str	r5, [sp, #144]	; 0x90
   81c74:	6062      	str	r2, [r4, #4]
   81c76:	6023      	str	r3, [r4, #0]
   81c78:	f77f ac97 	ble.w	815aa <_svfprintf_r+0x3f2>
   81c7c:	9808      	ldr	r0, [sp, #32]
   81c7e:	4631      	mov	r1, r6
   81c80:	aa23      	add	r2, sp, #140	; 0x8c
   81c82:	f002 ff29 	bl	84ad8 <__ssprint_r>
   81c86:	2800      	cmp	r0, #0
   81c88:	f47f ab5c 	bne.w	81344 <_svfprintf_r+0x18c>
   81c8c:	463c      	mov	r4, r7
   81c8e:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81c92:	e48b      	b.n	815ac <_svfprintf_r+0x3f4>
   81c94:	2b00      	cmp	r3, #0
   81c96:	d14c      	bne.n	81d32 <_svfprintf_r+0xb7a>
   81c98:	9b07      	ldr	r3, [sp, #28]
   81c9a:	07d8      	lsls	r0, r3, #31
   81c9c:	d549      	bpl.n	81d32 <_svfprintf_r+0xb7a>
   81c9e:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
   81ca2:	2330      	movs	r3, #48	; 0x30
   81ca4:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   81ca8:	ebcb 0307 	rsb	r3, fp, r7
   81cac:	930d      	str	r3, [sp, #52]	; 0x34
   81cae:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81cb2:	f7ff bb99 	b.w	813e8 <_svfprintf_r+0x230>
   81cb6:	9808      	ldr	r0, [sp, #32]
   81cb8:	4631      	mov	r1, r6
   81cba:	aa23      	add	r2, sp, #140	; 0x8c
   81cbc:	f002 ff0c 	bl	84ad8 <__ssprint_r>
   81cc0:	2800      	cmp	r0, #0
   81cc2:	f47f ab3f 	bne.w	81344 <_svfprintf_r+0x18c>
   81cc6:	463c      	mov	r4, r7
   81cc8:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81ccc:	e45c      	b.n	81588 <_svfprintf_r+0x3d0>
   81cce:	9808      	ldr	r0, [sp, #32]
   81cd0:	4631      	mov	r1, r6
   81cd2:	aa23      	add	r2, sp, #140	; 0x8c
   81cd4:	f002 ff00 	bl	84ad8 <__ssprint_r>
   81cd8:	2800      	cmp	r0, #0
   81cda:	f47f ab33 	bne.w	81344 <_svfprintf_r+0x18c>
   81cde:	463c      	mov	r4, r7
   81ce0:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81ce4:	f7ff bbf7 	b.w	814d6 <_svfprintf_r+0x31e>
   81ce8:	9808      	ldr	r0, [sp, #32]
   81cea:	4631      	mov	r1, r6
   81cec:	aa23      	add	r2, sp, #140	; 0x8c
   81cee:	f002 fef3 	bl	84ad8 <__ssprint_r>
   81cf2:	2800      	cmp	r0, #0
   81cf4:	f47f ab26 	bne.w	81344 <_svfprintf_r+0x18c>
   81cf8:	463c      	mov	r4, r7
   81cfa:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81cfe:	f7ff bbfb 	b.w	814f8 <_svfprintf_r+0x340>
   81d02:	4693      	mov	fp, r2
   81d04:	3301      	adds	r3, #1
   81d06:	44ab      	add	fp, r5
   81d08:	2b07      	cmp	r3, #7
   81d0a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81d0e:	9324      	str	r3, [sp, #144]	; 0x90
   81d10:	f8c4 9000 	str.w	r9, [r4]
   81d14:	6065      	str	r5, [r4, #4]
   81d16:	f77f ac48 	ble.w	815aa <_svfprintf_r+0x3f2>
   81d1a:	9808      	ldr	r0, [sp, #32]
   81d1c:	4631      	mov	r1, r6
   81d1e:	aa23      	add	r2, sp, #140	; 0x8c
   81d20:	f002 feda 	bl	84ad8 <__ssprint_r>
   81d24:	2800      	cmp	r0, #0
   81d26:	f47f ab0d 	bne.w	81344 <_svfprintf_r+0x18c>
   81d2a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81d2e:	463c      	mov	r4, r7
   81d30:	e43c      	b.n	815ac <_svfprintf_r+0x3f4>
   81d32:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
   81d36:	9710      	str	r7, [sp, #64]	; 0x40
   81d38:	f7ff bb56 	b.w	813e8 <_svfprintf_r+0x230>
   81d3c:	46bb      	mov	fp, r7
   81d3e:	9816      	ldr	r0, [sp, #88]	; 0x58
   81d40:	ea4f 1318 	mov.w	r3, r8, lsr #4
   81d44:	ea43 7309 	orr.w	r3, r3, r9, lsl #28
   81d48:	ea4f 1119 	mov.w	r1, r9, lsr #4
   81d4c:	f008 020f 	and.w	r2, r8, #15
   81d50:	4689      	mov	r9, r1
   81d52:	4698      	mov	r8, r3
   81d54:	5c83      	ldrb	r3, [r0, r2]
   81d56:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   81d5a:	ea58 0309 	orrs.w	r3, r8, r9
   81d5e:	d1ef      	bne.n	81d40 <_svfprintf_r+0xb88>
   81d60:	465b      	mov	r3, fp
   81d62:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81d66:	1afb      	subs	r3, r7, r3
   81d68:	930d      	str	r3, [sp, #52]	; 0x34
   81d6a:	f7ff bb3d 	b.w	813e8 <_svfprintf_r+0x230>
   81d6e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
   81d70:	2d00      	cmp	r5, #0
   81d72:	f340 8200 	ble.w	82176 <_svfprintf_r+0xfbe>
   81d76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81d78:	9912      	ldr	r1, [sp, #72]	; 0x48
   81d7a:	4613      	mov	r3, r2
   81d7c:	428a      	cmp	r2, r1
   81d7e:	bfa8      	it	ge
   81d80:	460b      	movge	r3, r1
   81d82:	461d      	mov	r5, r3
   81d84:	9910      	ldr	r1, [sp, #64]	; 0x40
   81d86:	2d00      	cmp	r5, #0
   81d88:	eb01 0a02 	add.w	sl, r1, r2
   81d8c:	dd0c      	ble.n	81da8 <_svfprintf_r+0xbf0>
   81d8e:	460a      	mov	r2, r1
   81d90:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81d92:	44ab      	add	fp, r5
   81d94:	3301      	adds	r3, #1
   81d96:	2b07      	cmp	r3, #7
   81d98:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81d9c:	e884 0024 	stmia.w	r4, {r2, r5}
   81da0:	9324      	str	r3, [sp, #144]	; 0x90
   81da2:	f300 8348 	bgt.w	82436 <_svfprintf_r+0x127e>
   81da6:	3408      	adds	r4, #8
   81da8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   81daa:	2d00      	cmp	r5, #0
   81dac:	bfa8      	it	ge
   81dae:	1b5b      	subge	r3, r3, r5
   81db0:	2b00      	cmp	r3, #0
   81db2:	461d      	mov	r5, r3
   81db4:	f340 80c1 	ble.w	81f3a <_svfprintf_r+0xd82>
   81db8:	2d10      	cmp	r5, #16
   81dba:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81dbc:	f8df 9014 	ldr.w	r9, [pc, #20]	; 81dd4 <_svfprintf_r+0xc1c>
   81dc0:	f340 81c0 	ble.w	82144 <_svfprintf_r+0xf8c>
   81dc4:	465a      	mov	r2, fp
   81dc6:	f04f 0810 	mov.w	r8, #16
   81dca:	f8dd b020 	ldr.w	fp, [sp, #32]
   81dce:	e008      	b.n	81de2 <_svfprintf_r+0xc2a>
   81dd0:	00085c1c 	.word	0x00085c1c
   81dd4:	00085bbc 	.word	0x00085bbc
   81dd8:	3408      	adds	r4, #8
   81dda:	3d10      	subs	r5, #16
   81ddc:	2d10      	cmp	r5, #16
   81dde:	f340 81b0 	ble.w	82142 <_svfprintf_r+0xf8a>
   81de2:	3301      	adds	r3, #1
   81de4:	3210      	adds	r2, #16
   81de6:	2b07      	cmp	r3, #7
   81de8:	9225      	str	r2, [sp, #148]	; 0x94
   81dea:	9324      	str	r3, [sp, #144]	; 0x90
   81dec:	f8c4 9000 	str.w	r9, [r4]
   81df0:	f8c4 8004 	str.w	r8, [r4, #4]
   81df4:	ddf0      	ble.n	81dd8 <_svfprintf_r+0xc20>
   81df6:	4658      	mov	r0, fp
   81df8:	4631      	mov	r1, r6
   81dfa:	aa23      	add	r2, sp, #140	; 0x8c
   81dfc:	f002 fe6c 	bl	84ad8 <__ssprint_r>
   81e00:	2800      	cmp	r0, #0
   81e02:	f47f aa9f 	bne.w	81344 <_svfprintf_r+0x18c>
   81e06:	463c      	mov	r4, r7
   81e08:	9a25      	ldr	r2, [sp, #148]	; 0x94
   81e0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81e0c:	e7e5      	b.n	81dda <_svfprintf_r+0xc22>
   81e0e:	f103 38ff 	add.w	r8, r3, #4294967295
   81e12:	f1b8 0f00 	cmp.w	r8, #0
   81e16:	f77f af25 	ble.w	81c64 <_svfprintf_r+0xaac>
   81e1a:	f1b8 0f10 	cmp.w	r8, #16
   81e1e:	f8df 9548 	ldr.w	r9, [pc, #1352]	; 82368 <_svfprintf_r+0x11b0>
   81e22:	dd25      	ble.n	81e70 <_svfprintf_r+0xcb8>
   81e24:	465b      	mov	r3, fp
   81e26:	f04f 0a10 	mov.w	sl, #16
   81e2a:	f8dd b020 	ldr.w	fp, [sp, #32]
   81e2e:	e006      	b.n	81e3e <_svfprintf_r+0xc86>
   81e30:	f1a8 0810 	sub.w	r8, r8, #16
   81e34:	f1b8 0f10 	cmp.w	r8, #16
   81e38:	f104 0408 	add.w	r4, r4, #8
   81e3c:	dd17      	ble.n	81e6e <_svfprintf_r+0xcb6>
   81e3e:	3501      	adds	r5, #1
   81e40:	3310      	adds	r3, #16
   81e42:	2d07      	cmp	r5, #7
   81e44:	9325      	str	r3, [sp, #148]	; 0x94
   81e46:	9524      	str	r5, [sp, #144]	; 0x90
   81e48:	e884 0600 	stmia.w	r4, {r9, sl}
   81e4c:	ddf0      	ble.n	81e30 <_svfprintf_r+0xc78>
   81e4e:	4658      	mov	r0, fp
   81e50:	4631      	mov	r1, r6
   81e52:	aa23      	add	r2, sp, #140	; 0x8c
   81e54:	f002 fe40 	bl	84ad8 <__ssprint_r>
   81e58:	2800      	cmp	r0, #0
   81e5a:	f47f aa73 	bne.w	81344 <_svfprintf_r+0x18c>
   81e5e:	f1a8 0810 	sub.w	r8, r8, #16
   81e62:	f1b8 0f10 	cmp.w	r8, #16
   81e66:	463c      	mov	r4, r7
   81e68:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81e6a:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81e6c:	dce7      	bgt.n	81e3e <_svfprintf_r+0xc86>
   81e6e:	469b      	mov	fp, r3
   81e70:	3501      	adds	r5, #1
   81e72:	44c3      	add	fp, r8
   81e74:	2d07      	cmp	r5, #7
   81e76:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81e7a:	9524      	str	r5, [sp, #144]	; 0x90
   81e7c:	f8c4 9000 	str.w	r9, [r4]
   81e80:	f8c4 8004 	str.w	r8, [r4, #4]
   81e84:	f77f aeed 	ble.w	81c62 <_svfprintf_r+0xaaa>
   81e88:	9808      	ldr	r0, [sp, #32]
   81e8a:	4631      	mov	r1, r6
   81e8c:	aa23      	add	r2, sp, #140	; 0x8c
   81e8e:	f002 fe23 	bl	84ad8 <__ssprint_r>
   81e92:	2800      	cmp	r0, #0
   81e94:	f47f aa56 	bne.w	81344 <_svfprintf_r+0x18c>
   81e98:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81e9c:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81e9e:	463c      	mov	r4, r7
   81ea0:	e6e0      	b.n	81c64 <_svfprintf_r+0xaac>
   81ea2:	46bb      	mov	fp, r7
   81ea4:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81ea8:	4640      	mov	r0, r8
   81eaa:	4649      	mov	r1, r9
   81eac:	220a      	movs	r2, #10
   81eae:	2300      	movs	r3, #0
   81eb0:	f003 fb90 	bl	855d4 <__aeabi_uldivmod>
   81eb4:	3230      	adds	r2, #48	; 0x30
   81eb6:	4640      	mov	r0, r8
   81eb8:	4649      	mov	r1, r9
   81eba:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   81ebe:	2300      	movs	r3, #0
   81ec0:	220a      	movs	r2, #10
   81ec2:	f003 fb87 	bl	855d4 <__aeabi_uldivmod>
   81ec6:	4680      	mov	r8, r0
   81ec8:	4689      	mov	r9, r1
   81eca:	ea58 0309 	orrs.w	r3, r8, r9
   81ece:	d1eb      	bne.n	81ea8 <_svfprintf_r+0xcf0>
   81ed0:	465b      	mov	r3, fp
   81ed2:	1afb      	subs	r3, r7, r3
   81ed4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81ed8:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81edc:	930d      	str	r3, [sp, #52]	; 0x34
   81ede:	f7ff ba83 	b.w	813e8 <_svfprintf_r+0x230>
   81ee2:	2b30      	cmp	r3, #48	; 0x30
   81ee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81ee6:	f43f af3e 	beq.w	81d66 <_svfprintf_r+0xbae>
   81eea:	3b01      	subs	r3, #1
   81eec:	461a      	mov	r2, r3
   81eee:	9310      	str	r3, [sp, #64]	; 0x40
   81ef0:	1aba      	subs	r2, r7, r2
   81ef2:	2330      	movs	r3, #48	; 0x30
   81ef4:	920d      	str	r2, [sp, #52]	; 0x34
   81ef6:	f801 3c01 	strb.w	r3, [r1, #-1]
   81efa:	f7ff ba75 	b.w	813e8 <_svfprintf_r+0x230>
   81efe:	990e      	ldr	r1, [sp, #56]	; 0x38
   81f00:	f04f 0900 	mov.w	r9, #0
   81f04:	680a      	ldr	r2, [r1, #0]
   81f06:	3104      	adds	r1, #4
   81f08:	910e      	str	r1, [sp, #56]	; 0x38
   81f0a:	4690      	mov	r8, r2
   81f0c:	f7ff ba39 	b.w	81382 <_svfprintf_r+0x1ca>
   81f10:	990e      	ldr	r1, [sp, #56]	; 0x38
   81f12:	2301      	movs	r3, #1
   81f14:	680a      	ldr	r2, [r1, #0]
   81f16:	3104      	adds	r1, #4
   81f18:	910e      	str	r1, [sp, #56]	; 0x38
   81f1a:	4690      	mov	r8, r2
   81f1c:	f04f 0900 	mov.w	r9, #0
   81f20:	f7ff ba2f 	b.w	81382 <_svfprintf_r+0x1ca>
   81f24:	9808      	ldr	r0, [sp, #32]
   81f26:	4631      	mov	r1, r6
   81f28:	aa23      	add	r2, sp, #140	; 0x8c
   81f2a:	f002 fdd5 	bl	84ad8 <__ssprint_r>
   81f2e:	2800      	cmp	r0, #0
   81f30:	f47f aa08 	bne.w	81344 <_svfprintf_r+0x18c>
   81f34:	463c      	mov	r4, r7
   81f36:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81f3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81f3c:	9912      	ldr	r1, [sp, #72]	; 0x48
   81f3e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   81f40:	440a      	add	r2, r1
   81f42:	4690      	mov	r8, r2
   81f44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81f46:	4293      	cmp	r3, r2
   81f48:	db46      	blt.n	81fd8 <_svfprintf_r+0xe20>
   81f4a:	9a07      	ldr	r2, [sp, #28]
   81f4c:	07d0      	lsls	r0, r2, #31
   81f4e:	d443      	bmi.n	81fd8 <_svfprintf_r+0xe20>
   81f50:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81f52:	ebc8 050a 	rsb	r5, r8, sl
   81f56:	1ad3      	subs	r3, r2, r3
   81f58:	429d      	cmp	r5, r3
   81f5a:	bfa8      	it	ge
   81f5c:	461d      	movge	r5, r3
   81f5e:	2d00      	cmp	r5, #0
   81f60:	dd0c      	ble.n	81f7c <_svfprintf_r+0xdc4>
   81f62:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81f64:	44ab      	add	fp, r5
   81f66:	3201      	adds	r2, #1
   81f68:	2a07      	cmp	r2, #7
   81f6a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81f6e:	f8c4 8000 	str.w	r8, [r4]
   81f72:	6065      	str	r5, [r4, #4]
   81f74:	9224      	str	r2, [sp, #144]	; 0x90
   81f76:	f300 8296 	bgt.w	824a6 <_svfprintf_r+0x12ee>
   81f7a:	3408      	adds	r4, #8
   81f7c:	2d00      	cmp	r5, #0
   81f7e:	bfb4      	ite	lt
   81f80:	461d      	movlt	r5, r3
   81f82:	1b5d      	subge	r5, r3, r5
   81f84:	2d00      	cmp	r5, #0
   81f86:	f77f ab11 	ble.w	815ac <_svfprintf_r+0x3f4>
   81f8a:	2d10      	cmp	r5, #16
   81f8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81f8e:	f8df 93d8 	ldr.w	r9, [pc, #984]	; 82368 <_svfprintf_r+0x11b0>
   81f92:	f77f aeb7 	ble.w	81d04 <_svfprintf_r+0xb4c>
   81f96:	f04f 0810 	mov.w	r8, #16
   81f9a:	465a      	mov	r2, fp
   81f9c:	f8dd a020 	ldr.w	sl, [sp, #32]
   81fa0:	e004      	b.n	81fac <_svfprintf_r+0xdf4>
   81fa2:	3408      	adds	r4, #8
   81fa4:	3d10      	subs	r5, #16
   81fa6:	2d10      	cmp	r5, #16
   81fa8:	f77f aeab 	ble.w	81d02 <_svfprintf_r+0xb4a>
   81fac:	3301      	adds	r3, #1
   81fae:	3210      	adds	r2, #16
   81fb0:	2b07      	cmp	r3, #7
   81fb2:	9225      	str	r2, [sp, #148]	; 0x94
   81fb4:	9324      	str	r3, [sp, #144]	; 0x90
   81fb6:	f8c4 9000 	str.w	r9, [r4]
   81fba:	f8c4 8004 	str.w	r8, [r4, #4]
   81fbe:	ddf0      	ble.n	81fa2 <_svfprintf_r+0xdea>
   81fc0:	4650      	mov	r0, sl
   81fc2:	4631      	mov	r1, r6
   81fc4:	aa23      	add	r2, sp, #140	; 0x8c
   81fc6:	f002 fd87 	bl	84ad8 <__ssprint_r>
   81fca:	2800      	cmp	r0, #0
   81fcc:	f47f a9ba 	bne.w	81344 <_svfprintf_r+0x18c>
   81fd0:	463c      	mov	r4, r7
   81fd2:	9a25      	ldr	r2, [sp, #148]	; 0x94
   81fd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81fd6:	e7e5      	b.n	81fa4 <_svfprintf_r+0xdec>
   81fd8:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81fda:	9818      	ldr	r0, [sp, #96]	; 0x60
   81fdc:	3201      	adds	r2, #1
   81fde:	9917      	ldr	r1, [sp, #92]	; 0x5c
   81fe0:	4483      	add	fp, r0
   81fe2:	2a07      	cmp	r2, #7
   81fe4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81fe8:	6021      	str	r1, [r4, #0]
   81fea:	6060      	str	r0, [r4, #4]
   81fec:	9224      	str	r2, [sp, #144]	; 0x90
   81fee:	f300 8239 	bgt.w	82464 <_svfprintf_r+0x12ac>
   81ff2:	3408      	adds	r4, #8
   81ff4:	e7ac      	b.n	81f50 <_svfprintf_r+0xd98>
   81ff6:	9b07      	ldr	r3, [sp, #28]
   81ff8:	07d9      	lsls	r1, r3, #31
   81ffa:	f53f ae00 	bmi.w	81bfe <_svfprintf_r+0xa46>
   81ffe:	3501      	adds	r5, #1
   82000:	9a10      	ldr	r2, [sp, #64]	; 0x40
   82002:	f10b 0b01 	add.w	fp, fp, #1
   82006:	2301      	movs	r3, #1
   82008:	2d07      	cmp	r5, #7
   8200a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   8200e:	6022      	str	r2, [r4, #0]
   82010:	9524      	str	r5, [sp, #144]	; 0x90
   82012:	6063      	str	r3, [r4, #4]
   82014:	f77f ae25 	ble.w	81c62 <_svfprintf_r+0xaaa>
   82018:	9808      	ldr	r0, [sp, #32]
   8201a:	4631      	mov	r1, r6
   8201c:	aa23      	add	r2, sp, #140	; 0x8c
   8201e:	f002 fd5b 	bl	84ad8 <__ssprint_r>
   82022:	2800      	cmp	r0, #0
   82024:	f47f a98e 	bne.w	81344 <_svfprintf_r+0x18c>
   82028:	463c      	mov	r4, r7
   8202a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   8202e:	9d24      	ldr	r5, [sp, #144]	; 0x90
   82030:	e618      	b.n	81c64 <_svfprintf_r+0xaac>
   82032:	9808      	ldr	r0, [sp, #32]
   82034:	4631      	mov	r1, r6
   82036:	aa23      	add	r2, sp, #140	; 0x8c
   82038:	f002 fd4e 	bl	84ad8 <__ssprint_r>
   8203c:	2800      	cmp	r0, #0
   8203e:	f47f a981 	bne.w	81344 <_svfprintf_r+0x18c>
   82042:	463c      	mov	r4, r7
   82044:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82046:	9d24      	ldr	r5, [sp, #144]	; 0x90
   82048:	e5e6      	b.n	81c18 <_svfprintf_r+0xa60>
   8204a:	9808      	ldr	r0, [sp, #32]
   8204c:	4631      	mov	r1, r6
   8204e:	aa23      	add	r2, sp, #140	; 0x8c
   82050:	f002 fd42 	bl	84ad8 <__ssprint_r>
   82054:	2800      	cmp	r0, #0
   82056:	f47f a975 	bne.w	81344 <_svfprintf_r+0x18c>
   8205a:	463c      	mov	r4, r7
   8205c:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82060:	9d24      	ldr	r5, [sp, #144]	; 0x90
   82062:	e5e7      	b.n	81c34 <_svfprintf_r+0xa7c>
   82064:	9808      	ldr	r0, [sp, #32]
   82066:	4631      	mov	r1, r6
   82068:	aa23      	add	r2, sp, #140	; 0x8c
   8206a:	f002 fd35 	bl	84ad8 <__ssprint_r>
   8206e:	2800      	cmp	r0, #0
   82070:	f47f a968 	bne.w	81344 <_svfprintf_r+0x18c>
   82074:	463c      	mov	r4, r7
   82076:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   8207a:	f7ff ba41 	b.w	81500 <_svfprintf_r+0x348>
   8207e:	f002 fced 	bl	84a5c <__fpclassifyd>
   82082:	2800      	cmp	r0, #0
   82084:	f040 80dd 	bne.w	82242 <_svfprintf_r+0x108a>
   82088:	4ab4      	ldr	r2, [pc, #720]	; (8235c <_svfprintf_r+0x11a4>)
   8208a:	4bb5      	ldr	r3, [pc, #724]	; (82360 <_svfprintf_r+0x11a8>)
   8208c:	4686      	mov	lr, r0
   8208e:	2d47      	cmp	r5, #71	; 0x47
   82090:	bfd8      	it	le
   82092:	461a      	movle	r2, r3
   82094:	9011      	str	r0, [sp, #68]	; 0x44
   82096:	9807      	ldr	r0, [sp, #28]
   82098:	2103      	movs	r1, #3
   8209a:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   8209e:	9109      	str	r1, [sp, #36]	; 0x24
   820a0:	9007      	str	r0, [sp, #28]
   820a2:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
   820a6:	9210      	str	r2, [sp, #64]	; 0x40
   820a8:	910d      	str	r1, [sp, #52]	; 0x34
   820aa:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   820ae:	f7ff b9a3 	b.w	813f8 <_svfprintf_r+0x240>
   820b2:	f029 0907 	bic.w	r9, r9, #7
   820b6:	f8d9 3000 	ldr.w	r3, [r9]
   820ba:	9314      	str	r3, [sp, #80]	; 0x50
   820bc:	f8d9 3004 	ldr.w	r3, [r9, #4]
   820c0:	9315      	str	r3, [sp, #84]	; 0x54
   820c2:	f109 0308 	add.w	r3, r9, #8
   820c6:	930e      	str	r3, [sp, #56]	; 0x38
   820c8:	f7ff bbc5 	b.w	81856 <_svfprintf_r+0x69e>
   820cc:	9b07      	ldr	r3, [sp, #28]
   820ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   820d0:	f013 0f40 	tst.w	r3, #64	; 0x40
   820d4:	4613      	mov	r3, r2
   820d6:	f43f ac40 	beq.w	8195a <_svfprintf_r+0x7a2>
   820da:	3304      	adds	r3, #4
   820dc:	f8b2 8000 	ldrh.w	r8, [r2]
   820e0:	f04f 0900 	mov.w	r9, #0
   820e4:	930e      	str	r3, [sp, #56]	; 0x38
   820e6:	f7ff bb1c 	b.w	81722 <_svfprintf_r+0x56a>
   820ea:	9b07      	ldr	r3, [sp, #28]
   820ec:	06db      	lsls	r3, r3, #27
   820ee:	d40b      	bmi.n	82108 <_svfprintf_r+0xf50>
   820f0:	9b07      	ldr	r3, [sp, #28]
   820f2:	065d      	lsls	r5, r3, #25
   820f4:	d508      	bpl.n	82108 <_svfprintf_r+0xf50>
   820f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   820f8:	6813      	ldr	r3, [r2, #0]
   820fa:	3204      	adds	r2, #4
   820fc:	920e      	str	r2, [sp, #56]	; 0x38
   820fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
   82102:	801a      	strh	r2, [r3, #0]
   82104:	f7ff b87d 	b.w	81202 <_svfprintf_r+0x4a>
   82108:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   8210a:	6813      	ldr	r3, [r2, #0]
   8210c:	3204      	adds	r2, #4
   8210e:	920e      	str	r2, [sp, #56]	; 0x38
   82110:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82112:	601a      	str	r2, [r3, #0]
   82114:	f7ff b875 	b.w	81202 <_svfprintf_r+0x4a>
   82118:	4619      	mov	r1, r3
   8211a:	781d      	ldrb	r5, [r3, #0]
   8211c:	f7ff b89f 	b.w	8125e <_svfprintf_r+0xa6>
   82120:	9b07      	ldr	r3, [sp, #28]
   82122:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82124:	f013 0f40 	tst.w	r3, #64	; 0x40
   82128:	4613      	mov	r3, r2
   8212a:	f43f ab3a 	beq.w	817a2 <_svfprintf_r+0x5ea>
   8212e:	f9b2 8000 	ldrsh.w	r8, [r2]
   82132:	3304      	adds	r3, #4
   82134:	ea4f 79e8 	mov.w	r9, r8, asr #31
   82138:	930e      	str	r3, [sp, #56]	; 0x38
   8213a:	4642      	mov	r2, r8
   8213c:	464b      	mov	r3, r9
   8213e:	f7ff bad3 	b.w	816e8 <_svfprintf_r+0x530>
   82142:	4693      	mov	fp, r2
   82144:	3301      	adds	r3, #1
   82146:	44ab      	add	fp, r5
   82148:	2b07      	cmp	r3, #7
   8214a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   8214e:	9324      	str	r3, [sp, #144]	; 0x90
   82150:	f8c4 9000 	str.w	r9, [r4]
   82154:	6065      	str	r5, [r4, #4]
   82156:	f73f aee5 	bgt.w	81f24 <_svfprintf_r+0xd6c>
   8215a:	3408      	adds	r4, #8
   8215c:	e6ed      	b.n	81f3a <_svfprintf_r+0xd82>
   8215e:	9808      	ldr	r0, [sp, #32]
   82160:	4631      	mov	r1, r6
   82162:	aa23      	add	r2, sp, #140	; 0x8c
   82164:	f002 fcb8 	bl	84ad8 <__ssprint_r>
   82168:	2800      	cmp	r0, #0
   8216a:	f47f a8eb 	bne.w	81344 <_svfprintf_r+0x18c>
   8216e:	463c      	mov	r4, r7
   82170:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82174:	e4b6      	b.n	81ae4 <_svfprintf_r+0x92c>
   82176:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82178:	497a      	ldr	r1, [pc, #488]	; (82364 <_svfprintf_r+0x11ac>)
   8217a:	3301      	adds	r3, #1
   8217c:	f10b 0b01 	add.w	fp, fp, #1
   82180:	2201      	movs	r2, #1
   82182:	2b07      	cmp	r3, #7
   82184:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   82188:	9324      	str	r3, [sp, #144]	; 0x90
   8218a:	e884 0006 	stmia.w	r4, {r1, r2}
   8218e:	f300 80fd 	bgt.w	8238c <_svfprintf_r+0x11d4>
   82192:	3408      	adds	r4, #8
   82194:	b92d      	cbnz	r5, 821a2 <_svfprintf_r+0xfea>
   82196:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82198:	b91b      	cbnz	r3, 821a2 <_svfprintf_r+0xfea>
   8219a:	9b07      	ldr	r3, [sp, #28]
   8219c:	07db      	lsls	r3, r3, #31
   8219e:	f57f aa05 	bpl.w	815ac <_svfprintf_r+0x3f4>
   821a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
   821a4:	9818      	ldr	r0, [sp, #96]	; 0x60
   821a6:	3301      	adds	r3, #1
   821a8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   821aa:	eb0b 0100 	add.w	r1, fp, r0
   821ae:	2b07      	cmp	r3, #7
   821b0:	9125      	str	r1, [sp, #148]	; 0x94
   821b2:	6022      	str	r2, [r4, #0]
   821b4:	6060      	str	r0, [r4, #4]
   821b6:	9324      	str	r3, [sp, #144]	; 0x90
   821b8:	f300 81f4 	bgt.w	825a4 <_svfprintf_r+0x13ec>
   821bc:	f104 0208 	add.w	r2, r4, #8
   821c0:	426d      	negs	r5, r5
   821c2:	2d00      	cmp	r5, #0
   821c4:	f340 8107 	ble.w	823d6 <_svfprintf_r+0x121e>
   821c8:	2d10      	cmp	r5, #16
   821ca:	f8df 919c 	ldr.w	r9, [pc, #412]	; 82368 <_svfprintf_r+0x11b0>
   821ce:	f340 813e 	ble.w	8244e <_svfprintf_r+0x1296>
   821d2:	2410      	movs	r4, #16
   821d4:	f8dd 8020 	ldr.w	r8, [sp, #32]
   821d8:	e004      	b.n	821e4 <_svfprintf_r+0x102c>
   821da:	3208      	adds	r2, #8
   821dc:	3d10      	subs	r5, #16
   821de:	2d10      	cmp	r5, #16
   821e0:	f340 8135 	ble.w	8244e <_svfprintf_r+0x1296>
   821e4:	3301      	adds	r3, #1
   821e6:	3110      	adds	r1, #16
   821e8:	2b07      	cmp	r3, #7
   821ea:	9125      	str	r1, [sp, #148]	; 0x94
   821ec:	9324      	str	r3, [sp, #144]	; 0x90
   821ee:	f8c2 9000 	str.w	r9, [r2]
   821f2:	6054      	str	r4, [r2, #4]
   821f4:	ddf1      	ble.n	821da <_svfprintf_r+0x1022>
   821f6:	4640      	mov	r0, r8
   821f8:	4631      	mov	r1, r6
   821fa:	aa23      	add	r2, sp, #140	; 0x8c
   821fc:	f002 fc6c 	bl	84ad8 <__ssprint_r>
   82200:	2800      	cmp	r0, #0
   82202:	f47f a89f 	bne.w	81344 <_svfprintf_r+0x18c>
   82206:	463a      	mov	r2, r7
   82208:	9925      	ldr	r1, [sp, #148]	; 0x94
   8220a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8220c:	e7e6      	b.n	821dc <_svfprintf_r+0x1024>
   8220e:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82210:	46b1      	mov	r9, r6
   82212:	2b00      	cmp	r3, #0
   82214:	f43f a897 	beq.w	81346 <_svfprintf_r+0x18e>
   82218:	9808      	ldr	r0, [sp, #32]
   8221a:	4631      	mov	r1, r6
   8221c:	aa23      	add	r2, sp, #140	; 0x8c
   8221e:	f002 fc5b 	bl	84ad8 <__ssprint_r>
   82222:	f7ff b890 	b.w	81346 <_svfprintf_r+0x18e>
   82226:	f041 0120 	orr.w	r1, r1, #32
   8222a:	9107      	str	r1, [sp, #28]
   8222c:	785d      	ldrb	r5, [r3, #1]
   8222e:	1c59      	adds	r1, r3, #1
   82230:	f7ff b815 	b.w	8125e <_svfprintf_r+0xa6>
   82234:	980c      	ldr	r0, [sp, #48]	; 0x30
   82236:	910e      	str	r1, [sp, #56]	; 0x38
   82238:	4240      	negs	r0, r0
   8223a:	900c      	str	r0, [sp, #48]	; 0x30
   8223c:	4619      	mov	r1, r3
   8223e:	f7ff ba0b 	b.w	81658 <_svfprintf_r+0x4a0>
   82242:	f025 0320 	bic.w	r3, r5, #32
   82246:	f1ba 3fff 	cmp.w	sl, #4294967295
   8224a:	930d      	str	r3, [sp, #52]	; 0x34
   8224c:	f000 80ab 	beq.w	823a6 <_svfprintf_r+0x11ee>
   82250:	2b47      	cmp	r3, #71	; 0x47
   82252:	d105      	bne.n	82260 <_svfprintf_r+0x10a8>
   82254:	f1ba 0f00 	cmp.w	sl, #0
   82258:	bf14      	ite	ne
   8225a:	46d3      	movne	fp, sl
   8225c:	f04f 0b01 	moveq.w	fp, #1
   82260:	9b07      	ldr	r3, [sp, #28]
   82262:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   82266:	9311      	str	r3, [sp, #68]	; 0x44
   82268:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8226a:	f1b3 0a00 	subs.w	sl, r3, #0
   8226e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   82270:	9309      	str	r3, [sp, #36]	; 0x24
   82272:	bfb7      	itett	lt
   82274:	4653      	movlt	r3, sl
   82276:	2300      	movge	r3, #0
   82278:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
   8227c:	232d      	movlt	r3, #45	; 0x2d
   8227e:	2d66      	cmp	r5, #102	; 0x66
   82280:	930f      	str	r3, [sp, #60]	; 0x3c
   82282:	f000 80b9 	beq.w	823f8 <_svfprintf_r+0x1240>
   82286:	2d46      	cmp	r5, #70	; 0x46
   82288:	f000 80b6 	beq.w	823f8 <_svfprintf_r+0x1240>
   8228c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8228e:	2002      	movs	r0, #2
   82290:	2b45      	cmp	r3, #69	; 0x45
   82292:	bf14      	ite	ne
   82294:	46d9      	movne	r9, fp
   82296:	f10b 0901 	addeq.w	r9, fp, #1
   8229a:	a91d      	add	r1, sp, #116	; 0x74
   8229c:	e88d 0201 	stmia.w	sp, {r0, r9}
   822a0:	9102      	str	r1, [sp, #8]
   822a2:	a81e      	add	r0, sp, #120	; 0x78
   822a4:	a921      	add	r1, sp, #132	; 0x84
   822a6:	9003      	str	r0, [sp, #12]
   822a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   822aa:	4653      	mov	r3, sl
   822ac:	9104      	str	r1, [sp, #16]
   822ae:	9808      	ldr	r0, [sp, #32]
   822b0:	f000 faa6 	bl	82800 <_dtoa_r>
   822b4:	2d67      	cmp	r5, #103	; 0x67
   822b6:	9010      	str	r0, [sp, #64]	; 0x40
   822b8:	d002      	beq.n	822c0 <_svfprintf_r+0x1108>
   822ba:	2d47      	cmp	r5, #71	; 0x47
   822bc:	f040 80ac 	bne.w	82418 <_svfprintf_r+0x1260>
   822c0:	9b07      	ldr	r3, [sp, #28]
   822c2:	07db      	lsls	r3, r3, #31
   822c4:	f140 8196 	bpl.w	825f4 <_svfprintf_r+0x143c>
   822c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
   822ca:	eb03 0809 	add.w	r8, r3, r9
   822ce:	9809      	ldr	r0, [sp, #36]	; 0x24
   822d0:	4651      	mov	r1, sl
   822d2:	2200      	movs	r2, #0
   822d4:	2300      	movs	r3, #0
   822d6:	f003 f923 	bl	85520 <__aeabi_dcmpeq>
   822da:	2800      	cmp	r0, #0
   822dc:	f040 810a 	bne.w	824f4 <_svfprintf_r+0x133c>
   822e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
   822e2:	4598      	cmp	r8, r3
   822e4:	d906      	bls.n	822f4 <_svfprintf_r+0x113c>
   822e6:	2130      	movs	r1, #48	; 0x30
   822e8:	1c5a      	adds	r2, r3, #1
   822ea:	9221      	str	r2, [sp, #132]	; 0x84
   822ec:	7019      	strb	r1, [r3, #0]
   822ee:	9b21      	ldr	r3, [sp, #132]	; 0x84
   822f0:	4598      	cmp	r8, r3
   822f2:	d8f9      	bhi.n	822e8 <_svfprintf_r+0x1130>
   822f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
   822f6:	1a9b      	subs	r3, r3, r2
   822f8:	9313      	str	r3, [sp, #76]	; 0x4c
   822fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   822fc:	2b47      	cmp	r3, #71	; 0x47
   822fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   82300:	f000 80eb 	beq.w	824da <_svfprintf_r+0x1322>
   82304:	2d65      	cmp	r5, #101	; 0x65
   82306:	f340 8105 	ble.w	82514 <_svfprintf_r+0x135c>
   8230a:	2d66      	cmp	r5, #102	; 0x66
   8230c:	9312      	str	r3, [sp, #72]	; 0x48
   8230e:	f000 8164 	beq.w	825da <_svfprintf_r+0x1422>
   82312:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82314:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82316:	4293      	cmp	r3, r2
   82318:	f300 8151 	bgt.w	825be <_svfprintf_r+0x1406>
   8231c:	9b07      	ldr	r3, [sp, #28]
   8231e:	07d9      	lsls	r1, r3, #31
   82320:	f100 8188 	bmi.w	82634 <_svfprintf_r+0x147c>
   82324:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   82328:	920d      	str	r2, [sp, #52]	; 0x34
   8232a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8232c:	2a00      	cmp	r2, #0
   8232e:	f040 80c9 	bne.w	824c4 <_svfprintf_r+0x130c>
   82332:	9309      	str	r3, [sp, #36]	; 0x24
   82334:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82336:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   8233a:	9307      	str	r3, [sp, #28]
   8233c:	9211      	str	r2, [sp, #68]	; 0x44
   8233e:	f7ff b85b 	b.w	813f8 <_svfprintf_r+0x240>
   82342:	9808      	ldr	r0, [sp, #32]
   82344:	4631      	mov	r1, r6
   82346:	aa23      	add	r2, sp, #140	; 0x8c
   82348:	f002 fbc6 	bl	84ad8 <__ssprint_r>
   8234c:	2800      	cmp	r0, #0
   8234e:	f47e aff9 	bne.w	81344 <_svfprintf_r+0x18c>
   82352:	463c      	mov	r4, r7
   82354:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82358:	f7ff bbda 	b.w	81b10 <_svfprintf_r+0x958>
   8235c:	00085be8 	.word	0x00085be8
   82360:	00085be4 	.word	0x00085be4
   82364:	00085c1c 	.word	0x00085c1c
   82368:	00085bbc 	.word	0x00085bbc
   8236c:	9808      	ldr	r0, [sp, #32]
   8236e:	2140      	movs	r1, #64	; 0x40
   82370:	f001 fad8 	bl	83924 <_malloc_r>
   82374:	f8c9 0000 	str.w	r0, [r9]
   82378:	f8c9 0010 	str.w	r0, [r9, #16]
   8237c:	2800      	cmp	r0, #0
   8237e:	f000 8186 	beq.w	8268e <_svfprintf_r+0x14d6>
   82382:	2340      	movs	r3, #64	; 0x40
   82384:	f8c9 3014 	str.w	r3, [r9, #20]
   82388:	f7fe bf2e 	b.w	811e8 <_svfprintf_r+0x30>
   8238c:	9808      	ldr	r0, [sp, #32]
   8238e:	4631      	mov	r1, r6
   82390:	aa23      	add	r2, sp, #140	; 0x8c
   82392:	f002 fba1 	bl	84ad8 <__ssprint_r>
   82396:	2800      	cmp	r0, #0
   82398:	f47e afd4 	bne.w	81344 <_svfprintf_r+0x18c>
   8239c:	463c      	mov	r4, r7
   8239e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
   823a0:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   823a4:	e6f6      	b.n	82194 <_svfprintf_r+0xfdc>
   823a6:	f04f 0b06 	mov.w	fp, #6
   823aa:	e759      	b.n	82260 <_svfprintf_r+0x10a8>
   823ac:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
   823b0:	f7fe fed4 	bl	8115c <strlen>
   823b4:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   823b8:	900d      	str	r0, [sp, #52]	; 0x34
   823ba:	4603      	mov	r3, r0
   823bc:	f7ff bb1a 	b.w	819f4 <_svfprintf_r+0x83c>
   823c0:	9808      	ldr	r0, [sp, #32]
   823c2:	4631      	mov	r1, r6
   823c4:	aa23      	add	r2, sp, #140	; 0x8c
   823c6:	f002 fb87 	bl	84ad8 <__ssprint_r>
   823ca:	2800      	cmp	r0, #0
   823cc:	f47e afba 	bne.w	81344 <_svfprintf_r+0x18c>
   823d0:	463a      	mov	r2, r7
   823d2:	9925      	ldr	r1, [sp, #148]	; 0x94
   823d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   823d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   823d8:	3301      	adds	r3, #1
   823da:	eb01 0b04 	add.w	fp, r1, r4
   823de:	9910      	ldr	r1, [sp, #64]	; 0x40
   823e0:	2b07      	cmp	r3, #7
   823e2:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   823e6:	9324      	str	r3, [sp, #144]	; 0x90
   823e8:	6011      	str	r1, [r2, #0]
   823ea:	6054      	str	r4, [r2, #4]
   823ec:	f73f ac95 	bgt.w	81d1a <_svfprintf_r+0xb62>
   823f0:	f102 0408 	add.w	r4, r2, #8
   823f4:	f7ff b8da 	b.w	815ac <_svfprintf_r+0x3f4>
   823f8:	2003      	movs	r0, #3
   823fa:	a91d      	add	r1, sp, #116	; 0x74
   823fc:	e88d 0801 	stmia.w	sp, {r0, fp}
   82400:	9102      	str	r1, [sp, #8]
   82402:	a81e      	add	r0, sp, #120	; 0x78
   82404:	a921      	add	r1, sp, #132	; 0x84
   82406:	9003      	str	r0, [sp, #12]
   82408:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8240a:	4653      	mov	r3, sl
   8240c:	9104      	str	r1, [sp, #16]
   8240e:	9808      	ldr	r0, [sp, #32]
   82410:	f000 f9f6 	bl	82800 <_dtoa_r>
   82414:	46d9      	mov	r9, fp
   82416:	9010      	str	r0, [sp, #64]	; 0x40
   82418:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8241a:	eb03 0809 	add.w	r8, r3, r9
   8241e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82420:	2b46      	cmp	r3, #70	; 0x46
   82422:	f47f af54 	bne.w	822ce <_svfprintf_r+0x1116>
   82426:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82428:	781b      	ldrb	r3, [r3, #0]
   8242a:	2b30      	cmp	r3, #48	; 0x30
   8242c:	f000 80e4 	beq.w	825f8 <_svfprintf_r+0x1440>
   82430:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   82432:	4498      	add	r8, r3
   82434:	e74b      	b.n	822ce <_svfprintf_r+0x1116>
   82436:	9808      	ldr	r0, [sp, #32]
   82438:	4631      	mov	r1, r6
   8243a:	aa23      	add	r2, sp, #140	; 0x8c
   8243c:	f002 fb4c 	bl	84ad8 <__ssprint_r>
   82440:	2800      	cmp	r0, #0
   82442:	f47e af7f 	bne.w	81344 <_svfprintf_r+0x18c>
   82446:	463c      	mov	r4, r7
   82448:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   8244c:	e4ac      	b.n	81da8 <_svfprintf_r+0xbf0>
   8244e:	3301      	adds	r3, #1
   82450:	4429      	add	r1, r5
   82452:	2b07      	cmp	r3, #7
   82454:	9125      	str	r1, [sp, #148]	; 0x94
   82456:	9324      	str	r3, [sp, #144]	; 0x90
   82458:	f8c2 9000 	str.w	r9, [r2]
   8245c:	6055      	str	r5, [r2, #4]
   8245e:	dcaf      	bgt.n	823c0 <_svfprintf_r+0x1208>
   82460:	3208      	adds	r2, #8
   82462:	e7b8      	b.n	823d6 <_svfprintf_r+0x121e>
   82464:	9808      	ldr	r0, [sp, #32]
   82466:	4631      	mov	r1, r6
   82468:	aa23      	add	r2, sp, #140	; 0x8c
   8246a:	f002 fb35 	bl	84ad8 <__ssprint_r>
   8246e:	2800      	cmp	r0, #0
   82470:	f47e af68 	bne.w	81344 <_svfprintf_r+0x18c>
   82474:	463c      	mov	r4, r7
   82476:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   82478:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   8247c:	e568      	b.n	81f50 <_svfprintf_r+0xd98>
   8247e:	4653      	mov	r3, sl
   82480:	2b06      	cmp	r3, #6
   82482:	bf28      	it	cs
   82484:	2306      	movcs	r3, #6
   82486:	930d      	str	r3, [sp, #52]	; 0x34
   82488:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8248c:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   82490:	9309      	str	r3, [sp, #36]	; 0x24
   82492:	4b84      	ldr	r3, [pc, #528]	; (826a4 <_svfprintf_r+0x14ec>)
   82494:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82498:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
   8249c:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   824a0:	9310      	str	r3, [sp, #64]	; 0x40
   824a2:	f7fe bfa9 	b.w	813f8 <_svfprintf_r+0x240>
   824a6:	9808      	ldr	r0, [sp, #32]
   824a8:	4631      	mov	r1, r6
   824aa:	aa23      	add	r2, sp, #140	; 0x8c
   824ac:	f002 fb14 	bl	84ad8 <__ssprint_r>
   824b0:	2800      	cmp	r0, #0
   824b2:	f47e af47 	bne.w	81344 <_svfprintf_r+0x18c>
   824b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   824b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   824ba:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   824be:	1ad3      	subs	r3, r2, r3
   824c0:	463c      	mov	r4, r7
   824c2:	e55b      	b.n	81f7c <_svfprintf_r+0xdc4>
   824c4:	9309      	str	r3, [sp, #36]	; 0x24
   824c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   824c8:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
   824cc:	9307      	str	r3, [sp, #28]
   824ce:	2300      	movs	r3, #0
   824d0:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
   824d4:	9311      	str	r3, [sp, #68]	; 0x44
   824d6:	f7fe bf92 	b.w	813fe <_svfprintf_r+0x246>
   824da:	1cda      	adds	r2, r3, #3
   824dc:	db19      	blt.n	82512 <_svfprintf_r+0x135a>
   824de:	459b      	cmp	fp, r3
   824e0:	db17      	blt.n	82512 <_svfprintf_r+0x135a>
   824e2:	9312      	str	r3, [sp, #72]	; 0x48
   824e4:	2567      	movs	r5, #103	; 0x67
   824e6:	e714      	b.n	82312 <_svfprintf_r+0x115a>
   824e8:	232d      	movs	r3, #45	; 0x2d
   824ea:	469c      	mov	ip, r3
   824ec:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   824f0:	f7ff b9c3 	b.w	8187a <_svfprintf_r+0x6c2>
   824f4:	4643      	mov	r3, r8
   824f6:	e6fd      	b.n	822f4 <_svfprintf_r+0x113c>
   824f8:	ea2a 73ea 	bic.w	r3, sl, sl, asr #31
   824fc:	9011      	str	r0, [sp, #68]	; 0x44
   824fe:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82502:	9012      	str	r0, [sp, #72]	; 0x48
   82504:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   82508:	9309      	str	r3, [sp, #36]	; 0x24
   8250a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
   8250e:	f7fe bf73 	b.w	813f8 <_svfprintf_r+0x240>
   82512:	3d02      	subs	r5, #2
   82514:	3b01      	subs	r3, #1
   82516:	2b00      	cmp	r3, #0
   82518:	931d      	str	r3, [sp, #116]	; 0x74
   8251a:	bfba      	itte	lt
   8251c:	425b      	neglt	r3, r3
   8251e:	222d      	movlt	r2, #45	; 0x2d
   82520:	222b      	movge	r2, #43	; 0x2b
   82522:	2b09      	cmp	r3, #9
   82524:	f88d 507c 	strb.w	r5, [sp, #124]	; 0x7c
   82528:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
   8252c:	dd7a      	ble.n	82624 <_svfprintf_r+0x146c>
   8252e:	f10d 008b 	add.w	r0, sp, #139	; 0x8b
   82532:	4601      	mov	r1, r0
   82534:	4a5c      	ldr	r2, [pc, #368]	; (826a8 <_svfprintf_r+0x14f0>)
   82536:	fb82 2e03 	smull	r2, lr, r2, r3
   8253a:	17da      	asrs	r2, r3, #31
   8253c:	ebc2 0eae 	rsb	lr, r2, lr, asr #2
   82540:	eb0e 028e 	add.w	r2, lr, lr, lsl #2
   82544:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   82548:	4673      	mov	r3, lr
   8254a:	3230      	adds	r2, #48	; 0x30
   8254c:	2b09      	cmp	r3, #9
   8254e:	f801 2d01 	strb.w	r2, [r1, #-1]!
   82552:	dcef      	bgt.n	82534 <_svfprintf_r+0x137c>
   82554:	460a      	mov	r2, r1
   82556:	3330      	adds	r3, #48	; 0x30
   82558:	fa5f fe83 	uxtb.w	lr, r3
   8255c:	f802 ed01 	strb.w	lr, [r2, #-1]!
   82560:	4290      	cmp	r0, r2
   82562:	f240 809b 	bls.w	8269c <_svfprintf_r+0x14e4>
   82566:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
   8256a:	460b      	mov	r3, r1
   8256c:	e001      	b.n	82572 <_svfprintf_r+0x13ba>
   8256e:	f813 eb01 	ldrb.w	lr, [r3], #1
   82572:	4283      	cmp	r3, r0
   82574:	f802 eb01 	strb.w	lr, [r2], #1
   82578:	d1f9      	bne.n	8256e <_svfprintf_r+0x13b6>
   8257a:	ab23      	add	r3, sp, #140	; 0x8c
   8257c:	1a5b      	subs	r3, r3, r1
   8257e:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
   82582:	4413      	add	r3, r2
   82584:	aa1f      	add	r2, sp, #124	; 0x7c
   82586:	1a9b      	subs	r3, r3, r2
   82588:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8258a:	9319      	str	r3, [sp, #100]	; 0x64
   8258c:	2a01      	cmp	r2, #1
   8258e:	4413      	add	r3, r2
   82590:	930d      	str	r3, [sp, #52]	; 0x34
   82592:	dd5e      	ble.n	82652 <_svfprintf_r+0x149a>
   82594:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82596:	2200      	movs	r2, #0
   82598:	3301      	adds	r3, #1
   8259a:	930d      	str	r3, [sp, #52]	; 0x34
   8259c:	9212      	str	r2, [sp, #72]	; 0x48
   8259e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   825a2:	e6c2      	b.n	8232a <_svfprintf_r+0x1172>
   825a4:	9808      	ldr	r0, [sp, #32]
   825a6:	4631      	mov	r1, r6
   825a8:	aa23      	add	r2, sp, #140	; 0x8c
   825aa:	f002 fa95 	bl	84ad8 <__ssprint_r>
   825ae:	2800      	cmp	r0, #0
   825b0:	f47e aec8 	bne.w	81344 <_svfprintf_r+0x18c>
   825b4:	463a      	mov	r2, r7
   825b6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
   825b8:	9925      	ldr	r1, [sp, #148]	; 0x94
   825ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
   825bc:	e600      	b.n	821c0 <_svfprintf_r+0x1008>
   825be:	9b12      	ldr	r3, [sp, #72]	; 0x48
   825c0:	2b00      	cmp	r3, #0
   825c2:	bfd8      	it	le
   825c4:	f1c3 0802 	rsble	r8, r3, #2
   825c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   825ca:	bfc8      	it	gt
   825cc:	f04f 0801 	movgt.w	r8, #1
   825d0:	4443      	add	r3, r8
   825d2:	930d      	str	r3, [sp, #52]	; 0x34
   825d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   825d8:	e6a7      	b.n	8232a <_svfprintf_r+0x1172>
   825da:	2b00      	cmp	r3, #0
   825dc:	dd30      	ble.n	82640 <_svfprintf_r+0x1488>
   825de:	f1bb 0f00 	cmp.w	fp, #0
   825e2:	d117      	bne.n	82614 <_svfprintf_r+0x145c>
   825e4:	9b07      	ldr	r3, [sp, #28]
   825e6:	07db      	lsls	r3, r3, #31
   825e8:	d414      	bmi.n	82614 <_svfprintf_r+0x145c>
   825ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
   825ec:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   825f0:	920d      	str	r2, [sp, #52]	; 0x34
   825f2:	e69a      	b.n	8232a <_svfprintf_r+0x1172>
   825f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
   825f6:	e67d      	b.n	822f4 <_svfprintf_r+0x113c>
   825f8:	9809      	ldr	r0, [sp, #36]	; 0x24
   825fa:	4651      	mov	r1, sl
   825fc:	2200      	movs	r2, #0
   825fe:	2300      	movs	r3, #0
   82600:	f002 ff8e 	bl	85520 <__aeabi_dcmpeq>
   82604:	2800      	cmp	r0, #0
   82606:	f47f af13 	bne.w	82430 <_svfprintf_r+0x1278>
   8260a:	f1c9 0301 	rsb	r3, r9, #1
   8260e:	931d      	str	r3, [sp, #116]	; 0x74
   82610:	4498      	add	r8, r3
   82612:	e65c      	b.n	822ce <_svfprintf_r+0x1116>
   82614:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82616:	f10b 0801 	add.w	r8, fp, #1
   8261a:	4443      	add	r3, r8
   8261c:	930d      	str	r3, [sp, #52]	; 0x34
   8261e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82622:	e682      	b.n	8232a <_svfprintf_r+0x1172>
   82624:	3330      	adds	r3, #48	; 0x30
   82626:	2230      	movs	r2, #48	; 0x30
   82628:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
   8262c:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
   82630:	ab20      	add	r3, sp, #128	; 0x80
   82632:	e7a7      	b.n	82584 <_svfprintf_r+0x13cc>
   82634:	9b12      	ldr	r3, [sp, #72]	; 0x48
   82636:	3301      	adds	r3, #1
   82638:	930d      	str	r3, [sp, #52]	; 0x34
   8263a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8263e:	e674      	b.n	8232a <_svfprintf_r+0x1172>
   82640:	f1bb 0f00 	cmp.w	fp, #0
   82644:	d11d      	bne.n	82682 <_svfprintf_r+0x14ca>
   82646:	9b07      	ldr	r3, [sp, #28]
   82648:	07d8      	lsls	r0, r3, #31
   8264a:	d41a      	bmi.n	82682 <_svfprintf_r+0x14ca>
   8264c:	2301      	movs	r3, #1
   8264e:	930d      	str	r3, [sp, #52]	; 0x34
   82650:	e66b      	b.n	8232a <_svfprintf_r+0x1172>
   82652:	9b07      	ldr	r3, [sp, #28]
   82654:	f013 0301 	ands.w	r3, r3, #1
   82658:	d19c      	bne.n	82594 <_svfprintf_r+0x13dc>
   8265a:	9312      	str	r3, [sp, #72]	; 0x48
   8265c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8265e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82662:	e662      	b.n	8232a <_svfprintf_r+0x1172>
   82664:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82666:	4628      	mov	r0, r5
   82668:	f8d5 a000 	ldr.w	sl, [r5]
   8266c:	3004      	adds	r0, #4
   8266e:	f1ba 0f00 	cmp.w	sl, #0
   82672:	785d      	ldrb	r5, [r3, #1]
   82674:	900e      	str	r0, [sp, #56]	; 0x38
   82676:	f6be adf2 	bge.w	8125e <_svfprintf_r+0xa6>
   8267a:	f04f 3aff 	mov.w	sl, #4294967295
   8267e:	f7fe bdee 	b.w	8125e <_svfprintf_r+0xa6>
   82682:	f10b 0302 	add.w	r3, fp, #2
   82686:	930d      	str	r3, [sp, #52]	; 0x34
   82688:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8268c:	e64d      	b.n	8232a <_svfprintf_r+0x1172>
   8268e:	9a08      	ldr	r2, [sp, #32]
   82690:	230c      	movs	r3, #12
   82692:	6013      	str	r3, [r2, #0]
   82694:	f04f 30ff 	mov.w	r0, #4294967295
   82698:	f7fe be5e 	b.w	81358 <_svfprintf_r+0x1a0>
   8269c:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
   826a0:	e770      	b.n	82584 <_svfprintf_r+0x13cc>
   826a2:	bf00      	nop
   826a4:	00085c14 	.word	0x00085c14
   826a8:	66666667 	.word	0x66666667

000826ac <register_fini>:
   826ac:	4b02      	ldr	r3, [pc, #8]	; (826b8 <register_fini+0xc>)
   826ae:	b113      	cbz	r3, 826b6 <register_fini+0xa>
   826b0:	4802      	ldr	r0, [pc, #8]	; (826bc <register_fini+0x10>)
   826b2:	f000 b805 	b.w	826c0 <atexit>
   826b6:	4770      	bx	lr
   826b8:	00000000 	.word	0x00000000
   826bc:	000836a5 	.word	0x000836a5

000826c0 <atexit>:
   826c0:	4601      	mov	r1, r0
   826c2:	2000      	movs	r0, #0
   826c4:	4602      	mov	r2, r0
   826c6:	4603      	mov	r3, r0
   826c8:	f002 ba88 	b.w	84bdc <__register_exitproc>

000826cc <quorem>:
   826cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   826d0:	6903      	ldr	r3, [r0, #16]
   826d2:	690f      	ldr	r7, [r1, #16]
   826d4:	b083      	sub	sp, #12
   826d6:	429f      	cmp	r7, r3
   826d8:	f300 808b 	bgt.w	827f2 <quorem+0x126>
   826dc:	3f01      	subs	r7, #1
   826de:	f101 0614 	add.w	r6, r1, #20
   826e2:	f100 0a14 	add.w	sl, r0, #20
   826e6:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   826ea:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   826ee:	3301      	adds	r3, #1
   826f0:	fbb2 f8f3 	udiv	r8, r2, r3
   826f4:	00bb      	lsls	r3, r7, #2
   826f6:	9300      	str	r3, [sp, #0]
   826f8:	eb06 0903 	add.w	r9, r6, r3
   826fc:	4453      	add	r3, sl
   826fe:	9301      	str	r3, [sp, #4]
   82700:	f1b8 0f00 	cmp.w	r8, #0
   82704:	d03d      	beq.n	82782 <quorem+0xb6>
   82706:	2300      	movs	r3, #0
   82708:	461c      	mov	r4, r3
   8270a:	46b4      	mov	ip, r6
   8270c:	46d6      	mov	lr, sl
   8270e:	461a      	mov	r2, r3
   82710:	f85c bb04 	ldr.w	fp, [ip], #4
   82714:	f8de 5000 	ldr.w	r5, [lr]
   82718:	fa1f f38b 	uxth.w	r3, fp
   8271c:	ea4f 4b1b 	mov.w	fp, fp, lsr #16
   82720:	fb03 2208 	mla	r2, r3, r8, r2
   82724:	fb0b f308 	mul.w	r3, fp, r8
   82728:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   8272c:	b292      	uxth	r2, r2
   8272e:	1aa4      	subs	r4, r4, r2
   82730:	fa1f fb83 	uxth.w	fp, r3
   82734:	b2aa      	uxth	r2, r5
   82736:	4422      	add	r2, r4
   82738:	ebcb 4415 	rsb	r4, fp, r5, lsr #16
   8273c:	eb04 4422 	add.w	r4, r4, r2, asr #16
   82740:	b292      	uxth	r2, r2
   82742:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   82746:	45e1      	cmp	r9, ip
   82748:	f84e 2b04 	str.w	r2, [lr], #4
   8274c:	ea4f 4424 	mov.w	r4, r4, asr #16
   82750:	ea4f 4213 	mov.w	r2, r3, lsr #16
   82754:	d2dc      	bcs.n	82710 <quorem+0x44>
   82756:	9b00      	ldr	r3, [sp, #0]
   82758:	f85a 3003 	ldr.w	r3, [sl, r3]
   8275c:	b98b      	cbnz	r3, 82782 <quorem+0xb6>
   8275e:	9c01      	ldr	r4, [sp, #4]
   82760:	1f23      	subs	r3, r4, #4
   82762:	459a      	cmp	sl, r3
   82764:	d20c      	bcs.n	82780 <quorem+0xb4>
   82766:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8276a:	b94b      	cbnz	r3, 82780 <quorem+0xb4>
   8276c:	f1a4 0308 	sub.w	r3, r4, #8
   82770:	e002      	b.n	82778 <quorem+0xac>
   82772:	681a      	ldr	r2, [r3, #0]
   82774:	3b04      	subs	r3, #4
   82776:	b91a      	cbnz	r2, 82780 <quorem+0xb4>
   82778:	459a      	cmp	sl, r3
   8277a:	f107 37ff 	add.w	r7, r7, #4294967295
   8277e:	d3f8      	bcc.n	82772 <quorem+0xa6>
   82780:	6107      	str	r7, [r0, #16]
   82782:	4604      	mov	r4, r0
   82784:	f001 fe90 	bl	844a8 <__mcmp>
   82788:	2800      	cmp	r0, #0
   8278a:	db2e      	blt.n	827ea <quorem+0x11e>
   8278c:	2300      	movs	r3, #0
   8278e:	4655      	mov	r5, sl
   82790:	4619      	mov	r1, r3
   82792:	f108 0801 	add.w	r8, r8, #1
   82796:	f856 2b04 	ldr.w	r2, [r6], #4
   8279a:	682b      	ldr	r3, [r5, #0]
   8279c:	b290      	uxth	r0, r2
   8279e:	1a08      	subs	r0, r1, r0
   827a0:	0c12      	lsrs	r2, r2, #16
   827a2:	b299      	uxth	r1, r3
   827a4:	ebc2 4313 	rsb	r3, r2, r3, lsr #16
   827a8:	1842      	adds	r2, r0, r1
   827aa:	eb03 4322 	add.w	r3, r3, r2, asr #16
   827ae:	b292      	uxth	r2, r2
   827b0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   827b4:	45b1      	cmp	r9, r6
   827b6:	f845 2b04 	str.w	r2, [r5], #4
   827ba:	ea4f 4123 	mov.w	r1, r3, asr #16
   827be:	d2ea      	bcs.n	82796 <quorem+0xca>
   827c0:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   827c4:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   827c8:	b97a      	cbnz	r2, 827ea <quorem+0x11e>
   827ca:	1f1a      	subs	r2, r3, #4
   827cc:	4592      	cmp	sl, r2
   827ce:	d20b      	bcs.n	827e8 <quorem+0x11c>
   827d0:	f853 2c04 	ldr.w	r2, [r3, #-4]
   827d4:	b942      	cbnz	r2, 827e8 <quorem+0x11c>
   827d6:	3b08      	subs	r3, #8
   827d8:	e002      	b.n	827e0 <quorem+0x114>
   827da:	681a      	ldr	r2, [r3, #0]
   827dc:	3b04      	subs	r3, #4
   827de:	b91a      	cbnz	r2, 827e8 <quorem+0x11c>
   827e0:	459a      	cmp	sl, r3
   827e2:	f107 37ff 	add.w	r7, r7, #4294967295
   827e6:	d3f8      	bcc.n	827da <quorem+0x10e>
   827e8:	6127      	str	r7, [r4, #16]
   827ea:	4640      	mov	r0, r8
   827ec:	b003      	add	sp, #12
   827ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   827f2:	2000      	movs	r0, #0
   827f4:	b003      	add	sp, #12
   827f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   827fa:	bf00      	nop
   827fc:	0000      	movs	r0, r0
	...

00082800 <_dtoa_r>:
   82800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82804:	6c01      	ldr	r1, [r0, #64]	; 0x40
   82806:	b099      	sub	sp, #100	; 0x64
   82808:	4604      	mov	r4, r0
   8280a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   8280e:	9d25      	ldr	r5, [sp, #148]	; 0x94
   82810:	b141      	cbz	r1, 82824 <_dtoa_r+0x24>
   82812:	6c42      	ldr	r2, [r0, #68]	; 0x44
   82814:	2301      	movs	r3, #1
   82816:	4093      	lsls	r3, r2
   82818:	608b      	str	r3, [r1, #8]
   8281a:	604a      	str	r2, [r1, #4]
   8281c:	f001 fc58 	bl	840d0 <_Bfree>
   82820:	2300      	movs	r3, #0
   82822:	6423      	str	r3, [r4, #64]	; 0x40
   82824:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   82828:	2b00      	cmp	r3, #0
   8282a:	4699      	mov	r9, r3
   8282c:	db36      	blt.n	8289c <_dtoa_r+0x9c>
   8282e:	2300      	movs	r3, #0
   82830:	602b      	str	r3, [r5, #0]
   82832:	4ba5      	ldr	r3, [pc, #660]	; (82ac8 <_dtoa_r+0x2c8>)
   82834:	461a      	mov	r2, r3
   82836:	ea09 0303 	and.w	r3, r9, r3
   8283a:	4293      	cmp	r3, r2
   8283c:	d017      	beq.n	8286e <_dtoa_r+0x6e>
   8283e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   82842:	2200      	movs	r2, #0
   82844:	2300      	movs	r3, #0
   82846:	4630      	mov	r0, r6
   82848:	4639      	mov	r1, r7
   8284a:	f002 fe69 	bl	85520 <__aeabi_dcmpeq>
   8284e:	4680      	mov	r8, r0
   82850:	2800      	cmp	r0, #0
   82852:	d02b      	beq.n	828ac <_dtoa_r+0xac>
   82854:	9a24      	ldr	r2, [sp, #144]	; 0x90
   82856:	2301      	movs	r3, #1
   82858:	6013      	str	r3, [r2, #0]
   8285a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8285c:	2b00      	cmp	r3, #0
   8285e:	f000 80cb 	beq.w	829f8 <_dtoa_r+0x1f8>
   82862:	489a      	ldr	r0, [pc, #616]	; (82acc <_dtoa_r+0x2cc>)
   82864:	6018      	str	r0, [r3, #0]
   82866:	3801      	subs	r0, #1
   82868:	b019      	add	sp, #100	; 0x64
   8286a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8286e:	f242 730f 	movw	r3, #9999	; 0x270f
   82872:	9a24      	ldr	r2, [sp, #144]	; 0x90
   82874:	6013      	str	r3, [r2, #0]
   82876:	9b02      	ldr	r3, [sp, #8]
   82878:	2b00      	cmp	r3, #0
   8287a:	f000 80a6 	beq.w	829ca <_dtoa_r+0x1ca>
   8287e:	4894      	ldr	r0, [pc, #592]	; (82ad0 <_dtoa_r+0x2d0>)
   82880:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82882:	2b00      	cmp	r3, #0
   82884:	d0f0      	beq.n	82868 <_dtoa_r+0x68>
   82886:	78c3      	ldrb	r3, [r0, #3]
   82888:	2b00      	cmp	r3, #0
   8288a:	f000 80b7 	beq.w	829fc <_dtoa_r+0x1fc>
   8288e:	f100 0308 	add.w	r3, r0, #8
   82892:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82894:	6013      	str	r3, [r2, #0]
   82896:	b019      	add	sp, #100	; 0x64
   82898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8289c:	9a03      	ldr	r2, [sp, #12]
   8289e:	2301      	movs	r3, #1
   828a0:	f022 4900 	bic.w	r9, r2, #2147483648	; 0x80000000
   828a4:	602b      	str	r3, [r5, #0]
   828a6:	f8cd 900c 	str.w	r9, [sp, #12]
   828aa:	e7c2      	b.n	82832 <_dtoa_r+0x32>
   828ac:	aa17      	add	r2, sp, #92	; 0x5c
   828ae:	ab16      	add	r3, sp, #88	; 0x58
   828b0:	e88d 000c 	stmia.w	sp, {r2, r3}
   828b4:	4620      	mov	r0, r4
   828b6:	4632      	mov	r2, r6
   828b8:	463b      	mov	r3, r7
   828ba:	f001 fe8b 	bl	845d4 <__d2b>
   828be:	ea5f 5519 	movs.w	r5, r9, lsr #20
   828c2:	4683      	mov	fp, r0
   828c4:	f040 808a 	bne.w	829dc <_dtoa_r+0x1dc>
   828c8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
   828cc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   828ce:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   828d2:	4445      	add	r5, r8
   828d4:	429d      	cmp	r5, r3
   828d6:	f2c0 8295 	blt.w	82e04 <_dtoa_r+0x604>
   828da:	4a7e      	ldr	r2, [pc, #504]	; (82ad4 <_dtoa_r+0x2d4>)
   828dc:	f205 4312 	addw	r3, r5, #1042	; 0x412
   828e0:	1b52      	subs	r2, r2, r5
   828e2:	fa09 f902 	lsl.w	r9, r9, r2
   828e6:	9a02      	ldr	r2, [sp, #8]
   828e8:	fa22 f003 	lsr.w	r0, r2, r3
   828ec:	ea49 0000 	orr.w	r0, r9, r0
   828f0:	f002 fb38 	bl	84f64 <__aeabi_ui2d>
   828f4:	2301      	movs	r3, #1
   828f6:	3d01      	subs	r5, #1
   828f8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   828fc:	9312      	str	r3, [sp, #72]	; 0x48
   828fe:	2200      	movs	r2, #0
   82900:	4b75      	ldr	r3, [pc, #468]	; (82ad8 <_dtoa_r+0x2d8>)
   82902:	f002 f9f1 	bl	84ce8 <__aeabi_dsub>
   82906:	a36a      	add	r3, pc, #424	; (adr r3, 82ab0 <_dtoa_r+0x2b0>)
   82908:	e9d3 2300 	ldrd	r2, r3, [r3]
   8290c:	f002 fba0 	bl	85050 <__aeabi_dmul>
   82910:	a369      	add	r3, pc, #420	; (adr r3, 82ab8 <_dtoa_r+0x2b8>)
   82912:	e9d3 2300 	ldrd	r2, r3, [r3]
   82916:	f002 f9e9 	bl	84cec <__adddf3>
   8291a:	4606      	mov	r6, r0
   8291c:	4628      	mov	r0, r5
   8291e:	460f      	mov	r7, r1
   82920:	f002 fb30 	bl	84f84 <__aeabi_i2d>
   82924:	a366      	add	r3, pc, #408	; (adr r3, 82ac0 <_dtoa_r+0x2c0>)
   82926:	e9d3 2300 	ldrd	r2, r3, [r3]
   8292a:	f002 fb91 	bl	85050 <__aeabi_dmul>
   8292e:	4602      	mov	r2, r0
   82930:	460b      	mov	r3, r1
   82932:	4630      	mov	r0, r6
   82934:	4639      	mov	r1, r7
   82936:	f002 f9d9 	bl	84cec <__adddf3>
   8293a:	4606      	mov	r6, r0
   8293c:	460f      	mov	r7, r1
   8293e:	f002 fe21 	bl	85584 <__aeabi_d2iz>
   82942:	4639      	mov	r1, r7
   82944:	9005      	str	r0, [sp, #20]
   82946:	2200      	movs	r2, #0
   82948:	4630      	mov	r0, r6
   8294a:	2300      	movs	r3, #0
   8294c:	f002 fdf2 	bl	85534 <__aeabi_dcmplt>
   82950:	2800      	cmp	r0, #0
   82952:	f040 81a4 	bne.w	82c9e <_dtoa_r+0x49e>
   82956:	9b05      	ldr	r3, [sp, #20]
   82958:	2b16      	cmp	r3, #22
   8295a:	f200 819d 	bhi.w	82c98 <_dtoa_r+0x498>
   8295e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   82962:	9805      	ldr	r0, [sp, #20]
   82964:	495d      	ldr	r1, [pc, #372]	; (82adc <_dtoa_r+0x2dc>)
   82966:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   8296a:	e9d1 0100 	ldrd	r0, r1, [r1]
   8296e:	f002 fdff 	bl	85570 <__aeabi_dcmpgt>
   82972:	2800      	cmp	r0, #0
   82974:	f000 8250 	beq.w	82e18 <_dtoa_r+0x618>
   82978:	9b05      	ldr	r3, [sp, #20]
   8297a:	3b01      	subs	r3, #1
   8297c:	9305      	str	r3, [sp, #20]
   8297e:	2300      	movs	r3, #0
   82980:	930c      	str	r3, [sp, #48]	; 0x30
   82982:	ebc5 0508 	rsb	r5, r5, r8
   82986:	f1b5 0a01 	subs.w	sl, r5, #1
   8298a:	f100 819f 	bmi.w	82ccc <_dtoa_r+0x4cc>
   8298e:	2300      	movs	r3, #0
   82990:	9306      	str	r3, [sp, #24]
   82992:	9b05      	ldr	r3, [sp, #20]
   82994:	2b00      	cmp	r3, #0
   82996:	f2c0 8190 	blt.w	82cba <_dtoa_r+0x4ba>
   8299a:	449a      	add	sl, r3
   8299c:	930b      	str	r3, [sp, #44]	; 0x2c
   8299e:	2300      	movs	r3, #0
   829a0:	9309      	str	r3, [sp, #36]	; 0x24
   829a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
   829a4:	2b09      	cmp	r3, #9
   829a6:	d82b      	bhi.n	82a00 <_dtoa_r+0x200>
   829a8:	2b05      	cmp	r3, #5
   829aa:	f340 8677 	ble.w	8369c <_dtoa_r+0xe9c>
   829ae:	3b04      	subs	r3, #4
   829b0:	9322      	str	r3, [sp, #136]	; 0x88
   829b2:	2500      	movs	r5, #0
   829b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
   829b6:	3b02      	subs	r3, #2
   829b8:	2b03      	cmp	r3, #3
   829ba:	f200 8655 	bhi.w	83668 <_dtoa_r+0xe68>
   829be:	e8df f013 	tbh	[pc, r3, lsl #1]
   829c2:	03cf      	.short	0x03cf
   829c4:	02b003c1 	.word	0x02b003c1
   829c8:	066a      	.short	0x066a
   829ca:	4b41      	ldr	r3, [pc, #260]	; (82ad0 <_dtoa_r+0x2d0>)
   829cc:	4a44      	ldr	r2, [pc, #272]	; (82ae0 <_dtoa_r+0x2e0>)
   829ce:	f3c9 0013 	ubfx	r0, r9, #0, #20
   829d2:	2800      	cmp	r0, #0
   829d4:	bf14      	ite	ne
   829d6:	4618      	movne	r0, r3
   829d8:	4610      	moveq	r0, r2
   829da:	e751      	b.n	82880 <_dtoa_r+0x80>
   829dc:	f3c7 0313 	ubfx	r3, r7, #0, #20
   829e0:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   829e4:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
   829e8:	4630      	mov	r0, r6
   829ea:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   829ee:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   829f2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
   829f6:	e782      	b.n	828fe <_dtoa_r+0xfe>
   829f8:	483a      	ldr	r0, [pc, #232]	; (82ae4 <_dtoa_r+0x2e4>)
   829fa:	e735      	b.n	82868 <_dtoa_r+0x68>
   829fc:	1cc3      	adds	r3, r0, #3
   829fe:	e748      	b.n	82892 <_dtoa_r+0x92>
   82a00:	2100      	movs	r1, #0
   82a02:	6461      	str	r1, [r4, #68]	; 0x44
   82a04:	4620      	mov	r0, r4
   82a06:	9122      	str	r1, [sp, #136]	; 0x88
   82a08:	f001 fb3a 	bl	84080 <_Balloc>
   82a0c:	f04f 33ff 	mov.w	r3, #4294967295
   82a10:	9a22      	ldr	r2, [sp, #136]	; 0x88
   82a12:	9307      	str	r3, [sp, #28]
   82a14:	930d      	str	r3, [sp, #52]	; 0x34
   82a16:	2301      	movs	r3, #1
   82a18:	9008      	str	r0, [sp, #32]
   82a1a:	9223      	str	r2, [sp, #140]	; 0x8c
   82a1c:	6420      	str	r0, [r4, #64]	; 0x40
   82a1e:	930a      	str	r3, [sp, #40]	; 0x28
   82a20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82a22:	2b00      	cmp	r3, #0
   82a24:	f2c0 80d0 	blt.w	82bc8 <_dtoa_r+0x3c8>
   82a28:	9a05      	ldr	r2, [sp, #20]
   82a2a:	2a0e      	cmp	r2, #14
   82a2c:	f300 80cc 	bgt.w	82bc8 <_dtoa_r+0x3c8>
   82a30:	4b2a      	ldr	r3, [pc, #168]	; (82adc <_dtoa_r+0x2dc>)
   82a32:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82a36:	e9d3 8900 	ldrd	r8, r9, [r3]
   82a3a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82a3c:	2b00      	cmp	r3, #0
   82a3e:	f2c0 8392 	blt.w	83166 <_dtoa_r+0x966>
   82a42:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   82a46:	4642      	mov	r2, r8
   82a48:	464b      	mov	r3, r9
   82a4a:	4630      	mov	r0, r6
   82a4c:	4639      	mov	r1, r7
   82a4e:	f002 fc29 	bl	852a4 <__aeabi_ddiv>
   82a52:	f002 fd97 	bl	85584 <__aeabi_d2iz>
   82a56:	4682      	mov	sl, r0
   82a58:	f002 fa94 	bl	84f84 <__aeabi_i2d>
   82a5c:	4642      	mov	r2, r8
   82a5e:	464b      	mov	r3, r9
   82a60:	f002 faf6 	bl	85050 <__aeabi_dmul>
   82a64:	4602      	mov	r2, r0
   82a66:	460b      	mov	r3, r1
   82a68:	4630      	mov	r0, r6
   82a6a:	4639      	mov	r1, r7
   82a6c:	f002 f93c 	bl	84ce8 <__aeabi_dsub>
   82a70:	9e07      	ldr	r6, [sp, #28]
   82a72:	9f08      	ldr	r7, [sp, #32]
   82a74:	f10a 0530 	add.w	r5, sl, #48	; 0x30
   82a78:	2e01      	cmp	r6, #1
   82a7a:	703d      	strb	r5, [r7, #0]
   82a7c:	4602      	mov	r2, r0
   82a7e:	460b      	mov	r3, r1
   82a80:	f107 0501 	add.w	r5, r7, #1
   82a84:	d062      	beq.n	82b4c <_dtoa_r+0x34c>
   82a86:	2200      	movs	r2, #0
   82a88:	4b17      	ldr	r3, [pc, #92]	; (82ae8 <_dtoa_r+0x2e8>)
   82a8a:	f002 fae1 	bl	85050 <__aeabi_dmul>
   82a8e:	2200      	movs	r2, #0
   82a90:	2300      	movs	r3, #0
   82a92:	4606      	mov	r6, r0
   82a94:	460f      	mov	r7, r1
   82a96:	f002 fd43 	bl	85520 <__aeabi_dcmpeq>
   82a9a:	2800      	cmp	r0, #0
   82a9c:	f040 8081 	bne.w	82ba2 <_dtoa_r+0x3a2>
   82aa0:	f8cd b008 	str.w	fp, [sp, #8]
   82aa4:	f8dd a020 	ldr.w	sl, [sp, #32]
   82aa8:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82aac:	9406      	str	r4, [sp, #24]
   82aae:	e02a      	b.n	82b06 <_dtoa_r+0x306>
   82ab0:	636f4361 	.word	0x636f4361
   82ab4:	3fd287a7 	.word	0x3fd287a7
   82ab8:	8b60c8b3 	.word	0x8b60c8b3
   82abc:	3fc68a28 	.word	0x3fc68a28
   82ac0:	509f79fb 	.word	0x509f79fb
   82ac4:	3fd34413 	.word	0x3fd34413
   82ac8:	7ff00000 	.word	0x7ff00000
   82acc:	00085c1d 	.word	0x00085c1d
   82ad0:	00085c2c 	.word	0x00085c2c
   82ad4:	fffffc0e 	.word	0xfffffc0e
   82ad8:	3ff80000 	.word	0x3ff80000
   82adc:	00085c40 	.word	0x00085c40
   82ae0:	00085c20 	.word	0x00085c20
   82ae4:	00085c1c 	.word	0x00085c1c
   82ae8:	40240000 	.word	0x40240000
   82aec:	2200      	movs	r2, #0
   82aee:	4bc8      	ldr	r3, [pc, #800]	; (82e10 <_dtoa_r+0x610>)
   82af0:	f002 faae 	bl	85050 <__aeabi_dmul>
   82af4:	2200      	movs	r2, #0
   82af6:	2300      	movs	r3, #0
   82af8:	4606      	mov	r6, r0
   82afa:	460f      	mov	r7, r1
   82afc:	f002 fd10 	bl	85520 <__aeabi_dcmpeq>
   82b00:	2800      	cmp	r0, #0
   82b02:	f040 83e0 	bne.w	832c6 <_dtoa_r+0xac6>
   82b06:	4642      	mov	r2, r8
   82b08:	464b      	mov	r3, r9
   82b0a:	4630      	mov	r0, r6
   82b0c:	4639      	mov	r1, r7
   82b0e:	f002 fbc9 	bl	852a4 <__aeabi_ddiv>
   82b12:	f002 fd37 	bl	85584 <__aeabi_d2iz>
   82b16:	4604      	mov	r4, r0
   82b18:	f002 fa34 	bl	84f84 <__aeabi_i2d>
   82b1c:	4642      	mov	r2, r8
   82b1e:	464b      	mov	r3, r9
   82b20:	f002 fa96 	bl	85050 <__aeabi_dmul>
   82b24:	4602      	mov	r2, r0
   82b26:	460b      	mov	r3, r1
   82b28:	4630      	mov	r0, r6
   82b2a:	4639      	mov	r1, r7
   82b2c:	f002 f8dc 	bl	84ce8 <__aeabi_dsub>
   82b30:	f104 0630 	add.w	r6, r4, #48	; 0x30
   82b34:	f805 6b01 	strb.w	r6, [r5], #1
   82b38:	ebca 0605 	rsb	r6, sl, r5
   82b3c:	45b3      	cmp	fp, r6
   82b3e:	4602      	mov	r2, r0
   82b40:	460b      	mov	r3, r1
   82b42:	d1d3      	bne.n	82aec <_dtoa_r+0x2ec>
   82b44:	46a2      	mov	sl, r4
   82b46:	f8dd b008 	ldr.w	fp, [sp, #8]
   82b4a:	9c06      	ldr	r4, [sp, #24]
   82b4c:	4610      	mov	r0, r2
   82b4e:	4619      	mov	r1, r3
   82b50:	f002 f8cc 	bl	84cec <__adddf3>
   82b54:	4606      	mov	r6, r0
   82b56:	460f      	mov	r7, r1
   82b58:	4640      	mov	r0, r8
   82b5a:	4649      	mov	r1, r9
   82b5c:	4632      	mov	r2, r6
   82b5e:	463b      	mov	r3, r7
   82b60:	f002 fce8 	bl	85534 <__aeabi_dcmplt>
   82b64:	b948      	cbnz	r0, 82b7a <_dtoa_r+0x37a>
   82b66:	4640      	mov	r0, r8
   82b68:	4649      	mov	r1, r9
   82b6a:	4632      	mov	r2, r6
   82b6c:	463b      	mov	r3, r7
   82b6e:	f002 fcd7 	bl	85520 <__aeabi_dcmpeq>
   82b72:	b1b0      	cbz	r0, 82ba2 <_dtoa_r+0x3a2>
   82b74:	f01a 0f01 	tst.w	sl, #1
   82b78:	d013      	beq.n	82ba2 <_dtoa_r+0x3a2>
   82b7a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   82b7e:	1e6b      	subs	r3, r5, #1
   82b80:	9908      	ldr	r1, [sp, #32]
   82b82:	e004      	b.n	82b8e <_dtoa_r+0x38e>
   82b84:	428b      	cmp	r3, r1
   82b86:	f000 8445 	beq.w	83414 <_dtoa_r+0xc14>
   82b8a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   82b8e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   82b92:	f103 0501 	add.w	r5, r3, #1
   82b96:	461a      	mov	r2, r3
   82b98:	d0f4      	beq.n	82b84 <_dtoa_r+0x384>
   82b9a:	f108 0301 	add.w	r3, r8, #1
   82b9e:	b2db      	uxtb	r3, r3
   82ba0:	7013      	strb	r3, [r2, #0]
   82ba2:	4620      	mov	r0, r4
   82ba4:	4659      	mov	r1, fp
   82ba6:	f001 fa93 	bl	840d0 <_Bfree>
   82baa:	2200      	movs	r2, #0
   82bac:	9b05      	ldr	r3, [sp, #20]
   82bae:	702a      	strb	r2, [r5, #0]
   82bb0:	9a24      	ldr	r2, [sp, #144]	; 0x90
   82bb2:	3301      	adds	r3, #1
   82bb4:	6013      	str	r3, [r2, #0]
   82bb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82bb8:	2b00      	cmp	r3, #0
   82bba:	f000 834a 	beq.w	83252 <_dtoa_r+0xa52>
   82bbe:	9808      	ldr	r0, [sp, #32]
   82bc0:	601d      	str	r5, [r3, #0]
   82bc2:	b019      	add	sp, #100	; 0x64
   82bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82bc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82bca:	2a00      	cmp	r2, #0
   82bcc:	f000 8084 	beq.w	82cd8 <_dtoa_r+0x4d8>
   82bd0:	9a22      	ldr	r2, [sp, #136]	; 0x88
   82bd2:	2a01      	cmp	r2, #1
   82bd4:	f340 8309 	ble.w	831ea <_dtoa_r+0x9ea>
   82bd8:	9b07      	ldr	r3, [sp, #28]
   82bda:	1e5f      	subs	r7, r3, #1
   82bdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82bde:	42bb      	cmp	r3, r7
   82be0:	f2c0 83af 	blt.w	83342 <_dtoa_r+0xb42>
   82be4:	1bdf      	subs	r7, r3, r7
   82be6:	9b07      	ldr	r3, [sp, #28]
   82be8:	2b00      	cmp	r3, #0
   82bea:	f2c0 84a5 	blt.w	83538 <_dtoa_r+0xd38>
   82bee:	9d06      	ldr	r5, [sp, #24]
   82bf0:	9b07      	ldr	r3, [sp, #28]
   82bf2:	9a06      	ldr	r2, [sp, #24]
   82bf4:	4620      	mov	r0, r4
   82bf6:	441a      	add	r2, r3
   82bf8:	2101      	movs	r1, #1
   82bfa:	9206      	str	r2, [sp, #24]
   82bfc:	449a      	add	sl, r3
   82bfe:	f001 fb01 	bl	84204 <__i2b>
   82c02:	4606      	mov	r6, r0
   82c04:	b165      	cbz	r5, 82c20 <_dtoa_r+0x420>
   82c06:	f1ba 0f00 	cmp.w	sl, #0
   82c0a:	dd09      	ble.n	82c20 <_dtoa_r+0x420>
   82c0c:	45aa      	cmp	sl, r5
   82c0e:	4653      	mov	r3, sl
   82c10:	bfa8      	it	ge
   82c12:	462b      	movge	r3, r5
   82c14:	9a06      	ldr	r2, [sp, #24]
   82c16:	1aed      	subs	r5, r5, r3
   82c18:	1ad2      	subs	r2, r2, r3
   82c1a:	9206      	str	r2, [sp, #24]
   82c1c:	ebc3 0a0a 	rsb	sl, r3, sl
   82c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82c22:	2b00      	cmp	r3, #0
   82c24:	dd1a      	ble.n	82c5c <_dtoa_r+0x45c>
   82c26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82c28:	2b00      	cmp	r3, #0
   82c2a:	f000 8383 	beq.w	83334 <_dtoa_r+0xb34>
   82c2e:	2f00      	cmp	r7, #0
   82c30:	dd10      	ble.n	82c54 <_dtoa_r+0x454>
   82c32:	4631      	mov	r1, r6
   82c34:	463a      	mov	r2, r7
   82c36:	4620      	mov	r0, r4
   82c38:	f001 fb8e 	bl	84358 <__pow5mult>
   82c3c:	4606      	mov	r6, r0
   82c3e:	465a      	mov	r2, fp
   82c40:	4631      	mov	r1, r6
   82c42:	4620      	mov	r0, r4
   82c44:	f001 fae8 	bl	84218 <__multiply>
   82c48:	4680      	mov	r8, r0
   82c4a:	4659      	mov	r1, fp
   82c4c:	4620      	mov	r0, r4
   82c4e:	f001 fa3f 	bl	840d0 <_Bfree>
   82c52:	46c3      	mov	fp, r8
   82c54:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82c56:	1bda      	subs	r2, r3, r7
   82c58:	f040 82a7 	bne.w	831aa <_dtoa_r+0x9aa>
   82c5c:	4620      	mov	r0, r4
   82c5e:	2101      	movs	r1, #1
   82c60:	f001 fad0 	bl	84204 <__i2b>
   82c64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82c66:	4680      	mov	r8, r0
   82c68:	2b00      	cmp	r3, #0
   82c6a:	dd39      	ble.n	82ce0 <_dtoa_r+0x4e0>
   82c6c:	4601      	mov	r1, r0
   82c6e:	461a      	mov	r2, r3
   82c70:	4620      	mov	r0, r4
   82c72:	f001 fb71 	bl	84358 <__pow5mult>
   82c76:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82c78:	4680      	mov	r8, r0
   82c7a:	2b01      	cmp	r3, #1
   82c7c:	f340 829b 	ble.w	831b6 <_dtoa_r+0x9b6>
   82c80:	f04f 0900 	mov.w	r9, #0
   82c84:	f8d8 3010 	ldr.w	r3, [r8, #16]
   82c88:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   82c8c:	6918      	ldr	r0, [r3, #16]
   82c8e:	f001 fa6b 	bl	84168 <__hi0bits>
   82c92:	f1c0 0020 	rsb	r0, r0, #32
   82c96:	e02d      	b.n	82cf4 <_dtoa_r+0x4f4>
   82c98:	2301      	movs	r3, #1
   82c9a:	930c      	str	r3, [sp, #48]	; 0x30
   82c9c:	e671      	b.n	82982 <_dtoa_r+0x182>
   82c9e:	9805      	ldr	r0, [sp, #20]
   82ca0:	f002 f970 	bl	84f84 <__aeabi_i2d>
   82ca4:	4632      	mov	r2, r6
   82ca6:	463b      	mov	r3, r7
   82ca8:	f002 fc3a 	bl	85520 <__aeabi_dcmpeq>
   82cac:	2800      	cmp	r0, #0
   82cae:	f47f ae52 	bne.w	82956 <_dtoa_r+0x156>
   82cb2:	9b05      	ldr	r3, [sp, #20]
   82cb4:	3b01      	subs	r3, #1
   82cb6:	9305      	str	r3, [sp, #20]
   82cb8:	e64d      	b.n	82956 <_dtoa_r+0x156>
   82cba:	9a06      	ldr	r2, [sp, #24]
   82cbc:	9b05      	ldr	r3, [sp, #20]
   82cbe:	1ad2      	subs	r2, r2, r3
   82cc0:	425b      	negs	r3, r3
   82cc2:	9309      	str	r3, [sp, #36]	; 0x24
   82cc4:	2300      	movs	r3, #0
   82cc6:	9206      	str	r2, [sp, #24]
   82cc8:	930b      	str	r3, [sp, #44]	; 0x2c
   82cca:	e66a      	b.n	829a2 <_dtoa_r+0x1a2>
   82ccc:	f1ca 0300 	rsb	r3, sl, #0
   82cd0:	9306      	str	r3, [sp, #24]
   82cd2:	f04f 0a00 	mov.w	sl, #0
   82cd6:	e65c      	b.n	82992 <_dtoa_r+0x192>
   82cd8:	9f09      	ldr	r7, [sp, #36]	; 0x24
   82cda:	9d06      	ldr	r5, [sp, #24]
   82cdc:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   82cde:	e791      	b.n	82c04 <_dtoa_r+0x404>
   82ce0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82ce2:	2b01      	cmp	r3, #1
   82ce4:	f340 82b8 	ble.w	83258 <_dtoa_r+0xa58>
   82ce8:	f04f 0900 	mov.w	r9, #0
   82cec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82cee:	2b00      	cmp	r3, #0
   82cf0:	d1c8      	bne.n	82c84 <_dtoa_r+0x484>
   82cf2:	2001      	movs	r0, #1
   82cf4:	4450      	add	r0, sl
   82cf6:	f010 001f 	ands.w	r0, r0, #31
   82cfa:	f000 8081 	beq.w	82e00 <_dtoa_r+0x600>
   82cfe:	f1c0 0320 	rsb	r3, r0, #32
   82d02:	2b04      	cmp	r3, #4
   82d04:	f340 84c1 	ble.w	8368a <_dtoa_r+0xe8a>
   82d08:	f1c0 001c 	rsb	r0, r0, #28
   82d0c:	9b06      	ldr	r3, [sp, #24]
   82d0e:	4405      	add	r5, r0
   82d10:	4403      	add	r3, r0
   82d12:	9306      	str	r3, [sp, #24]
   82d14:	4482      	add	sl, r0
   82d16:	9b06      	ldr	r3, [sp, #24]
   82d18:	2b00      	cmp	r3, #0
   82d1a:	dd05      	ble.n	82d28 <_dtoa_r+0x528>
   82d1c:	4659      	mov	r1, fp
   82d1e:	461a      	mov	r2, r3
   82d20:	4620      	mov	r0, r4
   82d22:	f001 fb69 	bl	843f8 <__lshift>
   82d26:	4683      	mov	fp, r0
   82d28:	f1ba 0f00 	cmp.w	sl, #0
   82d2c:	dd05      	ble.n	82d3a <_dtoa_r+0x53a>
   82d2e:	4641      	mov	r1, r8
   82d30:	4652      	mov	r2, sl
   82d32:	4620      	mov	r0, r4
   82d34:	f001 fb60 	bl	843f8 <__lshift>
   82d38:	4680      	mov	r8, r0
   82d3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82d3c:	2b00      	cmp	r3, #0
   82d3e:	f040 826d 	bne.w	8321c <_dtoa_r+0xa1c>
   82d42:	9b07      	ldr	r3, [sp, #28]
   82d44:	2b00      	cmp	r3, #0
   82d46:	f340 829b 	ble.w	83280 <_dtoa_r+0xa80>
   82d4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d4c:	2b00      	cmp	r3, #0
   82d4e:	d171      	bne.n	82e34 <_dtoa_r+0x634>
   82d50:	f8dd 9020 	ldr.w	r9, [sp, #32]
   82d54:	9f07      	ldr	r7, [sp, #28]
   82d56:	464d      	mov	r5, r9
   82d58:	e004      	b.n	82d64 <_dtoa_r+0x564>
   82d5a:	4659      	mov	r1, fp
   82d5c:	4620      	mov	r0, r4
   82d5e:	f001 f9c1 	bl	840e4 <__multadd>
   82d62:	4683      	mov	fp, r0
   82d64:	4658      	mov	r0, fp
   82d66:	4641      	mov	r1, r8
   82d68:	f7ff fcb0 	bl	826cc <quorem>
   82d6c:	3030      	adds	r0, #48	; 0x30
   82d6e:	f805 0b01 	strb.w	r0, [r5], #1
   82d72:	ebc9 0305 	rsb	r3, r9, r5
   82d76:	42bb      	cmp	r3, r7
   82d78:	f04f 020a 	mov.w	r2, #10
   82d7c:	f04f 0300 	mov.w	r3, #0
   82d80:	dbeb      	blt.n	82d5a <_dtoa_r+0x55a>
   82d82:	9b08      	ldr	r3, [sp, #32]
   82d84:	9a07      	ldr	r2, [sp, #28]
   82d86:	4684      	mov	ip, r0
   82d88:	2a01      	cmp	r2, #1
   82d8a:	bfac      	ite	ge
   82d8c:	189b      	addge	r3, r3, r2
   82d8e:	3301      	addlt	r3, #1
   82d90:	461d      	mov	r5, r3
   82d92:	f04f 0a00 	mov.w	sl, #0
   82d96:	4659      	mov	r1, fp
   82d98:	2201      	movs	r2, #1
   82d9a:	4620      	mov	r0, r4
   82d9c:	f8cd c008 	str.w	ip, [sp, #8]
   82da0:	f001 fb2a 	bl	843f8 <__lshift>
   82da4:	4641      	mov	r1, r8
   82da6:	4683      	mov	fp, r0
   82da8:	f001 fb7e 	bl	844a8 <__mcmp>
   82dac:	2800      	cmp	r0, #0
   82dae:	f8dd c008 	ldr.w	ip, [sp, #8]
   82db2:	f340 82fc 	ble.w	833ae <_dtoa_r+0xbae>
   82db6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   82dba:	1e6b      	subs	r3, r5, #1
   82dbc:	9908      	ldr	r1, [sp, #32]
   82dbe:	e004      	b.n	82dca <_dtoa_r+0x5ca>
   82dc0:	428b      	cmp	r3, r1
   82dc2:	f000 8279 	beq.w	832b8 <_dtoa_r+0xab8>
   82dc6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   82dca:	2a39      	cmp	r2, #57	; 0x39
   82dcc:	f103 0501 	add.w	r5, r3, #1
   82dd0:	d0f6      	beq.n	82dc0 <_dtoa_r+0x5c0>
   82dd2:	3201      	adds	r2, #1
   82dd4:	701a      	strb	r2, [r3, #0]
   82dd6:	4641      	mov	r1, r8
   82dd8:	4620      	mov	r0, r4
   82dda:	f001 f979 	bl	840d0 <_Bfree>
   82dde:	2e00      	cmp	r6, #0
   82de0:	f43f aedf 	beq.w	82ba2 <_dtoa_r+0x3a2>
   82de4:	f1ba 0f00 	cmp.w	sl, #0
   82de8:	d005      	beq.n	82df6 <_dtoa_r+0x5f6>
   82dea:	45b2      	cmp	sl, r6
   82dec:	d003      	beq.n	82df6 <_dtoa_r+0x5f6>
   82dee:	4651      	mov	r1, sl
   82df0:	4620      	mov	r0, r4
   82df2:	f001 f96d 	bl	840d0 <_Bfree>
   82df6:	4631      	mov	r1, r6
   82df8:	4620      	mov	r0, r4
   82dfa:	f001 f969 	bl	840d0 <_Bfree>
   82dfe:	e6d0      	b.n	82ba2 <_dtoa_r+0x3a2>
   82e00:	201c      	movs	r0, #28
   82e02:	e783      	b.n	82d0c <_dtoa_r+0x50c>
   82e04:	4b03      	ldr	r3, [pc, #12]	; (82e14 <_dtoa_r+0x614>)
   82e06:	9a02      	ldr	r2, [sp, #8]
   82e08:	1b5b      	subs	r3, r3, r5
   82e0a:	fa02 f003 	lsl.w	r0, r2, r3
   82e0e:	e56f      	b.n	828f0 <_dtoa_r+0xf0>
   82e10:	40240000 	.word	0x40240000
   82e14:	fffffbee 	.word	0xfffffbee
   82e18:	900c      	str	r0, [sp, #48]	; 0x30
   82e1a:	e5b2      	b.n	82982 <_dtoa_r+0x182>
   82e1c:	4631      	mov	r1, r6
   82e1e:	2300      	movs	r3, #0
   82e20:	4620      	mov	r0, r4
   82e22:	220a      	movs	r2, #10
   82e24:	f001 f95e 	bl	840e4 <__multadd>
   82e28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82e2a:	4606      	mov	r6, r0
   82e2c:	2b00      	cmp	r3, #0
   82e2e:	f340 8415 	ble.w	8365c <_dtoa_r+0xe5c>
   82e32:	9307      	str	r3, [sp, #28]
   82e34:	2d00      	cmp	r5, #0
   82e36:	dd05      	ble.n	82e44 <_dtoa_r+0x644>
   82e38:	4631      	mov	r1, r6
   82e3a:	462a      	mov	r2, r5
   82e3c:	4620      	mov	r0, r4
   82e3e:	f001 fadb 	bl	843f8 <__lshift>
   82e42:	4606      	mov	r6, r0
   82e44:	f1b9 0f00 	cmp.w	r9, #0
   82e48:	f040 82ee 	bne.w	83428 <_dtoa_r+0xc28>
   82e4c:	46b1      	mov	r9, r6
   82e4e:	9a08      	ldr	r2, [sp, #32]
   82e50:	9b07      	ldr	r3, [sp, #28]
   82e52:	4617      	mov	r7, r2
   82e54:	3b01      	subs	r3, #1
   82e56:	18d3      	adds	r3, r2, r3
   82e58:	9309      	str	r3, [sp, #36]	; 0x24
   82e5a:	9b02      	ldr	r3, [sp, #8]
   82e5c:	f003 0301 	and.w	r3, r3, #1
   82e60:	930a      	str	r3, [sp, #40]	; 0x28
   82e62:	4641      	mov	r1, r8
   82e64:	4658      	mov	r0, fp
   82e66:	f7ff fc31 	bl	826cc <quorem>
   82e6a:	4631      	mov	r1, r6
   82e6c:	4605      	mov	r5, r0
   82e6e:	4658      	mov	r0, fp
   82e70:	f001 fb1a 	bl	844a8 <__mcmp>
   82e74:	464a      	mov	r2, r9
   82e76:	4682      	mov	sl, r0
   82e78:	4641      	mov	r1, r8
   82e7a:	4620      	mov	r0, r4
   82e7c:	f001 fb38 	bl	844f0 <__mdiff>
   82e80:	68c2      	ldr	r2, [r0, #12]
   82e82:	4603      	mov	r3, r0
   82e84:	f105 0c30 	add.w	ip, r5, #48	; 0x30
   82e88:	2a00      	cmp	r2, #0
   82e8a:	f040 81bd 	bne.w	83208 <_dtoa_r+0xa08>
   82e8e:	4619      	mov	r1, r3
   82e90:	4658      	mov	r0, fp
   82e92:	f8cd c01c 	str.w	ip, [sp, #28]
   82e96:	9306      	str	r3, [sp, #24]
   82e98:	f001 fb06 	bl	844a8 <__mcmp>
   82e9c:	9b06      	ldr	r3, [sp, #24]
   82e9e:	9002      	str	r0, [sp, #8]
   82ea0:	4619      	mov	r1, r3
   82ea2:	4620      	mov	r0, r4
   82ea4:	f001 f914 	bl	840d0 <_Bfree>
   82ea8:	9a02      	ldr	r2, [sp, #8]
   82eaa:	f8dd c01c 	ldr.w	ip, [sp, #28]
   82eae:	b92a      	cbnz	r2, 82ebc <_dtoa_r+0x6bc>
   82eb0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82eb2:	b91b      	cbnz	r3, 82ebc <_dtoa_r+0x6bc>
   82eb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82eb6:	2b00      	cmp	r3, #0
   82eb8:	f000 83b0 	beq.w	8361c <_dtoa_r+0xe1c>
   82ebc:	f1ba 0f00 	cmp.w	sl, #0
   82ec0:	f2c0 8257 	blt.w	83372 <_dtoa_r+0xb72>
   82ec4:	d105      	bne.n	82ed2 <_dtoa_r+0x6d2>
   82ec6:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82ec8:	b91b      	cbnz	r3, 82ed2 <_dtoa_r+0x6d2>
   82eca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82ecc:	2b00      	cmp	r3, #0
   82ece:	f000 8250 	beq.w	83372 <_dtoa_r+0xb72>
   82ed2:	2a00      	cmp	r2, #0
   82ed4:	f300 82bc 	bgt.w	83450 <_dtoa_r+0xc50>
   82ed8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82eda:	f107 0a01 	add.w	sl, r7, #1
   82ede:	429f      	cmp	r7, r3
   82ee0:	f887 c000 	strb.w	ip, [r7]
   82ee4:	4655      	mov	r5, sl
   82ee6:	f000 82bf 	beq.w	83468 <_dtoa_r+0xc68>
   82eea:	4659      	mov	r1, fp
   82eec:	220a      	movs	r2, #10
   82eee:	2300      	movs	r3, #0
   82ef0:	4620      	mov	r0, r4
   82ef2:	f001 f8f7 	bl	840e4 <__multadd>
   82ef6:	454e      	cmp	r6, r9
   82ef8:	4683      	mov	fp, r0
   82efa:	4631      	mov	r1, r6
   82efc:	4620      	mov	r0, r4
   82efe:	f04f 020a 	mov.w	r2, #10
   82f02:	f04f 0300 	mov.w	r3, #0
   82f06:	f000 8179 	beq.w	831fc <_dtoa_r+0x9fc>
   82f0a:	f001 f8eb 	bl	840e4 <__multadd>
   82f0e:	4649      	mov	r1, r9
   82f10:	4606      	mov	r6, r0
   82f12:	220a      	movs	r2, #10
   82f14:	4620      	mov	r0, r4
   82f16:	2300      	movs	r3, #0
   82f18:	f001 f8e4 	bl	840e4 <__multadd>
   82f1c:	4657      	mov	r7, sl
   82f1e:	4681      	mov	r9, r0
   82f20:	e79f      	b.n	82e62 <_dtoa_r+0x662>
   82f22:	2301      	movs	r3, #1
   82f24:	930a      	str	r3, [sp, #40]	; 0x28
   82f26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82f28:	2b00      	cmp	r3, #0
   82f2a:	f340 8219 	ble.w	83360 <_dtoa_r+0xb60>
   82f2e:	461f      	mov	r7, r3
   82f30:	461e      	mov	r6, r3
   82f32:	930d      	str	r3, [sp, #52]	; 0x34
   82f34:	9307      	str	r3, [sp, #28]
   82f36:	2100      	movs	r1, #0
   82f38:	2f17      	cmp	r7, #23
   82f3a:	6461      	str	r1, [r4, #68]	; 0x44
   82f3c:	d90a      	bls.n	82f54 <_dtoa_r+0x754>
   82f3e:	2201      	movs	r2, #1
   82f40:	2304      	movs	r3, #4
   82f42:	005b      	lsls	r3, r3, #1
   82f44:	f103 0014 	add.w	r0, r3, #20
   82f48:	4287      	cmp	r7, r0
   82f4a:	4611      	mov	r1, r2
   82f4c:	f102 0201 	add.w	r2, r2, #1
   82f50:	d2f7      	bcs.n	82f42 <_dtoa_r+0x742>
   82f52:	6461      	str	r1, [r4, #68]	; 0x44
   82f54:	4620      	mov	r0, r4
   82f56:	f001 f893 	bl	84080 <_Balloc>
   82f5a:	2e0e      	cmp	r6, #14
   82f5c:	9008      	str	r0, [sp, #32]
   82f5e:	6420      	str	r0, [r4, #64]	; 0x40
   82f60:	f63f ad5e 	bhi.w	82a20 <_dtoa_r+0x220>
   82f64:	2d00      	cmp	r5, #0
   82f66:	f43f ad5b 	beq.w	82a20 <_dtoa_r+0x220>
   82f6a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   82f6e:	9905      	ldr	r1, [sp, #20]
   82f70:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   82f74:	2900      	cmp	r1, #0
   82f76:	f340 8226 	ble.w	833c6 <_dtoa_r+0xbc6>
   82f7a:	4bba      	ldr	r3, [pc, #744]	; (83264 <_dtoa_r+0xa64>)
   82f7c:	f001 020f 	and.w	r2, r1, #15
   82f80:	110d      	asrs	r5, r1, #4
   82f82:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82f86:	06e9      	lsls	r1, r5, #27
   82f88:	e9d3 6700 	ldrd	r6, r7, [r3]
   82f8c:	f140 81e1 	bpl.w	83352 <_dtoa_r+0xb52>
   82f90:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   82f94:	4bb4      	ldr	r3, [pc, #720]	; (83268 <_dtoa_r+0xa68>)
   82f96:	f005 050f 	and.w	r5, r5, #15
   82f9a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   82f9e:	f002 f981 	bl	852a4 <__aeabi_ddiv>
   82fa2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   82fa6:	f04f 0803 	mov.w	r8, #3
   82faa:	b18d      	cbz	r5, 82fd0 <_dtoa_r+0x7d0>
   82fac:	4630      	mov	r0, r6
   82fae:	4639      	mov	r1, r7
   82fb0:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 83268 <_dtoa_r+0xa68>
   82fb4:	07ea      	lsls	r2, r5, #31
   82fb6:	d505      	bpl.n	82fc4 <_dtoa_r+0x7c4>
   82fb8:	e9d9 2300 	ldrd	r2, r3, [r9]
   82fbc:	f002 f848 	bl	85050 <__aeabi_dmul>
   82fc0:	f108 0801 	add.w	r8, r8, #1
   82fc4:	106d      	asrs	r5, r5, #1
   82fc6:	f109 0908 	add.w	r9, r9, #8
   82fca:	d1f3      	bne.n	82fb4 <_dtoa_r+0x7b4>
   82fcc:	4606      	mov	r6, r0
   82fce:	460f      	mov	r7, r1
   82fd0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   82fd4:	4632      	mov	r2, r6
   82fd6:	463b      	mov	r3, r7
   82fd8:	f002 f964 	bl	852a4 <__aeabi_ddiv>
   82fdc:	e9cd 0102 	strd	r0, r1, [sp, #8]
   82fe0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82fe2:	b143      	cbz	r3, 82ff6 <_dtoa_r+0x7f6>
   82fe4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   82fe8:	2200      	movs	r2, #0
   82fea:	4ba0      	ldr	r3, [pc, #640]	; (8326c <_dtoa_r+0xa6c>)
   82fec:	f002 faa2 	bl	85534 <__aeabi_dcmplt>
   82ff0:	2800      	cmp	r0, #0
   82ff2:	f040 82b5 	bne.w	83560 <_dtoa_r+0xd60>
   82ff6:	4640      	mov	r0, r8
   82ff8:	f001 ffc4 	bl	84f84 <__aeabi_i2d>
   82ffc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83000:	f002 f826 	bl	85050 <__aeabi_dmul>
   83004:	4b9a      	ldr	r3, [pc, #616]	; (83270 <_dtoa_r+0xa70>)
   83006:	2200      	movs	r2, #0
   83008:	f001 fe70 	bl	84cec <__adddf3>
   8300c:	9b07      	ldr	r3, [sp, #28]
   8300e:	4606      	mov	r6, r0
   83010:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   83014:	2b00      	cmp	r3, #0
   83016:	f000 8168 	beq.w	832ea <_dtoa_r+0xaea>
   8301a:	9b05      	ldr	r3, [sp, #20]
   8301c:	f8dd c01c 	ldr.w	ip, [sp, #28]
   83020:	9313      	str	r3, [sp, #76]	; 0x4c
   83022:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83024:	2b00      	cmp	r3, #0
   83026:	f000 8226 	beq.w	83476 <_dtoa_r+0xc76>
   8302a:	4b8e      	ldr	r3, [pc, #568]	; (83264 <_dtoa_r+0xa64>)
   8302c:	2000      	movs	r0, #0
   8302e:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
   83032:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83036:	498f      	ldr	r1, [pc, #572]	; (83274 <_dtoa_r+0xa74>)
   83038:	f8cd c050 	str.w	ip, [sp, #80]	; 0x50
   8303c:	f002 f932 	bl	852a4 <__aeabi_ddiv>
   83040:	4632      	mov	r2, r6
   83042:	463b      	mov	r3, r7
   83044:	f001 fe50 	bl	84ce8 <__aeabi_dsub>
   83048:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   8304c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   83050:	4639      	mov	r1, r7
   83052:	4630      	mov	r0, r6
   83054:	f002 fa96 	bl	85584 <__aeabi_d2iz>
   83058:	4605      	mov	r5, r0
   8305a:	f001 ff93 	bl	84f84 <__aeabi_i2d>
   8305e:	4602      	mov	r2, r0
   83060:	460b      	mov	r3, r1
   83062:	4630      	mov	r0, r6
   83064:	4639      	mov	r1, r7
   83066:	f001 fe3f 	bl	84ce8 <__aeabi_dsub>
   8306a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   8306e:	3530      	adds	r5, #48	; 0x30
   83070:	fa5f f885 	uxtb.w	r8, r5
   83074:	9d08      	ldr	r5, [sp, #32]
   83076:	4606      	mov	r6, r0
   83078:	f885 8000 	strb.w	r8, [r5]
   8307c:	460f      	mov	r7, r1
   8307e:	3501      	adds	r5, #1
   83080:	f002 fa58 	bl	85534 <__aeabi_dcmplt>
   83084:	2800      	cmp	r0, #0
   83086:	f040 82b9 	bne.w	835fc <_dtoa_r+0xdfc>
   8308a:	4632      	mov	r2, r6
   8308c:	463b      	mov	r3, r7
   8308e:	2000      	movs	r0, #0
   83090:	4976      	ldr	r1, [pc, #472]	; (8326c <_dtoa_r+0xa6c>)
   83092:	f001 fe29 	bl	84ce8 <__aeabi_dsub>
   83096:	4602      	mov	r2, r0
   83098:	460b      	mov	r3, r1
   8309a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   8309e:	f002 fa67 	bl	85570 <__aeabi_dcmpgt>
   830a2:	2800      	cmp	r0, #0
   830a4:	f040 82b3 	bne.w	8360e <_dtoa_r+0xe0e>
   830a8:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
   830ac:	f1bc 0f01 	cmp.w	ip, #1
   830b0:	f340 813a 	ble.w	83328 <_dtoa_r+0xb28>
   830b4:	9b08      	ldr	r3, [sp, #32]
   830b6:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   830ba:	f8cd b008 	str.w	fp, [sp, #8]
   830be:	eb03 090c 	add.w	r9, r3, ip
   830c2:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   830c6:	46a0      	mov	r8, r4
   830c8:	e00f      	b.n	830ea <_dtoa_r+0x8ea>
   830ca:	4632      	mov	r2, r6
   830cc:	463b      	mov	r3, r7
   830ce:	2000      	movs	r0, #0
   830d0:	4966      	ldr	r1, [pc, #408]	; (8326c <_dtoa_r+0xa6c>)
   830d2:	f001 fe09 	bl	84ce8 <__aeabi_dsub>
   830d6:	4652      	mov	r2, sl
   830d8:	465b      	mov	r3, fp
   830da:	f002 fa2b 	bl	85534 <__aeabi_dcmplt>
   830de:	2800      	cmp	r0, #0
   830e0:	f040 8290 	bne.w	83604 <_dtoa_r+0xe04>
   830e4:	454d      	cmp	r5, r9
   830e6:	f000 811a 	beq.w	8331e <_dtoa_r+0xb1e>
   830ea:	4650      	mov	r0, sl
   830ec:	4659      	mov	r1, fp
   830ee:	2200      	movs	r2, #0
   830f0:	4b61      	ldr	r3, [pc, #388]	; (83278 <_dtoa_r+0xa78>)
   830f2:	f001 ffad 	bl	85050 <__aeabi_dmul>
   830f6:	2200      	movs	r2, #0
   830f8:	4b5f      	ldr	r3, [pc, #380]	; (83278 <_dtoa_r+0xa78>)
   830fa:	4682      	mov	sl, r0
   830fc:	468b      	mov	fp, r1
   830fe:	4630      	mov	r0, r6
   83100:	4639      	mov	r1, r7
   83102:	f001 ffa5 	bl	85050 <__aeabi_dmul>
   83106:	460f      	mov	r7, r1
   83108:	4606      	mov	r6, r0
   8310a:	f002 fa3b 	bl	85584 <__aeabi_d2iz>
   8310e:	4604      	mov	r4, r0
   83110:	f001 ff38 	bl	84f84 <__aeabi_i2d>
   83114:	4602      	mov	r2, r0
   83116:	460b      	mov	r3, r1
   83118:	4630      	mov	r0, r6
   8311a:	4639      	mov	r1, r7
   8311c:	f001 fde4 	bl	84ce8 <__aeabi_dsub>
   83120:	3430      	adds	r4, #48	; 0x30
   83122:	b2e4      	uxtb	r4, r4
   83124:	f805 4b01 	strb.w	r4, [r5], #1
   83128:	4652      	mov	r2, sl
   8312a:	465b      	mov	r3, fp
   8312c:	4606      	mov	r6, r0
   8312e:	460f      	mov	r7, r1
   83130:	f002 fa00 	bl	85534 <__aeabi_dcmplt>
   83134:	2800      	cmp	r0, #0
   83136:	d0c8      	beq.n	830ca <_dtoa_r+0x8ca>
   83138:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8313a:	f8dd b008 	ldr.w	fp, [sp, #8]
   8313e:	4644      	mov	r4, r8
   83140:	9305      	str	r3, [sp, #20]
   83142:	e52e      	b.n	82ba2 <_dtoa_r+0x3a2>
   83144:	2300      	movs	r3, #0
   83146:	930a      	str	r3, [sp, #40]	; 0x28
   83148:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8314a:	9a05      	ldr	r2, [sp, #20]
   8314c:	4413      	add	r3, r2
   8314e:	930d      	str	r3, [sp, #52]	; 0x34
   83150:	3301      	adds	r3, #1
   83152:	2b00      	cmp	r3, #0
   83154:	9307      	str	r3, [sp, #28]
   83156:	f340 810a 	ble.w	8336e <_dtoa_r+0xb6e>
   8315a:	9e07      	ldr	r6, [sp, #28]
   8315c:	4637      	mov	r7, r6
   8315e:	e6ea      	b.n	82f36 <_dtoa_r+0x736>
   83160:	2300      	movs	r3, #0
   83162:	930a      	str	r3, [sp, #40]	; 0x28
   83164:	e6df      	b.n	82f26 <_dtoa_r+0x726>
   83166:	9b07      	ldr	r3, [sp, #28]
   83168:	2b00      	cmp	r3, #0
   8316a:	f73f ac6a 	bgt.w	82a42 <_dtoa_r+0x242>
   8316e:	f040 8266 	bne.w	8363e <_dtoa_r+0xe3e>
   83172:	4640      	mov	r0, r8
   83174:	2200      	movs	r2, #0
   83176:	4b41      	ldr	r3, [pc, #260]	; (8327c <_dtoa_r+0xa7c>)
   83178:	4649      	mov	r1, r9
   8317a:	f001 ff69 	bl	85050 <__aeabi_dmul>
   8317e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83182:	f002 f9eb 	bl	8555c <__aeabi_dcmpge>
   83186:	f8dd 801c 	ldr.w	r8, [sp, #28]
   8318a:	4646      	mov	r6, r8
   8318c:	2800      	cmp	r0, #0
   8318e:	f000 808b 	beq.w	832a8 <_dtoa_r+0xaa8>
   83192:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83194:	9d08      	ldr	r5, [sp, #32]
   83196:	43db      	mvns	r3, r3
   83198:	9305      	str	r3, [sp, #20]
   8319a:	4641      	mov	r1, r8
   8319c:	4620      	mov	r0, r4
   8319e:	f000 ff97 	bl	840d0 <_Bfree>
   831a2:	2e00      	cmp	r6, #0
   831a4:	f47f ae27 	bne.w	82df6 <_dtoa_r+0x5f6>
   831a8:	e4fb      	b.n	82ba2 <_dtoa_r+0x3a2>
   831aa:	4659      	mov	r1, fp
   831ac:	4620      	mov	r0, r4
   831ae:	f001 f8d3 	bl	84358 <__pow5mult>
   831b2:	4683      	mov	fp, r0
   831b4:	e552      	b.n	82c5c <_dtoa_r+0x45c>
   831b6:	9b02      	ldr	r3, [sp, #8]
   831b8:	2b00      	cmp	r3, #0
   831ba:	f47f ad61 	bne.w	82c80 <_dtoa_r+0x480>
   831be:	9b03      	ldr	r3, [sp, #12]
   831c0:	f3c3 0313 	ubfx	r3, r3, #0, #20
   831c4:	2b00      	cmp	r3, #0
   831c6:	f47f ad8f 	bne.w	82ce8 <_dtoa_r+0x4e8>
   831ca:	9b03      	ldr	r3, [sp, #12]
   831cc:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
   831d0:	0d3f      	lsrs	r7, r7, #20
   831d2:	053f      	lsls	r7, r7, #20
   831d4:	2f00      	cmp	r7, #0
   831d6:	f000 821e 	beq.w	83616 <_dtoa_r+0xe16>
   831da:	9b06      	ldr	r3, [sp, #24]
   831dc:	f10a 0a01 	add.w	sl, sl, #1
   831e0:	3301      	adds	r3, #1
   831e2:	9306      	str	r3, [sp, #24]
   831e4:	f04f 0901 	mov.w	r9, #1
   831e8:	e580      	b.n	82cec <_dtoa_r+0x4ec>
   831ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
   831ec:	2a00      	cmp	r2, #0
   831ee:	f000 81a9 	beq.w	83544 <_dtoa_r+0xd44>
   831f2:	f203 4333 	addw	r3, r3, #1075	; 0x433
   831f6:	9f09      	ldr	r7, [sp, #36]	; 0x24
   831f8:	9d06      	ldr	r5, [sp, #24]
   831fa:	e4fa      	b.n	82bf2 <_dtoa_r+0x3f2>
   831fc:	f000 ff72 	bl	840e4 <__multadd>
   83200:	4657      	mov	r7, sl
   83202:	4606      	mov	r6, r0
   83204:	4681      	mov	r9, r0
   83206:	e62c      	b.n	82e62 <_dtoa_r+0x662>
   83208:	4601      	mov	r1, r0
   8320a:	4620      	mov	r0, r4
   8320c:	f8cd c008 	str.w	ip, [sp, #8]
   83210:	f000 ff5e 	bl	840d0 <_Bfree>
   83214:	2201      	movs	r2, #1
   83216:	f8dd c008 	ldr.w	ip, [sp, #8]
   8321a:	e64f      	b.n	82ebc <_dtoa_r+0x6bc>
   8321c:	4658      	mov	r0, fp
   8321e:	4641      	mov	r1, r8
   83220:	f001 f942 	bl	844a8 <__mcmp>
   83224:	2800      	cmp	r0, #0
   83226:	f6bf ad8c 	bge.w	82d42 <_dtoa_r+0x542>
   8322a:	9f05      	ldr	r7, [sp, #20]
   8322c:	4659      	mov	r1, fp
   8322e:	2300      	movs	r3, #0
   83230:	4620      	mov	r0, r4
   83232:	220a      	movs	r2, #10
   83234:	3f01      	subs	r7, #1
   83236:	9705      	str	r7, [sp, #20]
   83238:	f000 ff54 	bl	840e4 <__multadd>
   8323c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8323e:	4683      	mov	fp, r0
   83240:	2b00      	cmp	r3, #0
   83242:	f47f adeb 	bne.w	82e1c <_dtoa_r+0x61c>
   83246:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83248:	2b00      	cmp	r3, #0
   8324a:	f340 81fc 	ble.w	83646 <_dtoa_r+0xe46>
   8324e:	9307      	str	r3, [sp, #28]
   83250:	e57e      	b.n	82d50 <_dtoa_r+0x550>
   83252:	9808      	ldr	r0, [sp, #32]
   83254:	f7ff bb08 	b.w	82868 <_dtoa_r+0x68>
   83258:	9b02      	ldr	r3, [sp, #8]
   8325a:	2b00      	cmp	r3, #0
   8325c:	f47f ad44 	bne.w	82ce8 <_dtoa_r+0x4e8>
   83260:	e7ad      	b.n	831be <_dtoa_r+0x9be>
   83262:	bf00      	nop
   83264:	00085c40 	.word	0x00085c40
   83268:	00085d18 	.word	0x00085d18
   8326c:	3ff00000 	.word	0x3ff00000
   83270:	401c0000 	.word	0x401c0000
   83274:	3fe00000 	.word	0x3fe00000
   83278:	40240000 	.word	0x40240000
   8327c:	40140000 	.word	0x40140000
   83280:	9b22      	ldr	r3, [sp, #136]	; 0x88
   83282:	2b02      	cmp	r3, #2
   83284:	f77f ad61 	ble.w	82d4a <_dtoa_r+0x54a>
   83288:	9b07      	ldr	r3, [sp, #28]
   8328a:	2b00      	cmp	r3, #0
   8328c:	d181      	bne.n	83192 <_dtoa_r+0x992>
   8328e:	4641      	mov	r1, r8
   83290:	2205      	movs	r2, #5
   83292:	4620      	mov	r0, r4
   83294:	f000 ff26 	bl	840e4 <__multadd>
   83298:	4680      	mov	r8, r0
   8329a:	4658      	mov	r0, fp
   8329c:	4641      	mov	r1, r8
   8329e:	f001 f903 	bl	844a8 <__mcmp>
   832a2:	2800      	cmp	r0, #0
   832a4:	f77f af75 	ble.w	83192 <_dtoa_r+0x992>
   832a8:	9a05      	ldr	r2, [sp, #20]
   832aa:	9908      	ldr	r1, [sp, #32]
   832ac:	2331      	movs	r3, #49	; 0x31
   832ae:	3201      	adds	r2, #1
   832b0:	9205      	str	r2, [sp, #20]
   832b2:	700b      	strb	r3, [r1, #0]
   832b4:	1c4d      	adds	r5, r1, #1
   832b6:	e770      	b.n	8319a <_dtoa_r+0x99a>
   832b8:	9a05      	ldr	r2, [sp, #20]
   832ba:	2331      	movs	r3, #49	; 0x31
   832bc:	3201      	adds	r2, #1
   832be:	9205      	str	r2, [sp, #20]
   832c0:	9a08      	ldr	r2, [sp, #32]
   832c2:	7013      	strb	r3, [r2, #0]
   832c4:	e587      	b.n	82dd6 <_dtoa_r+0x5d6>
   832c6:	f8dd b008 	ldr.w	fp, [sp, #8]
   832ca:	9c06      	ldr	r4, [sp, #24]
   832cc:	e469      	b.n	82ba2 <_dtoa_r+0x3a2>
   832ce:	4640      	mov	r0, r8
   832d0:	f001 fe58 	bl	84f84 <__aeabi_i2d>
   832d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   832d8:	f001 feba 	bl	85050 <__aeabi_dmul>
   832dc:	2200      	movs	r2, #0
   832de:	4bbe      	ldr	r3, [pc, #760]	; (835d8 <_dtoa_r+0xdd8>)
   832e0:	f001 fd04 	bl	84cec <__adddf3>
   832e4:	4606      	mov	r6, r0
   832e6:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   832ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   832ee:	2200      	movs	r2, #0
   832f0:	4bba      	ldr	r3, [pc, #744]	; (835dc <_dtoa_r+0xddc>)
   832f2:	f001 fcf9 	bl	84ce8 <__aeabi_dsub>
   832f6:	4632      	mov	r2, r6
   832f8:	463b      	mov	r3, r7
   832fa:	e9cd 0102 	strd	r0, r1, [sp, #8]
   832fe:	f002 f937 	bl	85570 <__aeabi_dcmpgt>
   83302:	4680      	mov	r8, r0
   83304:	2800      	cmp	r0, #0
   83306:	f040 80b2 	bne.w	8346e <_dtoa_r+0xc6e>
   8330a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8330e:	4632      	mov	r2, r6
   83310:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   83314:	f002 f90e 	bl	85534 <__aeabi_dcmplt>
   83318:	b130      	cbz	r0, 83328 <_dtoa_r+0xb28>
   8331a:	4646      	mov	r6, r8
   8331c:	e739      	b.n	83192 <_dtoa_r+0x992>
   8331e:	4644      	mov	r4, r8
   83320:	f8dd a050 	ldr.w	sl, [sp, #80]	; 0x50
   83324:	f8dd b008 	ldr.w	fp, [sp, #8]
   83328:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   8332c:	e9cd 2302 	strd	r2, r3, [sp, #8]
   83330:	f7ff bb76 	b.w	82a20 <_dtoa_r+0x220>
   83334:	4659      	mov	r1, fp
   83336:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83338:	4620      	mov	r0, r4
   8333a:	f001 f80d 	bl	84358 <__pow5mult>
   8333e:	4683      	mov	fp, r0
   83340:	e48c      	b.n	82c5c <_dtoa_r+0x45c>
   83342:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83344:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83346:	1afb      	subs	r3, r7, r3
   83348:	441a      	add	r2, r3
   8334a:	9709      	str	r7, [sp, #36]	; 0x24
   8334c:	920b      	str	r2, [sp, #44]	; 0x2c
   8334e:	2700      	movs	r7, #0
   83350:	e449      	b.n	82be6 <_dtoa_r+0x3e6>
   83352:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   83356:	f04f 0802 	mov.w	r8, #2
   8335a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   8335e:	e624      	b.n	82faa <_dtoa_r+0x7aa>
   83360:	2601      	movs	r6, #1
   83362:	9623      	str	r6, [sp, #140]	; 0x8c
   83364:	960d      	str	r6, [sp, #52]	; 0x34
   83366:	9607      	str	r6, [sp, #28]
   83368:	2100      	movs	r1, #0
   8336a:	6461      	str	r1, [r4, #68]	; 0x44
   8336c:	e5f2      	b.n	82f54 <_dtoa_r+0x754>
   8336e:	461e      	mov	r6, r3
   83370:	e7fa      	b.n	83368 <_dtoa_r+0xb68>
   83372:	2a00      	cmp	r2, #0
   83374:	dd15      	ble.n	833a2 <_dtoa_r+0xba2>
   83376:	4659      	mov	r1, fp
   83378:	2201      	movs	r2, #1
   8337a:	4620      	mov	r0, r4
   8337c:	f8cd c008 	str.w	ip, [sp, #8]
   83380:	f001 f83a 	bl	843f8 <__lshift>
   83384:	4641      	mov	r1, r8
   83386:	4683      	mov	fp, r0
   83388:	f001 f88e 	bl	844a8 <__mcmp>
   8338c:	2800      	cmp	r0, #0
   8338e:	f8dd c008 	ldr.w	ip, [sp, #8]
   83392:	f340 814d 	ble.w	83630 <_dtoa_r+0xe30>
   83396:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   8339a:	f000 8109 	beq.w	835b0 <_dtoa_r+0xdb0>
   8339e:	f10c 0c01 	add.w	ip, ip, #1
   833a2:	46b2      	mov	sl, r6
   833a4:	f887 c000 	strb.w	ip, [r7]
   833a8:	1c7d      	adds	r5, r7, #1
   833aa:	464e      	mov	r6, r9
   833ac:	e513      	b.n	82dd6 <_dtoa_r+0x5d6>
   833ae:	d104      	bne.n	833ba <_dtoa_r+0xbba>
   833b0:	f01c 0f01 	tst.w	ip, #1
   833b4:	d001      	beq.n	833ba <_dtoa_r+0xbba>
   833b6:	e4fe      	b.n	82db6 <_dtoa_r+0x5b6>
   833b8:	4615      	mov	r5, r2
   833ba:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   833be:	1e6a      	subs	r2, r5, #1
   833c0:	2b30      	cmp	r3, #48	; 0x30
   833c2:	d0f9      	beq.n	833b8 <_dtoa_r+0xbb8>
   833c4:	e507      	b.n	82dd6 <_dtoa_r+0x5d6>
   833c6:	9b05      	ldr	r3, [sp, #20]
   833c8:	425d      	negs	r5, r3
   833ca:	2d00      	cmp	r5, #0
   833cc:	f000 80c1 	beq.w	83552 <_dtoa_r+0xd52>
   833d0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   833d4:	4b82      	ldr	r3, [pc, #520]	; (835e0 <_dtoa_r+0xde0>)
   833d6:	f005 020f 	and.w	r2, r5, #15
   833da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   833de:	e9d3 2300 	ldrd	r2, r3, [r3]
   833e2:	f001 fe35 	bl	85050 <__aeabi_dmul>
   833e6:	112d      	asrs	r5, r5, #4
   833e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
   833ec:	f000 8130 	beq.w	83650 <_dtoa_r+0xe50>
   833f0:	4e7c      	ldr	r6, [pc, #496]	; (835e4 <_dtoa_r+0xde4>)
   833f2:	f04f 0802 	mov.w	r8, #2
   833f6:	07eb      	lsls	r3, r5, #31
   833f8:	d505      	bpl.n	83406 <_dtoa_r+0xc06>
   833fa:	e9d6 2300 	ldrd	r2, r3, [r6]
   833fe:	f001 fe27 	bl	85050 <__aeabi_dmul>
   83402:	f108 0801 	add.w	r8, r8, #1
   83406:	106d      	asrs	r5, r5, #1
   83408:	f106 0608 	add.w	r6, r6, #8
   8340c:	d1f3      	bne.n	833f6 <_dtoa_r+0xbf6>
   8340e:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83412:	e5e5      	b.n	82fe0 <_dtoa_r+0x7e0>
   83414:	9a05      	ldr	r2, [sp, #20]
   83416:	2330      	movs	r3, #48	; 0x30
   83418:	3201      	adds	r2, #1
   8341a:	9205      	str	r2, [sp, #20]
   8341c:	9a08      	ldr	r2, [sp, #32]
   8341e:	7013      	strb	r3, [r2, #0]
   83420:	2331      	movs	r3, #49	; 0x31
   83422:	7013      	strb	r3, [r2, #0]
   83424:	f7ff bbbd 	b.w	82ba2 <_dtoa_r+0x3a2>
   83428:	6871      	ldr	r1, [r6, #4]
   8342a:	4620      	mov	r0, r4
   8342c:	f000 fe28 	bl	84080 <_Balloc>
   83430:	4605      	mov	r5, r0
   83432:	6933      	ldr	r3, [r6, #16]
   83434:	f106 010c 	add.w	r1, r6, #12
   83438:	1c9a      	adds	r2, r3, #2
   8343a:	0092      	lsls	r2, r2, #2
   8343c:	300c      	adds	r0, #12
   8343e:	f000 fd41 	bl	83ec4 <memcpy>
   83442:	4620      	mov	r0, r4
   83444:	4629      	mov	r1, r5
   83446:	2201      	movs	r2, #1
   83448:	f000 ffd6 	bl	843f8 <__lshift>
   8344c:	4681      	mov	r9, r0
   8344e:	e4fe      	b.n	82e4e <_dtoa_r+0x64e>
   83450:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   83454:	f000 80ac 	beq.w	835b0 <_dtoa_r+0xdb0>
   83458:	f10c 0c01 	add.w	ip, ip, #1
   8345c:	46b2      	mov	sl, r6
   8345e:	f887 c000 	strb.w	ip, [r7]
   83462:	1c7d      	adds	r5, r7, #1
   83464:	464e      	mov	r6, r9
   83466:	e4b6      	b.n	82dd6 <_dtoa_r+0x5d6>
   83468:	46b2      	mov	sl, r6
   8346a:	464e      	mov	r6, r9
   8346c:	e493      	b.n	82d96 <_dtoa_r+0x596>
   8346e:	f04f 0800 	mov.w	r8, #0
   83472:	4646      	mov	r6, r8
   83474:	e718      	b.n	832a8 <_dtoa_r+0xaa8>
   83476:	495a      	ldr	r1, [pc, #360]	; (835e0 <_dtoa_r+0xde0>)
   83478:	f10c 33ff 	add.w	r3, ip, #4294967295
   8347c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   83480:	4632      	mov	r2, r6
   83482:	e9d1 0100 	ldrd	r0, r1, [r1]
   83486:	9314      	str	r3, [sp, #80]	; 0x50
   83488:	463b      	mov	r3, r7
   8348a:	f8cd c054 	str.w	ip, [sp, #84]	; 0x54
   8348e:	f001 fddf 	bl	85050 <__aeabi_dmul>
   83492:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   83496:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8349a:	4639      	mov	r1, r7
   8349c:	4630      	mov	r0, r6
   8349e:	f002 f871 	bl	85584 <__aeabi_d2iz>
   834a2:	4605      	mov	r5, r0
   834a4:	f001 fd6e 	bl	84f84 <__aeabi_i2d>
   834a8:	4602      	mov	r2, r0
   834aa:	460b      	mov	r3, r1
   834ac:	4630      	mov	r0, r6
   834ae:	4639      	mov	r1, r7
   834b0:	f001 fc1a 	bl	84ce8 <__aeabi_dsub>
   834b4:	f8dd c054 	ldr.w	ip, [sp, #84]	; 0x54
   834b8:	9a08      	ldr	r2, [sp, #32]
   834ba:	3530      	adds	r5, #48	; 0x30
   834bc:	f1bc 0f01 	cmp.w	ip, #1
   834c0:	7015      	strb	r5, [r2, #0]
   834c2:	4606      	mov	r6, r0
   834c4:	460f      	mov	r7, r1
   834c6:	f102 0501 	add.w	r5, r2, #1
   834ca:	d023      	beq.n	83514 <_dtoa_r+0xd14>
   834cc:	9b08      	ldr	r3, [sp, #32]
   834ce:	f8cd a008 	str.w	sl, [sp, #8]
   834d2:	4463      	add	r3, ip
   834d4:	465e      	mov	r6, fp
   834d6:	469a      	mov	sl, r3
   834d8:	46ab      	mov	fp, r5
   834da:	2200      	movs	r2, #0
   834dc:	4b42      	ldr	r3, [pc, #264]	; (835e8 <_dtoa_r+0xde8>)
   834de:	f001 fdb7 	bl	85050 <__aeabi_dmul>
   834e2:	4689      	mov	r9, r1
   834e4:	4680      	mov	r8, r0
   834e6:	f002 f84d 	bl	85584 <__aeabi_d2iz>
   834ea:	4607      	mov	r7, r0
   834ec:	f001 fd4a 	bl	84f84 <__aeabi_i2d>
   834f0:	3730      	adds	r7, #48	; 0x30
   834f2:	4602      	mov	r2, r0
   834f4:	460b      	mov	r3, r1
   834f6:	4640      	mov	r0, r8
   834f8:	4649      	mov	r1, r9
   834fa:	f001 fbf5 	bl	84ce8 <__aeabi_dsub>
   834fe:	f80b 7b01 	strb.w	r7, [fp], #1
   83502:	45d3      	cmp	fp, sl
   83504:	d1e9      	bne.n	834da <_dtoa_r+0xcda>
   83506:	46b3      	mov	fp, r6
   83508:	460f      	mov	r7, r1
   8350a:	4606      	mov	r6, r0
   8350c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8350e:	f8dd a008 	ldr.w	sl, [sp, #8]
   83512:	441d      	add	r5, r3
   83514:	2200      	movs	r2, #0
   83516:	4b35      	ldr	r3, [pc, #212]	; (835ec <_dtoa_r+0xdec>)
   83518:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   8351c:	f001 fbe6 	bl	84cec <__adddf3>
   83520:	4632      	mov	r2, r6
   83522:	463b      	mov	r3, r7
   83524:	f002 f806 	bl	85534 <__aeabi_dcmplt>
   83528:	2800      	cmp	r0, #0
   8352a:	d048      	beq.n	835be <_dtoa_r+0xdbe>
   8352c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8352e:	9305      	str	r3, [sp, #20]
   83530:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83534:	f7ff bb23 	b.w	82b7e <_dtoa_r+0x37e>
   83538:	9b06      	ldr	r3, [sp, #24]
   8353a:	9a07      	ldr	r2, [sp, #28]
   8353c:	1a9d      	subs	r5, r3, r2
   8353e:	2300      	movs	r3, #0
   83540:	f7ff bb57 	b.w	82bf2 <_dtoa_r+0x3f2>
   83544:	9b16      	ldr	r3, [sp, #88]	; 0x58
   83546:	9f09      	ldr	r7, [sp, #36]	; 0x24
   83548:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   8354c:	9d06      	ldr	r5, [sp, #24]
   8354e:	f7ff bb50 	b.w	82bf2 <_dtoa_r+0x3f2>
   83552:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   83556:	f04f 0802 	mov.w	r8, #2
   8355a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   8355e:	e53f      	b.n	82fe0 <_dtoa_r+0x7e0>
   83560:	9b07      	ldr	r3, [sp, #28]
   83562:	2b00      	cmp	r3, #0
   83564:	f43f aeb3 	beq.w	832ce <_dtoa_r+0xace>
   83568:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   8356a:	2d00      	cmp	r5, #0
   8356c:	f77f aedc 	ble.w	83328 <_dtoa_r+0xb28>
   83570:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   83574:	2200      	movs	r2, #0
   83576:	4b1c      	ldr	r3, [pc, #112]	; (835e8 <_dtoa_r+0xde8>)
   83578:	f001 fd6a 	bl	85050 <__aeabi_dmul>
   8357c:	4606      	mov	r6, r0
   8357e:	460f      	mov	r7, r1
   83580:	f108 0001 	add.w	r0, r8, #1
   83584:	e9cd 6702 	strd	r6, r7, [sp, #8]
   83588:	f001 fcfc 	bl	84f84 <__aeabi_i2d>
   8358c:	4602      	mov	r2, r0
   8358e:	460b      	mov	r3, r1
   83590:	4630      	mov	r0, r6
   83592:	4639      	mov	r1, r7
   83594:	f001 fd5c 	bl	85050 <__aeabi_dmul>
   83598:	4b0f      	ldr	r3, [pc, #60]	; (835d8 <_dtoa_r+0xdd8>)
   8359a:	2200      	movs	r2, #0
   8359c:	f001 fba6 	bl	84cec <__adddf3>
   835a0:	9b05      	ldr	r3, [sp, #20]
   835a2:	4606      	mov	r6, r0
   835a4:	3b01      	subs	r3, #1
   835a6:	9313      	str	r3, [sp, #76]	; 0x4c
   835a8:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   835ac:	46ac      	mov	ip, r5
   835ae:	e538      	b.n	83022 <_dtoa_r+0x822>
   835b0:	2239      	movs	r2, #57	; 0x39
   835b2:	46b2      	mov	sl, r6
   835b4:	703a      	strb	r2, [r7, #0]
   835b6:	464e      	mov	r6, r9
   835b8:	1c7d      	adds	r5, r7, #1
   835ba:	f7ff bbfe 	b.w	82dba <_dtoa_r+0x5ba>
   835be:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   835c2:	2000      	movs	r0, #0
   835c4:	4909      	ldr	r1, [pc, #36]	; (835ec <_dtoa_r+0xdec>)
   835c6:	f001 fb8f 	bl	84ce8 <__aeabi_dsub>
   835ca:	4632      	mov	r2, r6
   835cc:	463b      	mov	r3, r7
   835ce:	f001 ffcf 	bl	85570 <__aeabi_dcmpgt>
   835d2:	b970      	cbnz	r0, 835f2 <_dtoa_r+0xdf2>
   835d4:	e6a8      	b.n	83328 <_dtoa_r+0xb28>
   835d6:	bf00      	nop
   835d8:	401c0000 	.word	0x401c0000
   835dc:	40140000 	.word	0x40140000
   835e0:	00085c40 	.word	0x00085c40
   835e4:	00085d18 	.word	0x00085d18
   835e8:	40240000 	.word	0x40240000
   835ec:	3fe00000 	.word	0x3fe00000
   835f0:	4615      	mov	r5, r2
   835f2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   835f6:	1e6a      	subs	r2, r5, #1
   835f8:	2b30      	cmp	r3, #48	; 0x30
   835fa:	d0f9      	beq.n	835f0 <_dtoa_r+0xdf0>
   835fc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   835fe:	9305      	str	r3, [sp, #20]
   83600:	f7ff bacf 	b.w	82ba2 <_dtoa_r+0x3a2>
   83604:	4643      	mov	r3, r8
   83606:	46a0      	mov	r8, r4
   83608:	461c      	mov	r4, r3
   8360a:	f8dd b008 	ldr.w	fp, [sp, #8]
   8360e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83610:	9305      	str	r3, [sp, #20]
   83612:	f7ff bab4 	b.w	82b7e <_dtoa_r+0x37e>
   83616:	46b9      	mov	r9, r7
   83618:	f7ff bb68 	b.w	82cec <_dtoa_r+0x4ec>
   8361c:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   83620:	d0c6      	beq.n	835b0 <_dtoa_r+0xdb0>
   83622:	f1ba 0f00 	cmp.w	sl, #0
   83626:	f77f aebc 	ble.w	833a2 <_dtoa_r+0xba2>
   8362a:	f105 0c31 	add.w	ip, r5, #49	; 0x31
   8362e:	e6b8      	b.n	833a2 <_dtoa_r+0xba2>
   83630:	f47f aeb7 	bne.w	833a2 <_dtoa_r+0xba2>
   83634:	f01c 0f01 	tst.w	ip, #1
   83638:	f43f aeb3 	beq.w	833a2 <_dtoa_r+0xba2>
   8363c:	e6ab      	b.n	83396 <_dtoa_r+0xb96>
   8363e:	f04f 0800 	mov.w	r8, #0
   83642:	4646      	mov	r6, r8
   83644:	e5a5      	b.n	83192 <_dtoa_r+0x992>
   83646:	9b22      	ldr	r3, [sp, #136]	; 0x88
   83648:	2b02      	cmp	r3, #2
   8364a:	dc04      	bgt.n	83656 <_dtoa_r+0xe56>
   8364c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8364e:	e5fe      	b.n	8324e <_dtoa_r+0xa4e>
   83650:	f04f 0802 	mov.w	r8, #2
   83654:	e4c4      	b.n	82fe0 <_dtoa_r+0x7e0>
   83656:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83658:	9307      	str	r3, [sp, #28]
   8365a:	e615      	b.n	83288 <_dtoa_r+0xa88>
   8365c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8365e:	2b02      	cmp	r3, #2
   83660:	dcf9      	bgt.n	83656 <_dtoa_r+0xe56>
   83662:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83664:	f7ff bbe5 	b.w	82e32 <_dtoa_r+0x632>
   83668:	2500      	movs	r5, #0
   8366a:	6465      	str	r5, [r4, #68]	; 0x44
   8366c:	4629      	mov	r1, r5
   8366e:	4620      	mov	r0, r4
   83670:	f000 fd06 	bl	84080 <_Balloc>
   83674:	f04f 33ff 	mov.w	r3, #4294967295
   83678:	9307      	str	r3, [sp, #28]
   8367a:	930d      	str	r3, [sp, #52]	; 0x34
   8367c:	2301      	movs	r3, #1
   8367e:	9008      	str	r0, [sp, #32]
   83680:	9523      	str	r5, [sp, #140]	; 0x8c
   83682:	6420      	str	r0, [r4, #64]	; 0x40
   83684:	930a      	str	r3, [sp, #40]	; 0x28
   83686:	f7ff b9cb 	b.w	82a20 <_dtoa_r+0x220>
   8368a:	f43f ab44 	beq.w	82d16 <_dtoa_r+0x516>
   8368e:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   83692:	f7ff bb3b 	b.w	82d0c <_dtoa_r+0x50c>
   83696:	2301      	movs	r3, #1
   83698:	930a      	str	r3, [sp, #40]	; 0x28
   8369a:	e555      	b.n	83148 <_dtoa_r+0x948>
   8369c:	2501      	movs	r5, #1
   8369e:	f7ff b989 	b.w	829b4 <_dtoa_r+0x1b4>
   836a2:	bf00      	nop

000836a4 <__libc_fini_array>:
   836a4:	b538      	push	{r3, r4, r5, lr}
   836a6:	4b08      	ldr	r3, [pc, #32]	; (836c8 <__libc_fini_array+0x24>)
   836a8:	4d08      	ldr	r5, [pc, #32]	; (836cc <__libc_fini_array+0x28>)
   836aa:	1aed      	subs	r5, r5, r3
   836ac:	10ac      	asrs	r4, r5, #2
   836ae:	bf18      	it	ne
   836b0:	18ed      	addne	r5, r5, r3
   836b2:	d005      	beq.n	836c0 <__libc_fini_array+0x1c>
   836b4:	3c01      	subs	r4, #1
   836b6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   836ba:	4798      	blx	r3
   836bc:	2c00      	cmp	r4, #0
   836be:	d1f9      	bne.n	836b4 <__libc_fini_array+0x10>
   836c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   836c4:	f002 bb46 	b.w	85d54 <_fini>
   836c8:	00085d60 	.word	0x00085d60
   836cc:	00085d64 	.word	0x00085d64

000836d0 <_malloc_trim_r>:
   836d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   836d2:	460c      	mov	r4, r1
   836d4:	4f22      	ldr	r7, [pc, #136]	; (83760 <_malloc_trim_r+0x90>)
   836d6:	4606      	mov	r6, r0
   836d8:	f000 fcce 	bl	84078 <__malloc_lock>
   836dc:	68bb      	ldr	r3, [r7, #8]
   836de:	685d      	ldr	r5, [r3, #4]
   836e0:	f025 0503 	bic.w	r5, r5, #3
   836e4:	1b29      	subs	r1, r5, r4
   836e6:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   836ea:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   836ee:	f021 010f 	bic.w	r1, r1, #15
   836f2:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   836f6:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   836fa:	db07      	blt.n	8370c <_malloc_trim_r+0x3c>
   836fc:	4630      	mov	r0, r6
   836fe:	2100      	movs	r1, #0
   83700:	f001 f9d8 	bl	84ab4 <_sbrk_r>
   83704:	68bb      	ldr	r3, [r7, #8]
   83706:	442b      	add	r3, r5
   83708:	4298      	cmp	r0, r3
   8370a:	d004      	beq.n	83716 <_malloc_trim_r+0x46>
   8370c:	4630      	mov	r0, r6
   8370e:	f000 fcb5 	bl	8407c <__malloc_unlock>
   83712:	2000      	movs	r0, #0
   83714:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83716:	4630      	mov	r0, r6
   83718:	4261      	negs	r1, r4
   8371a:	f001 f9cb 	bl	84ab4 <_sbrk_r>
   8371e:	3001      	adds	r0, #1
   83720:	d00d      	beq.n	8373e <_malloc_trim_r+0x6e>
   83722:	4b10      	ldr	r3, [pc, #64]	; (83764 <_malloc_trim_r+0x94>)
   83724:	68ba      	ldr	r2, [r7, #8]
   83726:	6819      	ldr	r1, [r3, #0]
   83728:	1b2d      	subs	r5, r5, r4
   8372a:	f045 0501 	orr.w	r5, r5, #1
   8372e:	4630      	mov	r0, r6
   83730:	1b09      	subs	r1, r1, r4
   83732:	6055      	str	r5, [r2, #4]
   83734:	6019      	str	r1, [r3, #0]
   83736:	f000 fca1 	bl	8407c <__malloc_unlock>
   8373a:	2001      	movs	r0, #1
   8373c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8373e:	4630      	mov	r0, r6
   83740:	2100      	movs	r1, #0
   83742:	f001 f9b7 	bl	84ab4 <_sbrk_r>
   83746:	68ba      	ldr	r2, [r7, #8]
   83748:	1a83      	subs	r3, r0, r2
   8374a:	2b0f      	cmp	r3, #15
   8374c:	ddde      	ble.n	8370c <_malloc_trim_r+0x3c>
   8374e:	4c06      	ldr	r4, [pc, #24]	; (83768 <_malloc_trim_r+0x98>)
   83750:	4904      	ldr	r1, [pc, #16]	; (83764 <_malloc_trim_r+0x94>)
   83752:	6824      	ldr	r4, [r4, #0]
   83754:	f043 0301 	orr.w	r3, r3, #1
   83758:	1b00      	subs	r0, r0, r4
   8375a:	6053      	str	r3, [r2, #4]
   8375c:	6008      	str	r0, [r1, #0]
   8375e:	e7d5      	b.n	8370c <_malloc_trim_r+0x3c>
   83760:	200705dc 	.word	0x200705dc
   83764:	20070ab0 	.word	0x20070ab0
   83768:	200709e8 	.word	0x200709e8

0008376c <_free_r>:
   8376c:	2900      	cmp	r1, #0
   8376e:	d04e      	beq.n	8380e <_free_r+0xa2>
   83770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83774:	460c      	mov	r4, r1
   83776:	4680      	mov	r8, r0
   83778:	f000 fc7e 	bl	84078 <__malloc_lock>
   8377c:	f854 7c04 	ldr.w	r7, [r4, #-4]
   83780:	4962      	ldr	r1, [pc, #392]	; (8390c <_free_r+0x1a0>)
   83782:	f1a4 0508 	sub.w	r5, r4, #8
   83786:	f027 0201 	bic.w	r2, r7, #1
   8378a:	18ab      	adds	r3, r5, r2
   8378c:	688e      	ldr	r6, [r1, #8]
   8378e:	6858      	ldr	r0, [r3, #4]
   83790:	429e      	cmp	r6, r3
   83792:	f020 0003 	bic.w	r0, r0, #3
   83796:	d05a      	beq.n	8384e <_free_r+0xe2>
   83798:	07fe      	lsls	r6, r7, #31
   8379a:	6058      	str	r0, [r3, #4]
   8379c:	d40b      	bmi.n	837b6 <_free_r+0x4a>
   8379e:	f854 7c08 	ldr.w	r7, [r4, #-8]
   837a2:	f101 0e08 	add.w	lr, r1, #8
   837a6:	1bed      	subs	r5, r5, r7
   837a8:	68ac      	ldr	r4, [r5, #8]
   837aa:	443a      	add	r2, r7
   837ac:	4574      	cmp	r4, lr
   837ae:	d067      	beq.n	83880 <_free_r+0x114>
   837b0:	68ef      	ldr	r7, [r5, #12]
   837b2:	60e7      	str	r7, [r4, #12]
   837b4:	60bc      	str	r4, [r7, #8]
   837b6:	181c      	adds	r4, r3, r0
   837b8:	6864      	ldr	r4, [r4, #4]
   837ba:	07e4      	lsls	r4, r4, #31
   837bc:	d40c      	bmi.n	837d8 <_free_r+0x6c>
   837be:	4f54      	ldr	r7, [pc, #336]	; (83910 <_free_r+0x1a4>)
   837c0:	689c      	ldr	r4, [r3, #8]
   837c2:	4402      	add	r2, r0
   837c4:	42bc      	cmp	r4, r7
   837c6:	d07c      	beq.n	838c2 <_free_r+0x156>
   837c8:	68d8      	ldr	r0, [r3, #12]
   837ca:	f042 0301 	orr.w	r3, r2, #1
   837ce:	60e0      	str	r0, [r4, #12]
   837d0:	6084      	str	r4, [r0, #8]
   837d2:	606b      	str	r3, [r5, #4]
   837d4:	50aa      	str	r2, [r5, r2]
   837d6:	e003      	b.n	837e0 <_free_r+0x74>
   837d8:	f042 0301 	orr.w	r3, r2, #1
   837dc:	606b      	str	r3, [r5, #4]
   837de:	50aa      	str	r2, [r5, r2]
   837e0:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   837e4:	d214      	bcs.n	83810 <_free_r+0xa4>
   837e6:	08d2      	lsrs	r2, r2, #3
   837e8:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
   837ec:	2401      	movs	r4, #1
   837ee:	6848      	ldr	r0, [r1, #4]
   837f0:	1092      	asrs	r2, r2, #2
   837f2:	fa04 f202 	lsl.w	r2, r4, r2
   837f6:	689c      	ldr	r4, [r3, #8]
   837f8:	4310      	orrs	r0, r2
   837fa:	60ac      	str	r4, [r5, #8]
   837fc:	60eb      	str	r3, [r5, #12]
   837fe:	6048      	str	r0, [r1, #4]
   83800:	609d      	str	r5, [r3, #8]
   83802:	60e5      	str	r5, [r4, #12]
   83804:	4640      	mov	r0, r8
   83806:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8380a:	f000 bc37 	b.w	8407c <__malloc_unlock>
   8380e:	4770      	bx	lr
   83810:	0a53      	lsrs	r3, r2, #9
   83812:	2b04      	cmp	r3, #4
   83814:	d847      	bhi.n	838a6 <_free_r+0x13a>
   83816:	0993      	lsrs	r3, r2, #6
   83818:	f103 0438 	add.w	r4, r3, #56	; 0x38
   8381c:	0060      	lsls	r0, r4, #1
   8381e:	eb01 0080 	add.w	r0, r1, r0, lsl #2
   83822:	6883      	ldr	r3, [r0, #8]
   83824:	4939      	ldr	r1, [pc, #228]	; (8390c <_free_r+0x1a0>)
   83826:	4283      	cmp	r3, r0
   83828:	d043      	beq.n	838b2 <_free_r+0x146>
   8382a:	6859      	ldr	r1, [r3, #4]
   8382c:	f021 0103 	bic.w	r1, r1, #3
   83830:	4291      	cmp	r1, r2
   83832:	d902      	bls.n	8383a <_free_r+0xce>
   83834:	689b      	ldr	r3, [r3, #8]
   83836:	4298      	cmp	r0, r3
   83838:	d1f7      	bne.n	8382a <_free_r+0xbe>
   8383a:	68da      	ldr	r2, [r3, #12]
   8383c:	60ea      	str	r2, [r5, #12]
   8383e:	60ab      	str	r3, [r5, #8]
   83840:	4640      	mov	r0, r8
   83842:	6095      	str	r5, [r2, #8]
   83844:	60dd      	str	r5, [r3, #12]
   83846:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8384a:	f000 bc17 	b.w	8407c <__malloc_unlock>
   8384e:	07ff      	lsls	r7, r7, #31
   83850:	4402      	add	r2, r0
   83852:	d407      	bmi.n	83864 <_free_r+0xf8>
   83854:	f854 4c08 	ldr.w	r4, [r4, #-8]
   83858:	1b2d      	subs	r5, r5, r4
   8385a:	68eb      	ldr	r3, [r5, #12]
   8385c:	68a8      	ldr	r0, [r5, #8]
   8385e:	4422      	add	r2, r4
   83860:	60c3      	str	r3, [r0, #12]
   83862:	6098      	str	r0, [r3, #8]
   83864:	4b2b      	ldr	r3, [pc, #172]	; (83914 <_free_r+0x1a8>)
   83866:	f042 0001 	orr.w	r0, r2, #1
   8386a:	681b      	ldr	r3, [r3, #0]
   8386c:	6068      	str	r0, [r5, #4]
   8386e:	429a      	cmp	r2, r3
   83870:	608d      	str	r5, [r1, #8]
   83872:	d3c7      	bcc.n	83804 <_free_r+0x98>
   83874:	4b28      	ldr	r3, [pc, #160]	; (83918 <_free_r+0x1ac>)
   83876:	4640      	mov	r0, r8
   83878:	6819      	ldr	r1, [r3, #0]
   8387a:	f7ff ff29 	bl	836d0 <_malloc_trim_r>
   8387e:	e7c1      	b.n	83804 <_free_r+0x98>
   83880:	1819      	adds	r1, r3, r0
   83882:	6849      	ldr	r1, [r1, #4]
   83884:	07c9      	lsls	r1, r1, #31
   83886:	d409      	bmi.n	8389c <_free_r+0x130>
   83888:	68d9      	ldr	r1, [r3, #12]
   8388a:	4402      	add	r2, r0
   8388c:	689b      	ldr	r3, [r3, #8]
   8388e:	f042 0001 	orr.w	r0, r2, #1
   83892:	60d9      	str	r1, [r3, #12]
   83894:	608b      	str	r3, [r1, #8]
   83896:	6068      	str	r0, [r5, #4]
   83898:	50aa      	str	r2, [r5, r2]
   8389a:	e7b3      	b.n	83804 <_free_r+0x98>
   8389c:	f042 0301 	orr.w	r3, r2, #1
   838a0:	606b      	str	r3, [r5, #4]
   838a2:	50aa      	str	r2, [r5, r2]
   838a4:	e7ae      	b.n	83804 <_free_r+0x98>
   838a6:	2b14      	cmp	r3, #20
   838a8:	d814      	bhi.n	838d4 <_free_r+0x168>
   838aa:	f103 045b 	add.w	r4, r3, #91	; 0x5b
   838ae:	0060      	lsls	r0, r4, #1
   838b0:	e7b5      	b.n	8381e <_free_r+0xb2>
   838b2:	684a      	ldr	r2, [r1, #4]
   838b4:	10a4      	asrs	r4, r4, #2
   838b6:	2001      	movs	r0, #1
   838b8:	40a0      	lsls	r0, r4
   838ba:	4302      	orrs	r2, r0
   838bc:	604a      	str	r2, [r1, #4]
   838be:	461a      	mov	r2, r3
   838c0:	e7bc      	b.n	8383c <_free_r+0xd0>
   838c2:	f042 0301 	orr.w	r3, r2, #1
   838c6:	614d      	str	r5, [r1, #20]
   838c8:	610d      	str	r5, [r1, #16]
   838ca:	60ec      	str	r4, [r5, #12]
   838cc:	60ac      	str	r4, [r5, #8]
   838ce:	606b      	str	r3, [r5, #4]
   838d0:	50aa      	str	r2, [r5, r2]
   838d2:	e797      	b.n	83804 <_free_r+0x98>
   838d4:	2b54      	cmp	r3, #84	; 0x54
   838d6:	d804      	bhi.n	838e2 <_free_r+0x176>
   838d8:	0b13      	lsrs	r3, r2, #12
   838da:	f103 046e 	add.w	r4, r3, #110	; 0x6e
   838de:	0060      	lsls	r0, r4, #1
   838e0:	e79d      	b.n	8381e <_free_r+0xb2>
   838e2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   838e6:	d804      	bhi.n	838f2 <_free_r+0x186>
   838e8:	0bd3      	lsrs	r3, r2, #15
   838ea:	f103 0477 	add.w	r4, r3, #119	; 0x77
   838ee:	0060      	lsls	r0, r4, #1
   838f0:	e795      	b.n	8381e <_free_r+0xb2>
   838f2:	f240 5054 	movw	r0, #1364	; 0x554
   838f6:	4283      	cmp	r3, r0
   838f8:	d804      	bhi.n	83904 <_free_r+0x198>
   838fa:	0c93      	lsrs	r3, r2, #18
   838fc:	f103 047c 	add.w	r4, r3, #124	; 0x7c
   83900:	0060      	lsls	r0, r4, #1
   83902:	e78c      	b.n	8381e <_free_r+0xb2>
   83904:	20fc      	movs	r0, #252	; 0xfc
   83906:	247e      	movs	r4, #126	; 0x7e
   83908:	e789      	b.n	8381e <_free_r+0xb2>
   8390a:	bf00      	nop
   8390c:	200705dc 	.word	0x200705dc
   83910:	200705e4 	.word	0x200705e4
   83914:	200709e4 	.word	0x200709e4
   83918:	20070aac 	.word	0x20070aac

0008391c <_localeconv_r>:
   8391c:	4800      	ldr	r0, [pc, #0]	; (83920 <_localeconv_r+0x4>)
   8391e:	4770      	bx	lr
   83920:	200705a4 	.word	0x200705a4

00083924 <_malloc_r>:
   83924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83928:	f101 050b 	add.w	r5, r1, #11
   8392c:	2d16      	cmp	r5, #22
   8392e:	b083      	sub	sp, #12
   83930:	4606      	mov	r6, r0
   83932:	d927      	bls.n	83984 <_malloc_r+0x60>
   83934:	f035 0507 	bics.w	r5, r5, #7
   83938:	f100 80b6 	bmi.w	83aa8 <_malloc_r+0x184>
   8393c:	42a9      	cmp	r1, r5
   8393e:	f200 80b3 	bhi.w	83aa8 <_malloc_r+0x184>
   83942:	f000 fb99 	bl	84078 <__malloc_lock>
   83946:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   8394a:	d222      	bcs.n	83992 <_malloc_r+0x6e>
   8394c:	4fbc      	ldr	r7, [pc, #752]	; (83c40 <_malloc_r+0x31c>)
   8394e:	08e8      	lsrs	r0, r5, #3
   83950:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
   83954:	68dc      	ldr	r4, [r3, #12]
   83956:	429c      	cmp	r4, r3
   83958:	f000 81bc 	beq.w	83cd4 <_malloc_r+0x3b0>
   8395c:	6863      	ldr	r3, [r4, #4]
   8395e:	68e1      	ldr	r1, [r4, #12]
   83960:	f023 0303 	bic.w	r3, r3, #3
   83964:	4423      	add	r3, r4
   83966:	685a      	ldr	r2, [r3, #4]
   83968:	68a5      	ldr	r5, [r4, #8]
   8396a:	f042 0201 	orr.w	r2, r2, #1
   8396e:	60e9      	str	r1, [r5, #12]
   83970:	4630      	mov	r0, r6
   83972:	608d      	str	r5, [r1, #8]
   83974:	605a      	str	r2, [r3, #4]
   83976:	f000 fb81 	bl	8407c <__malloc_unlock>
   8397a:	3408      	adds	r4, #8
   8397c:	4620      	mov	r0, r4
   8397e:	b003      	add	sp, #12
   83980:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83984:	2910      	cmp	r1, #16
   83986:	f200 808f 	bhi.w	83aa8 <_malloc_r+0x184>
   8398a:	f000 fb75 	bl	84078 <__malloc_lock>
   8398e:	2510      	movs	r5, #16
   83990:	e7dc      	b.n	8394c <_malloc_r+0x28>
   83992:	0a68      	lsrs	r0, r5, #9
   83994:	f000 808f 	beq.w	83ab6 <_malloc_r+0x192>
   83998:	2804      	cmp	r0, #4
   8399a:	f200 8147 	bhi.w	83c2c <_malloc_r+0x308>
   8399e:	09a8      	lsrs	r0, r5, #6
   839a0:	3038      	adds	r0, #56	; 0x38
   839a2:	0041      	lsls	r1, r0, #1
   839a4:	4fa6      	ldr	r7, [pc, #664]	; (83c40 <_malloc_r+0x31c>)
   839a6:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   839aa:	68cc      	ldr	r4, [r1, #12]
   839ac:	42a1      	cmp	r1, r4
   839ae:	d106      	bne.n	839be <_malloc_r+0x9a>
   839b0:	e00c      	b.n	839cc <_malloc_r+0xa8>
   839b2:	2a00      	cmp	r2, #0
   839b4:	f280 8082 	bge.w	83abc <_malloc_r+0x198>
   839b8:	68e4      	ldr	r4, [r4, #12]
   839ba:	42a1      	cmp	r1, r4
   839bc:	d006      	beq.n	839cc <_malloc_r+0xa8>
   839be:	6863      	ldr	r3, [r4, #4]
   839c0:	f023 0303 	bic.w	r3, r3, #3
   839c4:	1b5a      	subs	r2, r3, r5
   839c6:	2a0f      	cmp	r2, #15
   839c8:	ddf3      	ble.n	839b2 <_malloc_r+0x8e>
   839ca:	3801      	subs	r0, #1
   839cc:	3001      	adds	r0, #1
   839ce:	499c      	ldr	r1, [pc, #624]	; (83c40 <_malloc_r+0x31c>)
   839d0:	693c      	ldr	r4, [r7, #16]
   839d2:	f101 0e08 	add.w	lr, r1, #8
   839d6:	4574      	cmp	r4, lr
   839d8:	f000 8171 	beq.w	83cbe <_malloc_r+0x39a>
   839dc:	6863      	ldr	r3, [r4, #4]
   839de:	f023 0303 	bic.w	r3, r3, #3
   839e2:	1b5a      	subs	r2, r3, r5
   839e4:	2a0f      	cmp	r2, #15
   839e6:	f300 8157 	bgt.w	83c98 <_malloc_r+0x374>
   839ea:	2a00      	cmp	r2, #0
   839ec:	f8c1 e014 	str.w	lr, [r1, #20]
   839f0:	f8c1 e010 	str.w	lr, [r1, #16]
   839f4:	da66      	bge.n	83ac4 <_malloc_r+0x1a0>
   839f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   839fa:	f080 812d 	bcs.w	83c58 <_malloc_r+0x334>
   839fe:	08db      	lsrs	r3, r3, #3
   83a00:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
   83a04:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   83a08:	684a      	ldr	r2, [r1, #4]
   83a0a:	2301      	movs	r3, #1
   83a0c:	fa03 f30c 	lsl.w	r3, r3, ip
   83a10:	f8d8 c008 	ldr.w	ip, [r8, #8]
   83a14:	4313      	orrs	r3, r2
   83a16:	f8c4 c008 	str.w	ip, [r4, #8]
   83a1a:	f8c4 800c 	str.w	r8, [r4, #12]
   83a1e:	604b      	str	r3, [r1, #4]
   83a20:	f8c8 4008 	str.w	r4, [r8, #8]
   83a24:	f8cc 400c 	str.w	r4, [ip, #12]
   83a28:	1082      	asrs	r2, r0, #2
   83a2a:	2401      	movs	r4, #1
   83a2c:	4094      	lsls	r4, r2
   83a2e:	429c      	cmp	r4, r3
   83a30:	d855      	bhi.n	83ade <_malloc_r+0x1ba>
   83a32:	4223      	tst	r3, r4
   83a34:	d106      	bne.n	83a44 <_malloc_r+0x120>
   83a36:	f020 0003 	bic.w	r0, r0, #3
   83a3a:	0064      	lsls	r4, r4, #1
   83a3c:	4223      	tst	r3, r4
   83a3e:	f100 0004 	add.w	r0, r0, #4
   83a42:	d0fa      	beq.n	83a3a <_malloc_r+0x116>
   83a44:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
   83a48:	46c4      	mov	ip, r8
   83a4a:	4681      	mov	r9, r0
   83a4c:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83a50:	459c      	cmp	ip, r3
   83a52:	d107      	bne.n	83a64 <_malloc_r+0x140>
   83a54:	e135      	b.n	83cc2 <_malloc_r+0x39e>
   83a56:	2900      	cmp	r1, #0
   83a58:	f280 8145 	bge.w	83ce6 <_malloc_r+0x3c2>
   83a5c:	68db      	ldr	r3, [r3, #12]
   83a5e:	459c      	cmp	ip, r3
   83a60:	f000 812f 	beq.w	83cc2 <_malloc_r+0x39e>
   83a64:	685a      	ldr	r2, [r3, #4]
   83a66:	f022 0203 	bic.w	r2, r2, #3
   83a6a:	1b51      	subs	r1, r2, r5
   83a6c:	290f      	cmp	r1, #15
   83a6e:	ddf2      	ble.n	83a56 <_malloc_r+0x132>
   83a70:	461c      	mov	r4, r3
   83a72:	68da      	ldr	r2, [r3, #12]
   83a74:	f854 cf08 	ldr.w	ip, [r4, #8]!
   83a78:	f045 0901 	orr.w	r9, r5, #1
   83a7c:	f041 0801 	orr.w	r8, r1, #1
   83a80:	441d      	add	r5, r3
   83a82:	f8c3 9004 	str.w	r9, [r3, #4]
   83a86:	4630      	mov	r0, r6
   83a88:	f8cc 200c 	str.w	r2, [ip, #12]
   83a8c:	f8c2 c008 	str.w	ip, [r2, #8]
   83a90:	617d      	str	r5, [r7, #20]
   83a92:	613d      	str	r5, [r7, #16]
   83a94:	f8c5 e00c 	str.w	lr, [r5, #12]
   83a98:	f8c5 e008 	str.w	lr, [r5, #8]
   83a9c:	f8c5 8004 	str.w	r8, [r5, #4]
   83aa0:	5069      	str	r1, [r5, r1]
   83aa2:	f000 faeb 	bl	8407c <__malloc_unlock>
   83aa6:	e769      	b.n	8397c <_malloc_r+0x58>
   83aa8:	2400      	movs	r4, #0
   83aaa:	4620      	mov	r0, r4
   83aac:	230c      	movs	r3, #12
   83aae:	6033      	str	r3, [r6, #0]
   83ab0:	b003      	add	sp, #12
   83ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ab6:	217e      	movs	r1, #126	; 0x7e
   83ab8:	203f      	movs	r0, #63	; 0x3f
   83aba:	e773      	b.n	839a4 <_malloc_r+0x80>
   83abc:	4423      	add	r3, r4
   83abe:	685a      	ldr	r2, [r3, #4]
   83ac0:	68e1      	ldr	r1, [r4, #12]
   83ac2:	e751      	b.n	83968 <_malloc_r+0x44>
   83ac4:	4423      	add	r3, r4
   83ac6:	685a      	ldr	r2, [r3, #4]
   83ac8:	4630      	mov	r0, r6
   83aca:	f042 0201 	orr.w	r2, r2, #1
   83ace:	605a      	str	r2, [r3, #4]
   83ad0:	3408      	adds	r4, #8
   83ad2:	f000 fad3 	bl	8407c <__malloc_unlock>
   83ad6:	4620      	mov	r0, r4
   83ad8:	b003      	add	sp, #12
   83ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ade:	68bc      	ldr	r4, [r7, #8]
   83ae0:	6863      	ldr	r3, [r4, #4]
   83ae2:	f023 0803 	bic.w	r8, r3, #3
   83ae6:	4545      	cmp	r5, r8
   83ae8:	d804      	bhi.n	83af4 <_malloc_r+0x1d0>
   83aea:	ebc5 0308 	rsb	r3, r5, r8
   83aee:	2b0f      	cmp	r3, #15
   83af0:	f300 808c 	bgt.w	83c0c <_malloc_r+0x2e8>
   83af4:	4b53      	ldr	r3, [pc, #332]	; (83c44 <_malloc_r+0x320>)
   83af6:	f8df a15c 	ldr.w	sl, [pc, #348]	; 83c54 <_malloc_r+0x330>
   83afa:	681a      	ldr	r2, [r3, #0]
   83afc:	f8da 3000 	ldr.w	r3, [sl]
   83b00:	442a      	add	r2, r5
   83b02:	3301      	adds	r3, #1
   83b04:	eb04 0b08 	add.w	fp, r4, r8
   83b08:	f000 8151 	beq.w	83dae <_malloc_r+0x48a>
   83b0c:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
   83b10:	320f      	adds	r2, #15
   83b12:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
   83b16:	f022 020f 	bic.w	r2, r2, #15
   83b1a:	4611      	mov	r1, r2
   83b1c:	4630      	mov	r0, r6
   83b1e:	9201      	str	r2, [sp, #4]
   83b20:	f000 ffc8 	bl	84ab4 <_sbrk_r>
   83b24:	f1b0 3fff 	cmp.w	r0, #4294967295
   83b28:	4681      	mov	r9, r0
   83b2a:	9a01      	ldr	r2, [sp, #4]
   83b2c:	f000 8148 	beq.w	83dc0 <_malloc_r+0x49c>
   83b30:	4583      	cmp	fp, r0
   83b32:	f200 80ef 	bhi.w	83d14 <_malloc_r+0x3f0>
   83b36:	4b44      	ldr	r3, [pc, #272]	; (83c48 <_malloc_r+0x324>)
   83b38:	45cb      	cmp	fp, r9
   83b3a:	6819      	ldr	r1, [r3, #0]
   83b3c:	4411      	add	r1, r2
   83b3e:	6019      	str	r1, [r3, #0]
   83b40:	f000 8143 	beq.w	83dca <_malloc_r+0x4a6>
   83b44:	f8da 0000 	ldr.w	r0, [sl]
   83b48:	f8df e108 	ldr.w	lr, [pc, #264]	; 83c54 <_malloc_r+0x330>
   83b4c:	3001      	adds	r0, #1
   83b4e:	bf1b      	ittet	ne
   83b50:	ebcb 0b09 	rsbne	fp, fp, r9
   83b54:	4459      	addne	r1, fp
   83b56:	f8ce 9000 	streq.w	r9, [lr]
   83b5a:	6019      	strne	r1, [r3, #0]
   83b5c:	f019 0107 	ands.w	r1, r9, #7
   83b60:	f000 8108 	beq.w	83d74 <_malloc_r+0x450>
   83b64:	f1c1 0008 	rsb	r0, r1, #8
   83b68:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   83b6c:	4481      	add	r9, r0
   83b6e:	3108      	adds	r1, #8
   83b70:	444a      	add	r2, r9
   83b72:	f3c2 020b 	ubfx	r2, r2, #0, #12
   83b76:	ebc2 0a01 	rsb	sl, r2, r1
   83b7a:	4651      	mov	r1, sl
   83b7c:	4630      	mov	r0, r6
   83b7e:	9301      	str	r3, [sp, #4]
   83b80:	f000 ff98 	bl	84ab4 <_sbrk_r>
   83b84:	1c43      	adds	r3, r0, #1
   83b86:	9b01      	ldr	r3, [sp, #4]
   83b88:	f000 812d 	beq.w	83de6 <_malloc_r+0x4c2>
   83b8c:	ebc9 0200 	rsb	r2, r9, r0
   83b90:	4452      	add	r2, sl
   83b92:	f042 0201 	orr.w	r2, r2, #1
   83b96:	6819      	ldr	r1, [r3, #0]
   83b98:	42bc      	cmp	r4, r7
   83b9a:	4451      	add	r1, sl
   83b9c:	f8c7 9008 	str.w	r9, [r7, #8]
   83ba0:	6019      	str	r1, [r3, #0]
   83ba2:	f8c9 2004 	str.w	r2, [r9, #4]
   83ba6:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 83c48 <_malloc_r+0x324>
   83baa:	d016      	beq.n	83bda <_malloc_r+0x2b6>
   83bac:	f1b8 0f0f 	cmp.w	r8, #15
   83bb0:	f240 80ef 	bls.w	83d92 <_malloc_r+0x46e>
   83bb4:	6862      	ldr	r2, [r4, #4]
   83bb6:	f1a8 030c 	sub.w	r3, r8, #12
   83bba:	f023 0307 	bic.w	r3, r3, #7
   83bbe:	f002 0201 	and.w	r2, r2, #1
   83bc2:	18e0      	adds	r0, r4, r3
   83bc4:	f04f 0e05 	mov.w	lr, #5
   83bc8:	431a      	orrs	r2, r3
   83bca:	2b0f      	cmp	r3, #15
   83bcc:	6062      	str	r2, [r4, #4]
   83bce:	f8c0 e004 	str.w	lr, [r0, #4]
   83bd2:	f8c0 e008 	str.w	lr, [r0, #8]
   83bd6:	f200 810a 	bhi.w	83dee <_malloc_r+0x4ca>
   83bda:	4b1c      	ldr	r3, [pc, #112]	; (83c4c <_malloc_r+0x328>)
   83bdc:	68bc      	ldr	r4, [r7, #8]
   83bde:	681a      	ldr	r2, [r3, #0]
   83be0:	4291      	cmp	r1, r2
   83be2:	bf88      	it	hi
   83be4:	6019      	strhi	r1, [r3, #0]
   83be6:	4b1a      	ldr	r3, [pc, #104]	; (83c50 <_malloc_r+0x32c>)
   83be8:	681a      	ldr	r2, [r3, #0]
   83bea:	4291      	cmp	r1, r2
   83bec:	6862      	ldr	r2, [r4, #4]
   83bee:	bf88      	it	hi
   83bf0:	6019      	strhi	r1, [r3, #0]
   83bf2:	f022 0203 	bic.w	r2, r2, #3
   83bf6:	4295      	cmp	r5, r2
   83bf8:	eba2 0305 	sub.w	r3, r2, r5
   83bfc:	d801      	bhi.n	83c02 <_malloc_r+0x2de>
   83bfe:	2b0f      	cmp	r3, #15
   83c00:	dc04      	bgt.n	83c0c <_malloc_r+0x2e8>
   83c02:	4630      	mov	r0, r6
   83c04:	f000 fa3a 	bl	8407c <__malloc_unlock>
   83c08:	2400      	movs	r4, #0
   83c0a:	e6b7      	b.n	8397c <_malloc_r+0x58>
   83c0c:	f045 0201 	orr.w	r2, r5, #1
   83c10:	f043 0301 	orr.w	r3, r3, #1
   83c14:	4425      	add	r5, r4
   83c16:	6062      	str	r2, [r4, #4]
   83c18:	4630      	mov	r0, r6
   83c1a:	60bd      	str	r5, [r7, #8]
   83c1c:	3408      	adds	r4, #8
   83c1e:	606b      	str	r3, [r5, #4]
   83c20:	f000 fa2c 	bl	8407c <__malloc_unlock>
   83c24:	4620      	mov	r0, r4
   83c26:	b003      	add	sp, #12
   83c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83c2c:	2814      	cmp	r0, #20
   83c2e:	d969      	bls.n	83d04 <_malloc_r+0x3e0>
   83c30:	2854      	cmp	r0, #84	; 0x54
   83c32:	f200 8098 	bhi.w	83d66 <_malloc_r+0x442>
   83c36:	0b28      	lsrs	r0, r5, #12
   83c38:	306e      	adds	r0, #110	; 0x6e
   83c3a:	0041      	lsls	r1, r0, #1
   83c3c:	e6b2      	b.n	839a4 <_malloc_r+0x80>
   83c3e:	bf00      	nop
   83c40:	200705dc 	.word	0x200705dc
   83c44:	20070aac 	.word	0x20070aac
   83c48:	20070ab0 	.word	0x20070ab0
   83c4c:	20070aa8 	.word	0x20070aa8
   83c50:	20070aa4 	.word	0x20070aa4
   83c54:	200709e8 	.word	0x200709e8
   83c58:	0a5a      	lsrs	r2, r3, #9
   83c5a:	2a04      	cmp	r2, #4
   83c5c:	d955      	bls.n	83d0a <_malloc_r+0x3e6>
   83c5e:	2a14      	cmp	r2, #20
   83c60:	f200 80a7 	bhi.w	83db2 <_malloc_r+0x48e>
   83c64:	325b      	adds	r2, #91	; 0x5b
   83c66:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83c6a:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
   83c6e:	f8dc 1008 	ldr.w	r1, [ip, #8]
   83c72:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 83e2c <_malloc_r+0x508>
   83c76:	4561      	cmp	r1, ip
   83c78:	d07f      	beq.n	83d7a <_malloc_r+0x456>
   83c7a:	684a      	ldr	r2, [r1, #4]
   83c7c:	f022 0203 	bic.w	r2, r2, #3
   83c80:	4293      	cmp	r3, r2
   83c82:	d202      	bcs.n	83c8a <_malloc_r+0x366>
   83c84:	6889      	ldr	r1, [r1, #8]
   83c86:	458c      	cmp	ip, r1
   83c88:	d1f7      	bne.n	83c7a <_malloc_r+0x356>
   83c8a:	68ca      	ldr	r2, [r1, #12]
   83c8c:	687b      	ldr	r3, [r7, #4]
   83c8e:	60e2      	str	r2, [r4, #12]
   83c90:	60a1      	str	r1, [r4, #8]
   83c92:	6094      	str	r4, [r2, #8]
   83c94:	60cc      	str	r4, [r1, #12]
   83c96:	e6c7      	b.n	83a28 <_malloc_r+0x104>
   83c98:	f045 0701 	orr.w	r7, r5, #1
   83c9c:	f042 0301 	orr.w	r3, r2, #1
   83ca0:	4425      	add	r5, r4
   83ca2:	6067      	str	r7, [r4, #4]
   83ca4:	4630      	mov	r0, r6
   83ca6:	614d      	str	r5, [r1, #20]
   83ca8:	610d      	str	r5, [r1, #16]
   83caa:	f8c5 e00c 	str.w	lr, [r5, #12]
   83cae:	f8c5 e008 	str.w	lr, [r5, #8]
   83cb2:	606b      	str	r3, [r5, #4]
   83cb4:	50aa      	str	r2, [r5, r2]
   83cb6:	3408      	adds	r4, #8
   83cb8:	f000 f9e0 	bl	8407c <__malloc_unlock>
   83cbc:	e65e      	b.n	8397c <_malloc_r+0x58>
   83cbe:	684b      	ldr	r3, [r1, #4]
   83cc0:	e6b2      	b.n	83a28 <_malloc_r+0x104>
   83cc2:	f109 0901 	add.w	r9, r9, #1
   83cc6:	f019 0f03 	tst.w	r9, #3
   83cca:	f10c 0c08 	add.w	ip, ip, #8
   83cce:	f47f aebd 	bne.w	83a4c <_malloc_r+0x128>
   83cd2:	e02c      	b.n	83d2e <_malloc_r+0x40a>
   83cd4:	f104 0308 	add.w	r3, r4, #8
   83cd8:	6964      	ldr	r4, [r4, #20]
   83cda:	42a3      	cmp	r3, r4
   83cdc:	bf08      	it	eq
   83cde:	3002      	addeq	r0, #2
   83ce0:	f43f ae75 	beq.w	839ce <_malloc_r+0xaa>
   83ce4:	e63a      	b.n	8395c <_malloc_r+0x38>
   83ce6:	461c      	mov	r4, r3
   83ce8:	441a      	add	r2, r3
   83cea:	6851      	ldr	r1, [r2, #4]
   83cec:	68db      	ldr	r3, [r3, #12]
   83cee:	f854 5f08 	ldr.w	r5, [r4, #8]!
   83cf2:	f041 0101 	orr.w	r1, r1, #1
   83cf6:	6051      	str	r1, [r2, #4]
   83cf8:	4630      	mov	r0, r6
   83cfa:	60eb      	str	r3, [r5, #12]
   83cfc:	609d      	str	r5, [r3, #8]
   83cfe:	f000 f9bd 	bl	8407c <__malloc_unlock>
   83d02:	e63b      	b.n	8397c <_malloc_r+0x58>
   83d04:	305b      	adds	r0, #91	; 0x5b
   83d06:	0041      	lsls	r1, r0, #1
   83d08:	e64c      	b.n	839a4 <_malloc_r+0x80>
   83d0a:	099a      	lsrs	r2, r3, #6
   83d0c:	3238      	adds	r2, #56	; 0x38
   83d0e:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83d12:	e7aa      	b.n	83c6a <_malloc_r+0x346>
   83d14:	42bc      	cmp	r4, r7
   83d16:	4b45      	ldr	r3, [pc, #276]	; (83e2c <_malloc_r+0x508>)
   83d18:	f43f af0d 	beq.w	83b36 <_malloc_r+0x212>
   83d1c:	689c      	ldr	r4, [r3, #8]
   83d1e:	6862      	ldr	r2, [r4, #4]
   83d20:	f022 0203 	bic.w	r2, r2, #3
   83d24:	e767      	b.n	83bf6 <_malloc_r+0x2d2>
   83d26:	f8d8 8000 	ldr.w	r8, [r8]
   83d2a:	4598      	cmp	r8, r3
   83d2c:	d17c      	bne.n	83e28 <_malloc_r+0x504>
   83d2e:	f010 0f03 	tst.w	r0, #3
   83d32:	f1a8 0308 	sub.w	r3, r8, #8
   83d36:	f100 30ff 	add.w	r0, r0, #4294967295
   83d3a:	d1f4      	bne.n	83d26 <_malloc_r+0x402>
   83d3c:	687b      	ldr	r3, [r7, #4]
   83d3e:	ea23 0304 	bic.w	r3, r3, r4
   83d42:	607b      	str	r3, [r7, #4]
   83d44:	0064      	lsls	r4, r4, #1
   83d46:	429c      	cmp	r4, r3
   83d48:	f63f aec9 	bhi.w	83ade <_malloc_r+0x1ba>
   83d4c:	2c00      	cmp	r4, #0
   83d4e:	f43f aec6 	beq.w	83ade <_malloc_r+0x1ba>
   83d52:	4223      	tst	r3, r4
   83d54:	4648      	mov	r0, r9
   83d56:	f47f ae75 	bne.w	83a44 <_malloc_r+0x120>
   83d5a:	0064      	lsls	r4, r4, #1
   83d5c:	4223      	tst	r3, r4
   83d5e:	f100 0004 	add.w	r0, r0, #4
   83d62:	d0fa      	beq.n	83d5a <_malloc_r+0x436>
   83d64:	e66e      	b.n	83a44 <_malloc_r+0x120>
   83d66:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
   83d6a:	d818      	bhi.n	83d9e <_malloc_r+0x47a>
   83d6c:	0be8      	lsrs	r0, r5, #15
   83d6e:	3077      	adds	r0, #119	; 0x77
   83d70:	0041      	lsls	r1, r0, #1
   83d72:	e617      	b.n	839a4 <_malloc_r+0x80>
   83d74:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   83d78:	e6fa      	b.n	83b70 <_malloc_r+0x24c>
   83d7a:	f8d8 3004 	ldr.w	r3, [r8, #4]
   83d7e:	1092      	asrs	r2, r2, #2
   83d80:	f04f 0c01 	mov.w	ip, #1
   83d84:	fa0c f202 	lsl.w	r2, ip, r2
   83d88:	4313      	orrs	r3, r2
   83d8a:	f8c8 3004 	str.w	r3, [r8, #4]
   83d8e:	460a      	mov	r2, r1
   83d90:	e77d      	b.n	83c8e <_malloc_r+0x36a>
   83d92:	2301      	movs	r3, #1
   83d94:	f8c9 3004 	str.w	r3, [r9, #4]
   83d98:	464c      	mov	r4, r9
   83d9a:	2200      	movs	r2, #0
   83d9c:	e72b      	b.n	83bf6 <_malloc_r+0x2d2>
   83d9e:	f240 5354 	movw	r3, #1364	; 0x554
   83da2:	4298      	cmp	r0, r3
   83da4:	d81c      	bhi.n	83de0 <_malloc_r+0x4bc>
   83da6:	0ca8      	lsrs	r0, r5, #18
   83da8:	307c      	adds	r0, #124	; 0x7c
   83daa:	0041      	lsls	r1, r0, #1
   83dac:	e5fa      	b.n	839a4 <_malloc_r+0x80>
   83dae:	3210      	adds	r2, #16
   83db0:	e6b3      	b.n	83b1a <_malloc_r+0x1f6>
   83db2:	2a54      	cmp	r2, #84	; 0x54
   83db4:	d823      	bhi.n	83dfe <_malloc_r+0x4da>
   83db6:	0b1a      	lsrs	r2, r3, #12
   83db8:	326e      	adds	r2, #110	; 0x6e
   83dba:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83dbe:	e754      	b.n	83c6a <_malloc_r+0x346>
   83dc0:	68bc      	ldr	r4, [r7, #8]
   83dc2:	6862      	ldr	r2, [r4, #4]
   83dc4:	f022 0203 	bic.w	r2, r2, #3
   83dc8:	e715      	b.n	83bf6 <_malloc_r+0x2d2>
   83dca:	f3cb 000b 	ubfx	r0, fp, #0, #12
   83dce:	2800      	cmp	r0, #0
   83dd0:	f47f aeb8 	bne.w	83b44 <_malloc_r+0x220>
   83dd4:	4442      	add	r2, r8
   83dd6:	68bb      	ldr	r3, [r7, #8]
   83dd8:	f042 0201 	orr.w	r2, r2, #1
   83ddc:	605a      	str	r2, [r3, #4]
   83dde:	e6fc      	b.n	83bda <_malloc_r+0x2b6>
   83de0:	21fc      	movs	r1, #252	; 0xfc
   83de2:	207e      	movs	r0, #126	; 0x7e
   83de4:	e5de      	b.n	839a4 <_malloc_r+0x80>
   83de6:	2201      	movs	r2, #1
   83de8:	f04f 0a00 	mov.w	sl, #0
   83dec:	e6d3      	b.n	83b96 <_malloc_r+0x272>
   83dee:	f104 0108 	add.w	r1, r4, #8
   83df2:	4630      	mov	r0, r6
   83df4:	f7ff fcba 	bl	8376c <_free_r>
   83df8:	f8da 1000 	ldr.w	r1, [sl]
   83dfc:	e6ed      	b.n	83bda <_malloc_r+0x2b6>
   83dfe:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   83e02:	d804      	bhi.n	83e0e <_malloc_r+0x4ea>
   83e04:	0bda      	lsrs	r2, r3, #15
   83e06:	3277      	adds	r2, #119	; 0x77
   83e08:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83e0c:	e72d      	b.n	83c6a <_malloc_r+0x346>
   83e0e:	f240 5154 	movw	r1, #1364	; 0x554
   83e12:	428a      	cmp	r2, r1
   83e14:	d804      	bhi.n	83e20 <_malloc_r+0x4fc>
   83e16:	0c9a      	lsrs	r2, r3, #18
   83e18:	327c      	adds	r2, #124	; 0x7c
   83e1a:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83e1e:	e724      	b.n	83c6a <_malloc_r+0x346>
   83e20:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
   83e24:	227e      	movs	r2, #126	; 0x7e
   83e26:	e720      	b.n	83c6a <_malloc_r+0x346>
   83e28:	687b      	ldr	r3, [r7, #4]
   83e2a:	e78b      	b.n	83d44 <_malloc_r+0x420>
   83e2c:	200705dc 	.word	0x200705dc

00083e30 <memchr>:
   83e30:	0783      	lsls	r3, r0, #30
   83e32:	b470      	push	{r4, r5, r6}
   83e34:	b2c9      	uxtb	r1, r1
   83e36:	d040      	beq.n	83eba <memchr+0x8a>
   83e38:	1e54      	subs	r4, r2, #1
   83e3a:	2a00      	cmp	r2, #0
   83e3c:	d03f      	beq.n	83ebe <memchr+0x8e>
   83e3e:	7803      	ldrb	r3, [r0, #0]
   83e40:	428b      	cmp	r3, r1
   83e42:	bf18      	it	ne
   83e44:	1c43      	addne	r3, r0, #1
   83e46:	d105      	bne.n	83e54 <memchr+0x24>
   83e48:	e01c      	b.n	83e84 <memchr+0x54>
   83e4a:	b1ec      	cbz	r4, 83e88 <memchr+0x58>
   83e4c:	7802      	ldrb	r2, [r0, #0]
   83e4e:	3c01      	subs	r4, #1
   83e50:	428a      	cmp	r2, r1
   83e52:	d017      	beq.n	83e84 <memchr+0x54>
   83e54:	f013 0f03 	tst.w	r3, #3
   83e58:	4618      	mov	r0, r3
   83e5a:	f103 0301 	add.w	r3, r3, #1
   83e5e:	d1f4      	bne.n	83e4a <memchr+0x1a>
   83e60:	2c03      	cmp	r4, #3
   83e62:	d814      	bhi.n	83e8e <memchr+0x5e>
   83e64:	b184      	cbz	r4, 83e88 <memchr+0x58>
   83e66:	7803      	ldrb	r3, [r0, #0]
   83e68:	428b      	cmp	r3, r1
   83e6a:	d00b      	beq.n	83e84 <memchr+0x54>
   83e6c:	1905      	adds	r5, r0, r4
   83e6e:	1c43      	adds	r3, r0, #1
   83e70:	e002      	b.n	83e78 <memchr+0x48>
   83e72:	7802      	ldrb	r2, [r0, #0]
   83e74:	428a      	cmp	r2, r1
   83e76:	d005      	beq.n	83e84 <memchr+0x54>
   83e78:	42ab      	cmp	r3, r5
   83e7a:	4618      	mov	r0, r3
   83e7c:	f103 0301 	add.w	r3, r3, #1
   83e80:	d1f7      	bne.n	83e72 <memchr+0x42>
   83e82:	2000      	movs	r0, #0
   83e84:	bc70      	pop	{r4, r5, r6}
   83e86:	4770      	bx	lr
   83e88:	4620      	mov	r0, r4
   83e8a:	bc70      	pop	{r4, r5, r6}
   83e8c:	4770      	bx	lr
   83e8e:	4602      	mov	r2, r0
   83e90:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   83e94:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   83e98:	6813      	ldr	r3, [r2, #0]
   83e9a:	4610      	mov	r0, r2
   83e9c:	4073      	eors	r3, r6
   83e9e:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
   83ea2:	ea25 0303 	bic.w	r3, r5, r3
   83ea6:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   83eaa:	f102 0204 	add.w	r2, r2, #4
   83eae:	d1d9      	bne.n	83e64 <memchr+0x34>
   83eb0:	3c04      	subs	r4, #4
   83eb2:	2c03      	cmp	r4, #3
   83eb4:	4610      	mov	r0, r2
   83eb6:	d8ef      	bhi.n	83e98 <memchr+0x68>
   83eb8:	e7d4      	b.n	83e64 <memchr+0x34>
   83eba:	4614      	mov	r4, r2
   83ebc:	e7d0      	b.n	83e60 <memchr+0x30>
   83ebe:	4610      	mov	r0, r2
   83ec0:	e7e0      	b.n	83e84 <memchr+0x54>
   83ec2:	bf00      	nop

00083ec4 <memcpy>:
   83ec4:	4684      	mov	ip, r0
   83ec6:	ea41 0300 	orr.w	r3, r1, r0
   83eca:	f013 0303 	ands.w	r3, r3, #3
   83ece:	d149      	bne.n	83f64 <memcpy+0xa0>
   83ed0:	3a40      	subs	r2, #64	; 0x40
   83ed2:	d323      	bcc.n	83f1c <memcpy+0x58>
   83ed4:	680b      	ldr	r3, [r1, #0]
   83ed6:	6003      	str	r3, [r0, #0]
   83ed8:	684b      	ldr	r3, [r1, #4]
   83eda:	6043      	str	r3, [r0, #4]
   83edc:	688b      	ldr	r3, [r1, #8]
   83ede:	6083      	str	r3, [r0, #8]
   83ee0:	68cb      	ldr	r3, [r1, #12]
   83ee2:	60c3      	str	r3, [r0, #12]
   83ee4:	690b      	ldr	r3, [r1, #16]
   83ee6:	6103      	str	r3, [r0, #16]
   83ee8:	694b      	ldr	r3, [r1, #20]
   83eea:	6143      	str	r3, [r0, #20]
   83eec:	698b      	ldr	r3, [r1, #24]
   83eee:	6183      	str	r3, [r0, #24]
   83ef0:	69cb      	ldr	r3, [r1, #28]
   83ef2:	61c3      	str	r3, [r0, #28]
   83ef4:	6a0b      	ldr	r3, [r1, #32]
   83ef6:	6203      	str	r3, [r0, #32]
   83ef8:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83efa:	6243      	str	r3, [r0, #36]	; 0x24
   83efc:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83efe:	6283      	str	r3, [r0, #40]	; 0x28
   83f00:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83f02:	62c3      	str	r3, [r0, #44]	; 0x2c
   83f04:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83f06:	6303      	str	r3, [r0, #48]	; 0x30
   83f08:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83f0a:	6343      	str	r3, [r0, #52]	; 0x34
   83f0c:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83f0e:	6383      	str	r3, [r0, #56]	; 0x38
   83f10:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83f12:	63c3      	str	r3, [r0, #60]	; 0x3c
   83f14:	3040      	adds	r0, #64	; 0x40
   83f16:	3140      	adds	r1, #64	; 0x40
   83f18:	3a40      	subs	r2, #64	; 0x40
   83f1a:	d2db      	bcs.n	83ed4 <memcpy+0x10>
   83f1c:	3230      	adds	r2, #48	; 0x30
   83f1e:	d30b      	bcc.n	83f38 <memcpy+0x74>
   83f20:	680b      	ldr	r3, [r1, #0]
   83f22:	6003      	str	r3, [r0, #0]
   83f24:	684b      	ldr	r3, [r1, #4]
   83f26:	6043      	str	r3, [r0, #4]
   83f28:	688b      	ldr	r3, [r1, #8]
   83f2a:	6083      	str	r3, [r0, #8]
   83f2c:	68cb      	ldr	r3, [r1, #12]
   83f2e:	60c3      	str	r3, [r0, #12]
   83f30:	3010      	adds	r0, #16
   83f32:	3110      	adds	r1, #16
   83f34:	3a10      	subs	r2, #16
   83f36:	d2f3      	bcs.n	83f20 <memcpy+0x5c>
   83f38:	320c      	adds	r2, #12
   83f3a:	d305      	bcc.n	83f48 <memcpy+0x84>
   83f3c:	f851 3b04 	ldr.w	r3, [r1], #4
   83f40:	f840 3b04 	str.w	r3, [r0], #4
   83f44:	3a04      	subs	r2, #4
   83f46:	d2f9      	bcs.n	83f3c <memcpy+0x78>
   83f48:	3204      	adds	r2, #4
   83f4a:	d008      	beq.n	83f5e <memcpy+0x9a>
   83f4c:	07d2      	lsls	r2, r2, #31
   83f4e:	bf1c      	itt	ne
   83f50:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83f54:	f800 3b01 	strbne.w	r3, [r0], #1
   83f58:	d301      	bcc.n	83f5e <memcpy+0x9a>
   83f5a:	880b      	ldrh	r3, [r1, #0]
   83f5c:	8003      	strh	r3, [r0, #0]
   83f5e:	4660      	mov	r0, ip
   83f60:	4770      	bx	lr
   83f62:	bf00      	nop
   83f64:	2a08      	cmp	r2, #8
   83f66:	d313      	bcc.n	83f90 <memcpy+0xcc>
   83f68:	078b      	lsls	r3, r1, #30
   83f6a:	d0b1      	beq.n	83ed0 <memcpy+0xc>
   83f6c:	f010 0303 	ands.w	r3, r0, #3
   83f70:	d0ae      	beq.n	83ed0 <memcpy+0xc>
   83f72:	f1c3 0304 	rsb	r3, r3, #4
   83f76:	1ad2      	subs	r2, r2, r3
   83f78:	07db      	lsls	r3, r3, #31
   83f7a:	bf1c      	itt	ne
   83f7c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83f80:	f800 3b01 	strbne.w	r3, [r0], #1
   83f84:	d3a4      	bcc.n	83ed0 <memcpy+0xc>
   83f86:	f831 3b02 	ldrh.w	r3, [r1], #2
   83f8a:	f820 3b02 	strh.w	r3, [r0], #2
   83f8e:	e79f      	b.n	83ed0 <memcpy+0xc>
   83f90:	3a04      	subs	r2, #4
   83f92:	d3d9      	bcc.n	83f48 <memcpy+0x84>
   83f94:	3a01      	subs	r2, #1
   83f96:	f811 3b01 	ldrb.w	r3, [r1], #1
   83f9a:	f800 3b01 	strb.w	r3, [r0], #1
   83f9e:	d2f9      	bcs.n	83f94 <memcpy+0xd0>
   83fa0:	780b      	ldrb	r3, [r1, #0]
   83fa2:	7003      	strb	r3, [r0, #0]
   83fa4:	784b      	ldrb	r3, [r1, #1]
   83fa6:	7043      	strb	r3, [r0, #1]
   83fa8:	788b      	ldrb	r3, [r1, #2]
   83faa:	7083      	strb	r3, [r0, #2]
   83fac:	4660      	mov	r0, ip
   83fae:	4770      	bx	lr

00083fb0 <memmove>:
   83fb0:	4288      	cmp	r0, r1
   83fb2:	b5f0      	push	{r4, r5, r6, r7, lr}
   83fb4:	d90d      	bls.n	83fd2 <memmove+0x22>
   83fb6:	188b      	adds	r3, r1, r2
   83fb8:	4298      	cmp	r0, r3
   83fba:	d20a      	bcs.n	83fd2 <memmove+0x22>
   83fbc:	1881      	adds	r1, r0, r2
   83fbe:	2a00      	cmp	r2, #0
   83fc0:	d054      	beq.n	8406c <memmove+0xbc>
   83fc2:	1a9a      	subs	r2, r3, r2
   83fc4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   83fc8:	4293      	cmp	r3, r2
   83fca:	f801 4d01 	strb.w	r4, [r1, #-1]!
   83fce:	d1f9      	bne.n	83fc4 <memmove+0x14>
   83fd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83fd2:	2a0f      	cmp	r2, #15
   83fd4:	d948      	bls.n	84068 <memmove+0xb8>
   83fd6:	ea40 0301 	orr.w	r3, r0, r1
   83fda:	079b      	lsls	r3, r3, #30
   83fdc:	d147      	bne.n	8406e <memmove+0xbe>
   83fde:	4615      	mov	r5, r2
   83fe0:	f100 0410 	add.w	r4, r0, #16
   83fe4:	f101 0310 	add.w	r3, r1, #16
   83fe8:	f853 6c10 	ldr.w	r6, [r3, #-16]
   83fec:	3d10      	subs	r5, #16
   83fee:	f844 6c10 	str.w	r6, [r4, #-16]
   83ff2:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   83ff6:	2d0f      	cmp	r5, #15
   83ff8:	f844 6c0c 	str.w	r6, [r4, #-12]
   83ffc:	f853 6c08 	ldr.w	r6, [r3, #-8]
   84000:	f104 0410 	add.w	r4, r4, #16
   84004:	f844 6c18 	str.w	r6, [r4, #-24]
   84008:	f853 6c04 	ldr.w	r6, [r3, #-4]
   8400c:	f103 0310 	add.w	r3, r3, #16
   84010:	f844 6c14 	str.w	r6, [r4, #-20]
   84014:	d8e8      	bhi.n	83fe8 <memmove+0x38>
   84016:	f1a2 0310 	sub.w	r3, r2, #16
   8401a:	f023 030f 	bic.w	r3, r3, #15
   8401e:	f002 0e0f 	and.w	lr, r2, #15
   84022:	3310      	adds	r3, #16
   84024:	f1be 0f03 	cmp.w	lr, #3
   84028:	4419      	add	r1, r3
   8402a:	4403      	add	r3, r0
   8402c:	d921      	bls.n	84072 <memmove+0xc2>
   8402e:	460e      	mov	r6, r1
   84030:	4674      	mov	r4, lr
   84032:	1f1d      	subs	r5, r3, #4
   84034:	f856 7b04 	ldr.w	r7, [r6], #4
   84038:	3c04      	subs	r4, #4
   8403a:	2c03      	cmp	r4, #3
   8403c:	f845 7f04 	str.w	r7, [r5, #4]!
   84040:	d8f8      	bhi.n	84034 <memmove+0x84>
   84042:	f1ae 0404 	sub.w	r4, lr, #4
   84046:	f024 0403 	bic.w	r4, r4, #3
   8404a:	3404      	adds	r4, #4
   8404c:	4423      	add	r3, r4
   8404e:	4421      	add	r1, r4
   84050:	f002 0203 	and.w	r2, r2, #3
   84054:	b152      	cbz	r2, 8406c <memmove+0xbc>
   84056:	3b01      	subs	r3, #1
   84058:	440a      	add	r2, r1
   8405a:	f811 4b01 	ldrb.w	r4, [r1], #1
   8405e:	4291      	cmp	r1, r2
   84060:	f803 4f01 	strb.w	r4, [r3, #1]!
   84064:	d1f9      	bne.n	8405a <memmove+0xaa>
   84066:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84068:	4603      	mov	r3, r0
   8406a:	e7f3      	b.n	84054 <memmove+0xa4>
   8406c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8406e:	4603      	mov	r3, r0
   84070:	e7f1      	b.n	84056 <memmove+0xa6>
   84072:	4672      	mov	r2, lr
   84074:	e7ee      	b.n	84054 <memmove+0xa4>
   84076:	bf00      	nop

00084078 <__malloc_lock>:
   84078:	4770      	bx	lr
   8407a:	bf00      	nop

0008407c <__malloc_unlock>:
   8407c:	4770      	bx	lr
   8407e:	bf00      	nop

00084080 <_Balloc>:
   84080:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   84082:	b570      	push	{r4, r5, r6, lr}
   84084:	4605      	mov	r5, r0
   84086:	460c      	mov	r4, r1
   84088:	b152      	cbz	r2, 840a0 <_Balloc+0x20>
   8408a:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
   8408e:	b18b      	cbz	r3, 840b4 <_Balloc+0x34>
   84090:	6819      	ldr	r1, [r3, #0]
   84092:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   84096:	2200      	movs	r2, #0
   84098:	4618      	mov	r0, r3
   8409a:	611a      	str	r2, [r3, #16]
   8409c:	60da      	str	r2, [r3, #12]
   8409e:	bd70      	pop	{r4, r5, r6, pc}
   840a0:	2221      	movs	r2, #33	; 0x21
   840a2:	2104      	movs	r1, #4
   840a4:	f000 fdec 	bl	84c80 <_calloc_r>
   840a8:	64e8      	str	r0, [r5, #76]	; 0x4c
   840aa:	4602      	mov	r2, r0
   840ac:	2800      	cmp	r0, #0
   840ae:	d1ec      	bne.n	8408a <_Balloc+0xa>
   840b0:	2000      	movs	r0, #0
   840b2:	bd70      	pop	{r4, r5, r6, pc}
   840b4:	2101      	movs	r1, #1
   840b6:	fa01 f604 	lsl.w	r6, r1, r4
   840ba:	1d72      	adds	r2, r6, #5
   840bc:	4628      	mov	r0, r5
   840be:	0092      	lsls	r2, r2, #2
   840c0:	f000 fdde 	bl	84c80 <_calloc_r>
   840c4:	4603      	mov	r3, r0
   840c6:	2800      	cmp	r0, #0
   840c8:	d0f2      	beq.n	840b0 <_Balloc+0x30>
   840ca:	6044      	str	r4, [r0, #4]
   840cc:	6086      	str	r6, [r0, #8]
   840ce:	e7e2      	b.n	84096 <_Balloc+0x16>

000840d0 <_Bfree>:
   840d0:	b131      	cbz	r1, 840e0 <_Bfree+0x10>
   840d2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   840d4:	684a      	ldr	r2, [r1, #4]
   840d6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   840da:	6008      	str	r0, [r1, #0]
   840dc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   840e0:	4770      	bx	lr
   840e2:	bf00      	nop

000840e4 <__multadd>:
   840e4:	b5f0      	push	{r4, r5, r6, r7, lr}
   840e6:	460c      	mov	r4, r1
   840e8:	4605      	mov	r5, r0
   840ea:	690e      	ldr	r6, [r1, #16]
   840ec:	b083      	sub	sp, #12
   840ee:	f101 0e14 	add.w	lr, r1, #20
   840f2:	2700      	movs	r7, #0
   840f4:	f8de 1000 	ldr.w	r1, [lr]
   840f8:	3701      	adds	r7, #1
   840fa:	b288      	uxth	r0, r1
   840fc:	0c09      	lsrs	r1, r1, #16
   840fe:	fb02 3300 	mla	r3, r2, r0, r3
   84102:	fb02 f101 	mul.w	r1, r2, r1
   84106:	b298      	uxth	r0, r3
   84108:	eb01 4313 	add.w	r3, r1, r3, lsr #16
   8410c:	eb00 4103 	add.w	r1, r0, r3, lsl #16
   84110:	42be      	cmp	r6, r7
   84112:	f84e 1b04 	str.w	r1, [lr], #4
   84116:	ea4f 4313 	mov.w	r3, r3, lsr #16
   8411a:	dceb      	bgt.n	840f4 <__multadd+0x10>
   8411c:	b13b      	cbz	r3, 8412e <__multadd+0x4a>
   8411e:	68a2      	ldr	r2, [r4, #8]
   84120:	4296      	cmp	r6, r2
   84122:	da07      	bge.n	84134 <__multadd+0x50>
   84124:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   84128:	3601      	adds	r6, #1
   8412a:	6153      	str	r3, [r2, #20]
   8412c:	6126      	str	r6, [r4, #16]
   8412e:	4620      	mov	r0, r4
   84130:	b003      	add	sp, #12
   84132:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84134:	6861      	ldr	r1, [r4, #4]
   84136:	4628      	mov	r0, r5
   84138:	3101      	adds	r1, #1
   8413a:	9301      	str	r3, [sp, #4]
   8413c:	f7ff ffa0 	bl	84080 <_Balloc>
   84140:	4607      	mov	r7, r0
   84142:	6922      	ldr	r2, [r4, #16]
   84144:	f104 010c 	add.w	r1, r4, #12
   84148:	3202      	adds	r2, #2
   8414a:	0092      	lsls	r2, r2, #2
   8414c:	300c      	adds	r0, #12
   8414e:	f7ff feb9 	bl	83ec4 <memcpy>
   84152:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   84154:	6861      	ldr	r1, [r4, #4]
   84156:	9b01      	ldr	r3, [sp, #4]
   84158:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   8415c:	6020      	str	r0, [r4, #0]
   8415e:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   84162:	463c      	mov	r4, r7
   84164:	e7de      	b.n	84124 <__multadd+0x40>
   84166:	bf00      	nop

00084168 <__hi0bits>:
   84168:	0c03      	lsrs	r3, r0, #16
   8416a:	041b      	lsls	r3, r3, #16
   8416c:	b9b3      	cbnz	r3, 8419c <__hi0bits+0x34>
   8416e:	0400      	lsls	r0, r0, #16
   84170:	2310      	movs	r3, #16
   84172:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   84176:	bf04      	itt	eq
   84178:	0200      	lsleq	r0, r0, #8
   8417a:	3308      	addeq	r3, #8
   8417c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   84180:	bf04      	itt	eq
   84182:	0100      	lsleq	r0, r0, #4
   84184:	3304      	addeq	r3, #4
   84186:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   8418a:	bf04      	itt	eq
   8418c:	0080      	lsleq	r0, r0, #2
   8418e:	3302      	addeq	r3, #2
   84190:	2800      	cmp	r0, #0
   84192:	db07      	blt.n	841a4 <__hi0bits+0x3c>
   84194:	0042      	lsls	r2, r0, #1
   84196:	d403      	bmi.n	841a0 <__hi0bits+0x38>
   84198:	2020      	movs	r0, #32
   8419a:	4770      	bx	lr
   8419c:	2300      	movs	r3, #0
   8419e:	e7e8      	b.n	84172 <__hi0bits+0xa>
   841a0:	1c58      	adds	r0, r3, #1
   841a2:	4770      	bx	lr
   841a4:	4618      	mov	r0, r3
   841a6:	4770      	bx	lr

000841a8 <__lo0bits>:
   841a8:	6803      	ldr	r3, [r0, #0]
   841aa:	f013 0207 	ands.w	r2, r3, #7
   841ae:	d007      	beq.n	841c0 <__lo0bits+0x18>
   841b0:	07d9      	lsls	r1, r3, #31
   841b2:	d420      	bmi.n	841f6 <__lo0bits+0x4e>
   841b4:	079a      	lsls	r2, r3, #30
   841b6:	d420      	bmi.n	841fa <__lo0bits+0x52>
   841b8:	089b      	lsrs	r3, r3, #2
   841ba:	6003      	str	r3, [r0, #0]
   841bc:	2002      	movs	r0, #2
   841be:	4770      	bx	lr
   841c0:	b299      	uxth	r1, r3
   841c2:	b909      	cbnz	r1, 841c8 <__lo0bits+0x20>
   841c4:	0c1b      	lsrs	r3, r3, #16
   841c6:	2210      	movs	r2, #16
   841c8:	f013 0fff 	tst.w	r3, #255	; 0xff
   841cc:	bf04      	itt	eq
   841ce:	0a1b      	lsreq	r3, r3, #8
   841d0:	3208      	addeq	r2, #8
   841d2:	0719      	lsls	r1, r3, #28
   841d4:	bf04      	itt	eq
   841d6:	091b      	lsreq	r3, r3, #4
   841d8:	3204      	addeq	r2, #4
   841da:	0799      	lsls	r1, r3, #30
   841dc:	bf04      	itt	eq
   841de:	089b      	lsreq	r3, r3, #2
   841e0:	3202      	addeq	r2, #2
   841e2:	07d9      	lsls	r1, r3, #31
   841e4:	d404      	bmi.n	841f0 <__lo0bits+0x48>
   841e6:	085b      	lsrs	r3, r3, #1
   841e8:	d101      	bne.n	841ee <__lo0bits+0x46>
   841ea:	2020      	movs	r0, #32
   841ec:	4770      	bx	lr
   841ee:	3201      	adds	r2, #1
   841f0:	6003      	str	r3, [r0, #0]
   841f2:	4610      	mov	r0, r2
   841f4:	4770      	bx	lr
   841f6:	2000      	movs	r0, #0
   841f8:	4770      	bx	lr
   841fa:	085b      	lsrs	r3, r3, #1
   841fc:	6003      	str	r3, [r0, #0]
   841fe:	2001      	movs	r0, #1
   84200:	4770      	bx	lr
   84202:	bf00      	nop

00084204 <__i2b>:
   84204:	b510      	push	{r4, lr}
   84206:	460c      	mov	r4, r1
   84208:	2101      	movs	r1, #1
   8420a:	f7ff ff39 	bl	84080 <_Balloc>
   8420e:	2201      	movs	r2, #1
   84210:	6144      	str	r4, [r0, #20]
   84212:	6102      	str	r2, [r0, #16]
   84214:	bd10      	pop	{r4, pc}
   84216:	bf00      	nop

00084218 <__multiply>:
   84218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8421c:	690e      	ldr	r6, [r1, #16]
   8421e:	6915      	ldr	r5, [r2, #16]
   84220:	b085      	sub	sp, #20
   84222:	42ae      	cmp	r6, r5
   84224:	460c      	mov	r4, r1
   84226:	4691      	mov	r9, r2
   84228:	f2c0 8092 	blt.w	84350 <__multiply+0x138>
   8422c:	462b      	mov	r3, r5
   8422e:	4635      	mov	r5, r6
   84230:	461e      	mov	r6, r3
   84232:	68a3      	ldr	r3, [r4, #8]
   84234:	eb05 0806 	add.w	r8, r5, r6
   84238:	6861      	ldr	r1, [r4, #4]
   8423a:	4598      	cmp	r8, r3
   8423c:	bfc8      	it	gt
   8423e:	3101      	addgt	r1, #1
   84240:	f7ff ff1e 	bl	84080 <_Balloc>
   84244:	f100 0a14 	add.w	sl, r0, #20
   84248:	eb0a 0b88 	add.w	fp, sl, r8, lsl #2
   8424c:	45da      	cmp	sl, fp
   8424e:	9001      	str	r0, [sp, #4]
   84250:	d205      	bcs.n	8425e <__multiply+0x46>
   84252:	4653      	mov	r3, sl
   84254:	2100      	movs	r1, #0
   84256:	f843 1b04 	str.w	r1, [r3], #4
   8425a:	459b      	cmp	fp, r3
   8425c:	d8fb      	bhi.n	84256 <__multiply+0x3e>
   8425e:	f109 0914 	add.w	r9, r9, #20
   84262:	eb09 0386 	add.w	r3, r9, r6, lsl #2
   84266:	f104 0214 	add.w	r2, r4, #20
   8426a:	4599      	cmp	r9, r3
   8426c:	eb02 0c85 	add.w	ip, r2, r5, lsl #2
   84270:	d259      	bcs.n	84326 <__multiply+0x10e>
   84272:	f8cd b008 	str.w	fp, [sp, #8]
   84276:	f8cd 800c 	str.w	r8, [sp, #12]
   8427a:	469b      	mov	fp, r3
   8427c:	4690      	mov	r8, r2
   8427e:	f859 7b04 	ldr.w	r7, [r9], #4
   84282:	fa1f fe87 	uxth.w	lr, r7
   84286:	f1be 0f00 	cmp.w	lr, #0
   8428a:	d01f      	beq.n	842cc <__multiply+0xb4>
   8428c:	4647      	mov	r7, r8
   8428e:	4656      	mov	r6, sl
   84290:	2100      	movs	r1, #0
   84292:	e000      	b.n	84296 <__multiply+0x7e>
   84294:	4606      	mov	r6, r0
   84296:	4630      	mov	r0, r6
   84298:	f857 5b04 	ldr.w	r5, [r7], #4
   8429c:	6834      	ldr	r4, [r6, #0]
   8429e:	b2ab      	uxth	r3, r5
   842a0:	b2a2      	uxth	r2, r4
   842a2:	fb0e 2203 	mla	r2, lr, r3, r2
   842a6:	0c2d      	lsrs	r5, r5, #16
   842a8:	0c24      	lsrs	r4, r4, #16
   842aa:	fb0e 4405 	mla	r4, lr, r5, r4
   842ae:	1853      	adds	r3, r2, r1
   842b0:	eb04 4113 	add.w	r1, r4, r3, lsr #16
   842b4:	b29a      	uxth	r2, r3
   842b6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   842ba:	45bc      	cmp	ip, r7
   842bc:	ea4f 4111 	mov.w	r1, r1, lsr #16
   842c0:	f840 2b04 	str.w	r2, [r0], #4
   842c4:	d8e6      	bhi.n	84294 <__multiply+0x7c>
   842c6:	6071      	str	r1, [r6, #4]
   842c8:	f859 7c04 	ldr.w	r7, [r9, #-4]
   842cc:	0c3f      	lsrs	r7, r7, #16
   842ce:	d022      	beq.n	84316 <__multiply+0xfe>
   842d0:	f8da 3000 	ldr.w	r3, [sl]
   842d4:	2200      	movs	r2, #0
   842d6:	4655      	mov	r5, sl
   842d8:	461e      	mov	r6, r3
   842da:	4640      	mov	r0, r8
   842dc:	4696      	mov	lr, r2
   842de:	e000      	b.n	842e2 <__multiply+0xca>
   842e0:	4625      	mov	r5, r4
   842e2:	462c      	mov	r4, r5
   842e4:	8802      	ldrh	r2, [r0, #0]
   842e6:	0c36      	lsrs	r6, r6, #16
   842e8:	fb07 6602 	mla	r6, r7, r2, r6
   842ec:	b299      	uxth	r1, r3
   842ee:	eb06 020e 	add.w	r2, r6, lr
   842f2:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   842f6:	f844 3b04 	str.w	r3, [r4], #4
   842fa:	f850 1b04 	ldr.w	r1, [r0], #4
   842fe:	686e      	ldr	r6, [r5, #4]
   84300:	0c09      	lsrs	r1, r1, #16
   84302:	b2b3      	uxth	r3, r6
   84304:	fb07 3101 	mla	r1, r7, r1, r3
   84308:	4584      	cmp	ip, r0
   8430a:	eb01 4312 	add.w	r3, r1, r2, lsr #16
   8430e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   84312:	d8e5      	bhi.n	842e0 <__multiply+0xc8>
   84314:	606b      	str	r3, [r5, #4]
   84316:	45cb      	cmp	fp, r9
   84318:	f10a 0a04 	add.w	sl, sl, #4
   8431c:	d8af      	bhi.n	8427e <__multiply+0x66>
   8431e:	f8dd b008 	ldr.w	fp, [sp, #8]
   84322:	f8dd 800c 	ldr.w	r8, [sp, #12]
   84326:	f1b8 0f00 	cmp.w	r8, #0
   8432a:	dd0b      	ble.n	84344 <__multiply+0x12c>
   8432c:	f85b 3c04 	ldr.w	r3, [fp, #-4]
   84330:	f1ab 0b04 	sub.w	fp, fp, #4
   84334:	b11b      	cbz	r3, 8433e <__multiply+0x126>
   84336:	e005      	b.n	84344 <__multiply+0x12c>
   84338:	f85b 3d04 	ldr.w	r3, [fp, #-4]!
   8433c:	b913      	cbnz	r3, 84344 <__multiply+0x12c>
   8433e:	f1b8 0801 	subs.w	r8, r8, #1
   84342:	d1f9      	bne.n	84338 <__multiply+0x120>
   84344:	9801      	ldr	r0, [sp, #4]
   84346:	f8c0 8010 	str.w	r8, [r0, #16]
   8434a:	b005      	add	sp, #20
   8434c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84350:	4614      	mov	r4, r2
   84352:	4689      	mov	r9, r1
   84354:	e76d      	b.n	84232 <__multiply+0x1a>
   84356:	bf00      	nop

00084358 <__pow5mult>:
   84358:	f012 0303 	ands.w	r3, r2, #3
   8435c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84360:	4614      	mov	r4, r2
   84362:	4607      	mov	r7, r0
   84364:	460e      	mov	r6, r1
   84366:	d12d      	bne.n	843c4 <__pow5mult+0x6c>
   84368:	10a4      	asrs	r4, r4, #2
   8436a:	d01c      	beq.n	843a6 <__pow5mult+0x4e>
   8436c:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   8436e:	b395      	cbz	r5, 843d6 <__pow5mult+0x7e>
   84370:	07e3      	lsls	r3, r4, #31
   84372:	f04f 0800 	mov.w	r8, #0
   84376:	d406      	bmi.n	84386 <__pow5mult+0x2e>
   84378:	1064      	asrs	r4, r4, #1
   8437a:	d014      	beq.n	843a6 <__pow5mult+0x4e>
   8437c:	6828      	ldr	r0, [r5, #0]
   8437e:	b1a8      	cbz	r0, 843ac <__pow5mult+0x54>
   84380:	4605      	mov	r5, r0
   84382:	07e3      	lsls	r3, r4, #31
   84384:	d5f8      	bpl.n	84378 <__pow5mult+0x20>
   84386:	4638      	mov	r0, r7
   84388:	4631      	mov	r1, r6
   8438a:	462a      	mov	r2, r5
   8438c:	f7ff ff44 	bl	84218 <__multiply>
   84390:	b1b6      	cbz	r6, 843c0 <__pow5mult+0x68>
   84392:	6872      	ldr	r2, [r6, #4]
   84394:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84396:	1064      	asrs	r4, r4, #1
   84398:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8439c:	6031      	str	r1, [r6, #0]
   8439e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   843a2:	4606      	mov	r6, r0
   843a4:	d1ea      	bne.n	8437c <__pow5mult+0x24>
   843a6:	4630      	mov	r0, r6
   843a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   843ac:	4629      	mov	r1, r5
   843ae:	462a      	mov	r2, r5
   843b0:	4638      	mov	r0, r7
   843b2:	f7ff ff31 	bl	84218 <__multiply>
   843b6:	6028      	str	r0, [r5, #0]
   843b8:	f8c0 8000 	str.w	r8, [r0]
   843bc:	4605      	mov	r5, r0
   843be:	e7e0      	b.n	84382 <__pow5mult+0x2a>
   843c0:	4606      	mov	r6, r0
   843c2:	e7d9      	b.n	84378 <__pow5mult+0x20>
   843c4:	4a0b      	ldr	r2, [pc, #44]	; (843f4 <__pow5mult+0x9c>)
   843c6:	3b01      	subs	r3, #1
   843c8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   843cc:	2300      	movs	r3, #0
   843ce:	f7ff fe89 	bl	840e4 <__multadd>
   843d2:	4606      	mov	r6, r0
   843d4:	e7c8      	b.n	84368 <__pow5mult+0x10>
   843d6:	2101      	movs	r1, #1
   843d8:	4638      	mov	r0, r7
   843da:	f7ff fe51 	bl	84080 <_Balloc>
   843de:	f240 2171 	movw	r1, #625	; 0x271
   843e2:	2201      	movs	r2, #1
   843e4:	2300      	movs	r3, #0
   843e6:	6141      	str	r1, [r0, #20]
   843e8:	6102      	str	r2, [r0, #16]
   843ea:	4605      	mov	r5, r0
   843ec:	64b8      	str	r0, [r7, #72]	; 0x48
   843ee:	6003      	str	r3, [r0, #0]
   843f0:	e7be      	b.n	84370 <__pow5mult+0x18>
   843f2:	bf00      	nop
   843f4:	00085d08 	.word	0x00085d08

000843f8 <__lshift>:
   843f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   843fc:	690f      	ldr	r7, [r1, #16]
   843fe:	ea4f 1962 	mov.w	r9, r2, asr #5
   84402:	688b      	ldr	r3, [r1, #8]
   84404:	444f      	add	r7, r9
   84406:	1c7d      	adds	r5, r7, #1
   84408:	429d      	cmp	r5, r3
   8440a:	460e      	mov	r6, r1
   8440c:	4614      	mov	r4, r2
   8440e:	4680      	mov	r8, r0
   84410:	6849      	ldr	r1, [r1, #4]
   84412:	dd04      	ble.n	8441e <__lshift+0x26>
   84414:	005b      	lsls	r3, r3, #1
   84416:	429d      	cmp	r5, r3
   84418:	f101 0101 	add.w	r1, r1, #1
   8441c:	dcfa      	bgt.n	84414 <__lshift+0x1c>
   8441e:	4640      	mov	r0, r8
   84420:	f7ff fe2e 	bl	84080 <_Balloc>
   84424:	f1b9 0f00 	cmp.w	r9, #0
   84428:	f100 0114 	add.w	r1, r0, #20
   8442c:	dd09      	ble.n	84442 <__lshift+0x4a>
   8442e:	2300      	movs	r3, #0
   84430:	469e      	mov	lr, r3
   84432:	460a      	mov	r2, r1
   84434:	3301      	adds	r3, #1
   84436:	454b      	cmp	r3, r9
   84438:	f842 eb04 	str.w	lr, [r2], #4
   8443c:	d1fa      	bne.n	84434 <__lshift+0x3c>
   8443e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
   84442:	6932      	ldr	r2, [r6, #16]
   84444:	f106 0314 	add.w	r3, r6, #20
   84448:	eb03 0e82 	add.w	lr, r3, r2, lsl #2
   8444c:	f014 021f 	ands.w	r2, r4, #31
   84450:	d022      	beq.n	84498 <__lshift+0xa0>
   84452:	f1c2 0920 	rsb	r9, r2, #32
   84456:	f04f 0a00 	mov.w	sl, #0
   8445a:	681c      	ldr	r4, [r3, #0]
   8445c:	468c      	mov	ip, r1
   8445e:	4094      	lsls	r4, r2
   84460:	ea4a 0404 	orr.w	r4, sl, r4
   84464:	f841 4b04 	str.w	r4, [r1], #4
   84468:	f853 4b04 	ldr.w	r4, [r3], #4
   8446c:	459e      	cmp	lr, r3
   8446e:	fa24 fa09 	lsr.w	sl, r4, r9
   84472:	d8f2      	bhi.n	8445a <__lshift+0x62>
   84474:	f8cc a004 	str.w	sl, [ip, #4]
   84478:	f1ba 0f00 	cmp.w	sl, #0
   8447c:	d000      	beq.n	84480 <__lshift+0x88>
   8447e:	1cbd      	adds	r5, r7, #2
   84480:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   84484:	6872      	ldr	r2, [r6, #4]
   84486:	3d01      	subs	r5, #1
   84488:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8448c:	6105      	str	r5, [r0, #16]
   8448e:	6031      	str	r1, [r6, #0]
   84490:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84494:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84498:	3904      	subs	r1, #4
   8449a:	f853 2b04 	ldr.w	r2, [r3], #4
   8449e:	459e      	cmp	lr, r3
   844a0:	f841 2f04 	str.w	r2, [r1, #4]!
   844a4:	d8f9      	bhi.n	8449a <__lshift+0xa2>
   844a6:	e7eb      	b.n	84480 <__lshift+0x88>

000844a8 <__mcmp>:
   844a8:	6902      	ldr	r2, [r0, #16]
   844aa:	690b      	ldr	r3, [r1, #16]
   844ac:	1ad2      	subs	r2, r2, r3
   844ae:	d113      	bne.n	844d8 <__mcmp+0x30>
   844b0:	009b      	lsls	r3, r3, #2
   844b2:	3014      	adds	r0, #20
   844b4:	3114      	adds	r1, #20
   844b6:	4419      	add	r1, r3
   844b8:	b410      	push	{r4}
   844ba:	4403      	add	r3, r0
   844bc:	e001      	b.n	844c2 <__mcmp+0x1a>
   844be:	4298      	cmp	r0, r3
   844c0:	d20c      	bcs.n	844dc <__mcmp+0x34>
   844c2:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   844c6:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   844ca:	4294      	cmp	r4, r2
   844cc:	d0f7      	beq.n	844be <__mcmp+0x16>
   844ce:	d309      	bcc.n	844e4 <__mcmp+0x3c>
   844d0:	2001      	movs	r0, #1
   844d2:	f85d 4b04 	ldr.w	r4, [sp], #4
   844d6:	4770      	bx	lr
   844d8:	4610      	mov	r0, r2
   844da:	4770      	bx	lr
   844dc:	2000      	movs	r0, #0
   844de:	f85d 4b04 	ldr.w	r4, [sp], #4
   844e2:	4770      	bx	lr
   844e4:	f04f 30ff 	mov.w	r0, #4294967295
   844e8:	f85d 4b04 	ldr.w	r4, [sp], #4
   844ec:	4770      	bx	lr
   844ee:	bf00      	nop

000844f0 <__mdiff>:
   844f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   844f4:	460c      	mov	r4, r1
   844f6:	4605      	mov	r5, r0
   844f8:	4611      	mov	r1, r2
   844fa:	4620      	mov	r0, r4
   844fc:	4691      	mov	r9, r2
   844fe:	f7ff ffd3 	bl	844a8 <__mcmp>
   84502:	1e06      	subs	r6, r0, #0
   84504:	d05d      	beq.n	845c2 <__mdiff+0xd2>
   84506:	db56      	blt.n	845b6 <__mdiff+0xc6>
   84508:	f04f 0a00 	mov.w	sl, #0
   8450c:	4628      	mov	r0, r5
   8450e:	6861      	ldr	r1, [r4, #4]
   84510:	f7ff fdb6 	bl	84080 <_Balloc>
   84514:	f109 0314 	add.w	r3, r9, #20
   84518:	4680      	mov	r8, r0
   8451a:	461e      	mov	r6, r3
   8451c:	6927      	ldr	r7, [r4, #16]
   8451e:	f8d9 2010 	ldr.w	r2, [r9, #16]
   84522:	f104 0e14 	add.w	lr, r4, #20
   84526:	4675      	mov	r5, lr
   84528:	f8c0 a00c 	str.w	sl, [r0, #12]
   8452c:	f100 0414 	add.w	r4, r0, #20
   84530:	eb0e 0e87 	add.w	lr, lr, r7, lsl #2
   84534:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   84538:	f04f 0a00 	mov.w	sl, #0
   8453c:	f855 2b04 	ldr.w	r2, [r5], #4
   84540:	f856 1b04 	ldr.w	r1, [r6], #4
   84544:	b290      	uxth	r0, r2
   84546:	eb00 030a 	add.w	r3, r0, sl
   8454a:	b288      	uxth	r0, r1
   8454c:	0c09      	lsrs	r1, r1, #16
   8454e:	1a1b      	subs	r3, r3, r0
   84550:	ebc1 4212 	rsb	r2, r1, r2, lsr #16
   84554:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84558:	b29b      	uxth	r3, r3
   8455a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8455e:	45b4      	cmp	ip, r6
   84560:	f844 3b04 	str.w	r3, [r4], #4
   84564:	ea4f 4a22 	mov.w	sl, r2, asr #16
   84568:	46a9      	mov	r9, r5
   8456a:	d8e7      	bhi.n	8453c <__mdiff+0x4c>
   8456c:	45ae      	cmp	lr, r5
   8456e:	4626      	mov	r6, r4
   84570:	d915      	bls.n	8459e <__mdiff+0xae>
   84572:	f859 0b04 	ldr.w	r0, [r9], #4
   84576:	b283      	uxth	r3, r0
   84578:	4453      	add	r3, sl
   8457a:	0c00      	lsrs	r0, r0, #16
   8457c:	eb00 4123 	add.w	r1, r0, r3, asr #16
   84580:	b29b      	uxth	r3, r3
   84582:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   84586:	45ce      	cmp	lr, r9
   84588:	f844 3b04 	str.w	r3, [r4], #4
   8458c:	ea4f 4a21 	mov.w	sl, r1, asr #16
   84590:	d8ef      	bhi.n	84572 <__mdiff+0x82>
   84592:	43ed      	mvns	r5, r5
   84594:	4475      	add	r5, lr
   84596:	f025 0403 	bic.w	r4, r5, #3
   8459a:	3404      	adds	r4, #4
   8459c:	4434      	add	r4, r6
   8459e:	3c04      	subs	r4, #4
   845a0:	b923      	cbnz	r3, 845ac <__mdiff+0xbc>
   845a2:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   845a6:	3f01      	subs	r7, #1
   845a8:	2b00      	cmp	r3, #0
   845aa:	d0fa      	beq.n	845a2 <__mdiff+0xb2>
   845ac:	4640      	mov	r0, r8
   845ae:	f8c8 7010 	str.w	r7, [r8, #16]
   845b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   845b6:	4623      	mov	r3, r4
   845b8:	f04f 0a01 	mov.w	sl, #1
   845bc:	464c      	mov	r4, r9
   845be:	4699      	mov	r9, r3
   845c0:	e7a4      	b.n	8450c <__mdiff+0x1c>
   845c2:	4628      	mov	r0, r5
   845c4:	4631      	mov	r1, r6
   845c6:	f7ff fd5b 	bl	84080 <_Balloc>
   845ca:	2301      	movs	r3, #1
   845cc:	6146      	str	r6, [r0, #20]
   845ce:	6103      	str	r3, [r0, #16]
   845d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000845d4 <__d2b>:
   845d4:	b5f0      	push	{r4, r5, r6, r7, lr}
   845d6:	2101      	movs	r1, #1
   845d8:	b083      	sub	sp, #12
   845da:	461c      	mov	r4, r3
   845dc:	f3c3 550a 	ubfx	r5, r3, #20, #11
   845e0:	4616      	mov	r6, r2
   845e2:	f7ff fd4d 	bl	84080 <_Balloc>
   845e6:	f3c4 0413 	ubfx	r4, r4, #0, #20
   845ea:	4607      	mov	r7, r0
   845ec:	b10d      	cbz	r5, 845f2 <__d2b+0x1e>
   845ee:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   845f2:	9401      	str	r4, [sp, #4]
   845f4:	b306      	cbz	r6, 84638 <__d2b+0x64>
   845f6:	a802      	add	r0, sp, #8
   845f8:	f840 6d08 	str.w	r6, [r0, #-8]!
   845fc:	f7ff fdd4 	bl	841a8 <__lo0bits>
   84600:	2800      	cmp	r0, #0
   84602:	d130      	bne.n	84666 <__d2b+0x92>
   84604:	e89d 000c 	ldmia.w	sp, {r2, r3}
   84608:	617a      	str	r2, [r7, #20]
   8460a:	2b00      	cmp	r3, #0
   8460c:	bf14      	ite	ne
   8460e:	2402      	movne	r4, #2
   84610:	2401      	moveq	r4, #1
   84612:	61bb      	str	r3, [r7, #24]
   84614:	613c      	str	r4, [r7, #16]
   84616:	b9d5      	cbnz	r5, 8464e <__d2b+0x7a>
   84618:	9a08      	ldr	r2, [sp, #32]
   8461a:	eb07 0384 	add.w	r3, r7, r4, lsl #2
   8461e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84622:	6010      	str	r0, [r2, #0]
   84624:	6918      	ldr	r0, [r3, #16]
   84626:	f7ff fd9f 	bl	84168 <__hi0bits>
   8462a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8462c:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   84630:	6018      	str	r0, [r3, #0]
   84632:	4638      	mov	r0, r7
   84634:	b003      	add	sp, #12
   84636:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84638:	a801      	add	r0, sp, #4
   8463a:	f7ff fdb5 	bl	841a8 <__lo0bits>
   8463e:	9b01      	ldr	r3, [sp, #4]
   84640:	2201      	movs	r2, #1
   84642:	4614      	mov	r4, r2
   84644:	3020      	adds	r0, #32
   84646:	613a      	str	r2, [r7, #16]
   84648:	617b      	str	r3, [r7, #20]
   8464a:	2d00      	cmp	r5, #0
   8464c:	d0e4      	beq.n	84618 <__d2b+0x44>
   8464e:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   84652:	9a08      	ldr	r2, [sp, #32]
   84654:	4403      	add	r3, r0
   84656:	6013      	str	r3, [r2, #0]
   84658:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8465a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   8465e:	6018      	str	r0, [r3, #0]
   84660:	4638      	mov	r0, r7
   84662:	b003      	add	sp, #12
   84664:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84666:	9b01      	ldr	r3, [sp, #4]
   84668:	f1c0 0120 	rsb	r1, r0, #32
   8466c:	9a00      	ldr	r2, [sp, #0]
   8466e:	fa03 f101 	lsl.w	r1, r3, r1
   84672:	430a      	orrs	r2, r1
   84674:	40c3      	lsrs	r3, r0
   84676:	9301      	str	r3, [sp, #4]
   84678:	617a      	str	r2, [r7, #20]
   8467a:	e7c6      	b.n	8460a <__d2b+0x36>

0008467c <_realloc_r>:
   8467c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84680:	4617      	mov	r7, r2
   84682:	b083      	sub	sp, #12
   84684:	460d      	mov	r5, r1
   84686:	2900      	cmp	r1, #0
   84688:	f000 80e2 	beq.w	84850 <_realloc_r+0x1d4>
   8468c:	4681      	mov	r9, r0
   8468e:	f107 040b 	add.w	r4, r7, #11
   84692:	f7ff fcf1 	bl	84078 <__malloc_lock>
   84696:	f855 3c04 	ldr.w	r3, [r5, #-4]
   8469a:	2c16      	cmp	r4, #22
   8469c:	f023 0603 	bic.w	r6, r3, #3
   846a0:	f1a5 0808 	sub.w	r8, r5, #8
   846a4:	d84b      	bhi.n	8473e <_realloc_r+0xc2>
   846a6:	2210      	movs	r2, #16
   846a8:	4614      	mov	r4, r2
   846aa:	42a7      	cmp	r7, r4
   846ac:	d84c      	bhi.n	84748 <_realloc_r+0xcc>
   846ae:	4296      	cmp	r6, r2
   846b0:	da51      	bge.n	84756 <_realloc_r+0xda>
   846b2:	f8df b3a4 	ldr.w	fp, [pc, #932]	; 84a58 <_realloc_r+0x3dc>
   846b6:	eb08 0106 	add.w	r1, r8, r6
   846ba:	f8db 0008 	ldr.w	r0, [fp, #8]
   846be:	4288      	cmp	r0, r1
   846c0:	f000 80d3 	beq.w	8486a <_realloc_r+0x1ee>
   846c4:	6848      	ldr	r0, [r1, #4]
   846c6:	f020 0e01 	bic.w	lr, r0, #1
   846ca:	448e      	add	lr, r1
   846cc:	f8de e004 	ldr.w	lr, [lr, #4]
   846d0:	f01e 0f01 	tst.w	lr, #1
   846d4:	d154      	bne.n	84780 <_realloc_r+0x104>
   846d6:	f020 0003 	bic.w	r0, r0, #3
   846da:	4430      	add	r0, r6
   846dc:	4290      	cmp	r0, r2
   846de:	f280 80bd 	bge.w	8485c <_realloc_r+0x1e0>
   846e2:	07db      	lsls	r3, r3, #31
   846e4:	f100 8090 	bmi.w	84808 <_realloc_r+0x18c>
   846e8:	f855 3c08 	ldr.w	r3, [r5, #-8]
   846ec:	ebc3 0a08 	rsb	sl, r3, r8
   846f0:	f8da 3004 	ldr.w	r3, [sl, #4]
   846f4:	f023 0303 	bic.w	r3, r3, #3
   846f8:	eb00 0e03 	add.w	lr, r0, r3
   846fc:	4596      	cmp	lr, r2
   846fe:	db49      	blt.n	84794 <_realloc_r+0x118>
   84700:	4657      	mov	r7, sl
   84702:	68cb      	ldr	r3, [r1, #12]
   84704:	6889      	ldr	r1, [r1, #8]
   84706:	1f32      	subs	r2, r6, #4
   84708:	60cb      	str	r3, [r1, #12]
   8470a:	6099      	str	r1, [r3, #8]
   8470c:	f857 1f08 	ldr.w	r1, [r7, #8]!
   84710:	f8da 300c 	ldr.w	r3, [sl, #12]
   84714:	2a24      	cmp	r2, #36	; 0x24
   84716:	60cb      	str	r3, [r1, #12]
   84718:	6099      	str	r1, [r3, #8]
   8471a:	f200 8133 	bhi.w	84984 <_realloc_r+0x308>
   8471e:	2a13      	cmp	r2, #19
   84720:	f240 80fa 	bls.w	84918 <_realloc_r+0x29c>
   84724:	682b      	ldr	r3, [r5, #0]
   84726:	2a1b      	cmp	r2, #27
   84728:	f8ca 3008 	str.w	r3, [sl, #8]
   8472c:	686b      	ldr	r3, [r5, #4]
   8472e:	f8ca 300c 	str.w	r3, [sl, #12]
   84732:	f200 813b 	bhi.w	849ac <_realloc_r+0x330>
   84736:	3508      	adds	r5, #8
   84738:	f10a 0310 	add.w	r3, sl, #16
   8473c:	e0ed      	b.n	8491a <_realloc_r+0x29e>
   8473e:	f024 0407 	bic.w	r4, r4, #7
   84742:	2c00      	cmp	r4, #0
   84744:	4622      	mov	r2, r4
   84746:	dab0      	bge.n	846aa <_realloc_r+0x2e>
   84748:	230c      	movs	r3, #12
   8474a:	2000      	movs	r0, #0
   8474c:	f8c9 3000 	str.w	r3, [r9]
   84750:	b003      	add	sp, #12
   84752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84756:	462f      	mov	r7, r5
   84758:	1b32      	subs	r2, r6, r4
   8475a:	2a0f      	cmp	r2, #15
   8475c:	f003 0301 	and.w	r3, r3, #1
   84760:	d840      	bhi.n	847e4 <_realloc_r+0x168>
   84762:	4333      	orrs	r3, r6
   84764:	f8c8 3004 	str.w	r3, [r8, #4]
   84768:	4446      	add	r6, r8
   8476a:	6873      	ldr	r3, [r6, #4]
   8476c:	f043 0301 	orr.w	r3, r3, #1
   84770:	6073      	str	r3, [r6, #4]
   84772:	4648      	mov	r0, r9
   84774:	f7ff fc82 	bl	8407c <__malloc_unlock>
   84778:	4638      	mov	r0, r7
   8477a:	b003      	add	sp, #12
   8477c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84780:	07d9      	lsls	r1, r3, #31
   84782:	d441      	bmi.n	84808 <_realloc_r+0x18c>
   84784:	f855 3c08 	ldr.w	r3, [r5, #-8]
   84788:	ebc3 0a08 	rsb	sl, r3, r8
   8478c:	f8da 3004 	ldr.w	r3, [sl, #4]
   84790:	f023 0303 	bic.w	r3, r3, #3
   84794:	4433      	add	r3, r6
   84796:	4293      	cmp	r3, r2
   84798:	db36      	blt.n	84808 <_realloc_r+0x18c>
   8479a:	4657      	mov	r7, sl
   8479c:	f8da 100c 	ldr.w	r1, [sl, #12]
   847a0:	f857 0f08 	ldr.w	r0, [r7, #8]!
   847a4:	1f32      	subs	r2, r6, #4
   847a6:	2a24      	cmp	r2, #36	; 0x24
   847a8:	60c1      	str	r1, [r0, #12]
   847aa:	6088      	str	r0, [r1, #8]
   847ac:	f200 80f5 	bhi.w	8499a <_realloc_r+0x31e>
   847b0:	2a13      	cmp	r2, #19
   847b2:	f240 80f0 	bls.w	84996 <_realloc_r+0x31a>
   847b6:	6829      	ldr	r1, [r5, #0]
   847b8:	2a1b      	cmp	r2, #27
   847ba:	f8ca 1008 	str.w	r1, [sl, #8]
   847be:	6869      	ldr	r1, [r5, #4]
   847c0:	f8ca 100c 	str.w	r1, [sl, #12]
   847c4:	f200 8107 	bhi.w	849d6 <_realloc_r+0x35a>
   847c8:	3508      	adds	r5, #8
   847ca:	f10a 0210 	add.w	r2, sl, #16
   847ce:	6829      	ldr	r1, [r5, #0]
   847d0:	461e      	mov	r6, r3
   847d2:	6011      	str	r1, [r2, #0]
   847d4:	6869      	ldr	r1, [r5, #4]
   847d6:	46d0      	mov	r8, sl
   847d8:	6051      	str	r1, [r2, #4]
   847da:	68ab      	ldr	r3, [r5, #8]
   847dc:	6093      	str	r3, [r2, #8]
   847de:	f8da 3004 	ldr.w	r3, [sl, #4]
   847e2:	e7b9      	b.n	84758 <_realloc_r+0xdc>
   847e4:	eb08 0104 	add.w	r1, r8, r4
   847e8:	4323      	orrs	r3, r4
   847ea:	f042 0001 	orr.w	r0, r2, #1
   847ee:	f8c8 3004 	str.w	r3, [r8, #4]
   847f2:	440a      	add	r2, r1
   847f4:	6048      	str	r0, [r1, #4]
   847f6:	6853      	ldr	r3, [r2, #4]
   847f8:	3108      	adds	r1, #8
   847fa:	f043 0301 	orr.w	r3, r3, #1
   847fe:	6053      	str	r3, [r2, #4]
   84800:	4648      	mov	r0, r9
   84802:	f7fe ffb3 	bl	8376c <_free_r>
   84806:	e7b4      	b.n	84772 <_realloc_r+0xf6>
   84808:	4639      	mov	r1, r7
   8480a:	4648      	mov	r0, r9
   8480c:	f7ff f88a 	bl	83924 <_malloc_r>
   84810:	4607      	mov	r7, r0
   84812:	2800      	cmp	r0, #0
   84814:	d0ad      	beq.n	84772 <_realloc_r+0xf6>
   84816:	f855 3c04 	ldr.w	r3, [r5, #-4]
   8481a:	f1a0 0108 	sub.w	r1, r0, #8
   8481e:	f023 0201 	bic.w	r2, r3, #1
   84822:	4442      	add	r2, r8
   84824:	4291      	cmp	r1, r2
   84826:	f000 80a6 	beq.w	84976 <_realloc_r+0x2fa>
   8482a:	1f32      	subs	r2, r6, #4
   8482c:	2a24      	cmp	r2, #36	; 0x24
   8482e:	f200 8093 	bhi.w	84958 <_realloc_r+0x2dc>
   84832:	2a13      	cmp	r2, #19
   84834:	d865      	bhi.n	84902 <_realloc_r+0x286>
   84836:	4603      	mov	r3, r0
   84838:	462a      	mov	r2, r5
   8483a:	6811      	ldr	r1, [r2, #0]
   8483c:	6019      	str	r1, [r3, #0]
   8483e:	6851      	ldr	r1, [r2, #4]
   84840:	6059      	str	r1, [r3, #4]
   84842:	6892      	ldr	r2, [r2, #8]
   84844:	609a      	str	r2, [r3, #8]
   84846:	4629      	mov	r1, r5
   84848:	4648      	mov	r0, r9
   8484a:	f7fe ff8f 	bl	8376c <_free_r>
   8484e:	e790      	b.n	84772 <_realloc_r+0xf6>
   84850:	4611      	mov	r1, r2
   84852:	b003      	add	sp, #12
   84854:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84858:	f7ff b864 	b.w	83924 <_malloc_r>
   8485c:	68ca      	ldr	r2, [r1, #12]
   8485e:	6889      	ldr	r1, [r1, #8]
   84860:	462f      	mov	r7, r5
   84862:	60ca      	str	r2, [r1, #12]
   84864:	4606      	mov	r6, r0
   84866:	6091      	str	r1, [r2, #8]
   84868:	e776      	b.n	84758 <_realloc_r+0xdc>
   8486a:	6841      	ldr	r1, [r0, #4]
   8486c:	f104 0010 	add.w	r0, r4, #16
   84870:	f021 0103 	bic.w	r1, r1, #3
   84874:	4431      	add	r1, r6
   84876:	4281      	cmp	r1, r0
   84878:	da5a      	bge.n	84930 <_realloc_r+0x2b4>
   8487a:	07db      	lsls	r3, r3, #31
   8487c:	d4c4      	bmi.n	84808 <_realloc_r+0x18c>
   8487e:	f855 3c08 	ldr.w	r3, [r5, #-8]
   84882:	ebc3 0a08 	rsb	sl, r3, r8
   84886:	f8da 3004 	ldr.w	r3, [sl, #4]
   8488a:	f023 0303 	bic.w	r3, r3, #3
   8488e:	eb01 0c03 	add.w	ip, r1, r3
   84892:	4560      	cmp	r0, ip
   84894:	f73f af7e 	bgt.w	84794 <_realloc_r+0x118>
   84898:	4657      	mov	r7, sl
   8489a:	f8da 300c 	ldr.w	r3, [sl, #12]
   8489e:	f857 1f08 	ldr.w	r1, [r7, #8]!
   848a2:	1f32      	subs	r2, r6, #4
   848a4:	2a24      	cmp	r2, #36	; 0x24
   848a6:	60cb      	str	r3, [r1, #12]
   848a8:	6099      	str	r1, [r3, #8]
   848aa:	f200 80b6 	bhi.w	84a1a <_realloc_r+0x39e>
   848ae:	2a13      	cmp	r2, #19
   848b0:	f240 80a7 	bls.w	84a02 <_realloc_r+0x386>
   848b4:	682b      	ldr	r3, [r5, #0]
   848b6:	2a1b      	cmp	r2, #27
   848b8:	f8ca 3008 	str.w	r3, [sl, #8]
   848bc:	686b      	ldr	r3, [r5, #4]
   848be:	f8ca 300c 	str.w	r3, [sl, #12]
   848c2:	f200 80b3 	bhi.w	84a2c <_realloc_r+0x3b0>
   848c6:	3508      	adds	r5, #8
   848c8:	f10a 0310 	add.w	r3, sl, #16
   848cc:	682a      	ldr	r2, [r5, #0]
   848ce:	601a      	str	r2, [r3, #0]
   848d0:	686a      	ldr	r2, [r5, #4]
   848d2:	605a      	str	r2, [r3, #4]
   848d4:	68aa      	ldr	r2, [r5, #8]
   848d6:	609a      	str	r2, [r3, #8]
   848d8:	ebc4 030c 	rsb	r3, r4, ip
   848dc:	eb0a 0204 	add.w	r2, sl, r4
   848e0:	f043 0301 	orr.w	r3, r3, #1
   848e4:	f8cb 2008 	str.w	r2, [fp, #8]
   848e8:	6053      	str	r3, [r2, #4]
   848ea:	f8da 3004 	ldr.w	r3, [sl, #4]
   848ee:	4648      	mov	r0, r9
   848f0:	f003 0301 	and.w	r3, r3, #1
   848f4:	431c      	orrs	r4, r3
   848f6:	f8ca 4004 	str.w	r4, [sl, #4]
   848fa:	f7ff fbbf 	bl	8407c <__malloc_unlock>
   848fe:	4638      	mov	r0, r7
   84900:	e73b      	b.n	8477a <_realloc_r+0xfe>
   84902:	682b      	ldr	r3, [r5, #0]
   84904:	2a1b      	cmp	r2, #27
   84906:	6003      	str	r3, [r0, #0]
   84908:	686b      	ldr	r3, [r5, #4]
   8490a:	6043      	str	r3, [r0, #4]
   8490c:	d828      	bhi.n	84960 <_realloc_r+0x2e4>
   8490e:	f100 0308 	add.w	r3, r0, #8
   84912:	f105 0208 	add.w	r2, r5, #8
   84916:	e790      	b.n	8483a <_realloc_r+0x1be>
   84918:	463b      	mov	r3, r7
   8491a:	682a      	ldr	r2, [r5, #0]
   8491c:	4676      	mov	r6, lr
   8491e:	601a      	str	r2, [r3, #0]
   84920:	686a      	ldr	r2, [r5, #4]
   84922:	46d0      	mov	r8, sl
   84924:	605a      	str	r2, [r3, #4]
   84926:	68aa      	ldr	r2, [r5, #8]
   84928:	609a      	str	r2, [r3, #8]
   8492a:	f8da 3004 	ldr.w	r3, [sl, #4]
   8492e:	e713      	b.n	84758 <_realloc_r+0xdc>
   84930:	1b0b      	subs	r3, r1, r4
   84932:	eb08 0204 	add.w	r2, r8, r4
   84936:	f043 0301 	orr.w	r3, r3, #1
   8493a:	f8cb 2008 	str.w	r2, [fp, #8]
   8493e:	6053      	str	r3, [r2, #4]
   84940:	f855 3c04 	ldr.w	r3, [r5, #-4]
   84944:	4648      	mov	r0, r9
   84946:	f003 0301 	and.w	r3, r3, #1
   8494a:	431c      	orrs	r4, r3
   8494c:	f845 4c04 	str.w	r4, [r5, #-4]
   84950:	f7ff fb94 	bl	8407c <__malloc_unlock>
   84954:	4628      	mov	r0, r5
   84956:	e710      	b.n	8477a <_realloc_r+0xfe>
   84958:	4629      	mov	r1, r5
   8495a:	f7ff fb29 	bl	83fb0 <memmove>
   8495e:	e772      	b.n	84846 <_realloc_r+0x1ca>
   84960:	68ab      	ldr	r3, [r5, #8]
   84962:	2a24      	cmp	r2, #36	; 0x24
   84964:	6083      	str	r3, [r0, #8]
   84966:	68eb      	ldr	r3, [r5, #12]
   84968:	60c3      	str	r3, [r0, #12]
   8496a:	d02b      	beq.n	849c4 <_realloc_r+0x348>
   8496c:	f100 0310 	add.w	r3, r0, #16
   84970:	f105 0210 	add.w	r2, r5, #16
   84974:	e761      	b.n	8483a <_realloc_r+0x1be>
   84976:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8497a:	462f      	mov	r7, r5
   8497c:	f022 0203 	bic.w	r2, r2, #3
   84980:	4416      	add	r6, r2
   84982:	e6e9      	b.n	84758 <_realloc_r+0xdc>
   84984:	4629      	mov	r1, r5
   84986:	4638      	mov	r0, r7
   84988:	4676      	mov	r6, lr
   8498a:	46d0      	mov	r8, sl
   8498c:	f7ff fb10 	bl	83fb0 <memmove>
   84990:	f8da 3004 	ldr.w	r3, [sl, #4]
   84994:	e6e0      	b.n	84758 <_realloc_r+0xdc>
   84996:	463a      	mov	r2, r7
   84998:	e719      	b.n	847ce <_realloc_r+0x152>
   8499a:	4629      	mov	r1, r5
   8499c:	4638      	mov	r0, r7
   8499e:	461e      	mov	r6, r3
   849a0:	46d0      	mov	r8, sl
   849a2:	f7ff fb05 	bl	83fb0 <memmove>
   849a6:	f8da 3004 	ldr.w	r3, [sl, #4]
   849aa:	e6d5      	b.n	84758 <_realloc_r+0xdc>
   849ac:	68ab      	ldr	r3, [r5, #8]
   849ae:	2a24      	cmp	r2, #36	; 0x24
   849b0:	f8ca 3010 	str.w	r3, [sl, #16]
   849b4:	68eb      	ldr	r3, [r5, #12]
   849b6:	f8ca 3014 	str.w	r3, [sl, #20]
   849ba:	d018      	beq.n	849ee <_realloc_r+0x372>
   849bc:	3510      	adds	r5, #16
   849be:	f10a 0318 	add.w	r3, sl, #24
   849c2:	e7aa      	b.n	8491a <_realloc_r+0x29e>
   849c4:	692a      	ldr	r2, [r5, #16]
   849c6:	f100 0318 	add.w	r3, r0, #24
   849ca:	6102      	str	r2, [r0, #16]
   849cc:	6969      	ldr	r1, [r5, #20]
   849ce:	f105 0218 	add.w	r2, r5, #24
   849d2:	6141      	str	r1, [r0, #20]
   849d4:	e731      	b.n	8483a <_realloc_r+0x1be>
   849d6:	68a9      	ldr	r1, [r5, #8]
   849d8:	2a24      	cmp	r2, #36	; 0x24
   849da:	f8ca 1010 	str.w	r1, [sl, #16]
   849de:	68e9      	ldr	r1, [r5, #12]
   849e0:	f8ca 1014 	str.w	r1, [sl, #20]
   849e4:	d00f      	beq.n	84a06 <_realloc_r+0x38a>
   849e6:	3510      	adds	r5, #16
   849e8:	f10a 0218 	add.w	r2, sl, #24
   849ec:	e6ef      	b.n	847ce <_realloc_r+0x152>
   849ee:	692a      	ldr	r2, [r5, #16]
   849f0:	f10a 0320 	add.w	r3, sl, #32
   849f4:	f8ca 2018 	str.w	r2, [sl, #24]
   849f8:	696a      	ldr	r2, [r5, #20]
   849fa:	3518      	adds	r5, #24
   849fc:	f8ca 201c 	str.w	r2, [sl, #28]
   84a00:	e78b      	b.n	8491a <_realloc_r+0x29e>
   84a02:	463b      	mov	r3, r7
   84a04:	e762      	b.n	848cc <_realloc_r+0x250>
   84a06:	6929      	ldr	r1, [r5, #16]
   84a08:	f10a 0220 	add.w	r2, sl, #32
   84a0c:	f8ca 1018 	str.w	r1, [sl, #24]
   84a10:	6969      	ldr	r1, [r5, #20]
   84a12:	3518      	adds	r5, #24
   84a14:	f8ca 101c 	str.w	r1, [sl, #28]
   84a18:	e6d9      	b.n	847ce <_realloc_r+0x152>
   84a1a:	4629      	mov	r1, r5
   84a1c:	4638      	mov	r0, r7
   84a1e:	f8cd c004 	str.w	ip, [sp, #4]
   84a22:	f7ff fac5 	bl	83fb0 <memmove>
   84a26:	f8dd c004 	ldr.w	ip, [sp, #4]
   84a2a:	e755      	b.n	848d8 <_realloc_r+0x25c>
   84a2c:	68ab      	ldr	r3, [r5, #8]
   84a2e:	2a24      	cmp	r2, #36	; 0x24
   84a30:	f8ca 3010 	str.w	r3, [sl, #16]
   84a34:	68eb      	ldr	r3, [r5, #12]
   84a36:	f8ca 3014 	str.w	r3, [sl, #20]
   84a3a:	d003      	beq.n	84a44 <_realloc_r+0x3c8>
   84a3c:	3510      	adds	r5, #16
   84a3e:	f10a 0318 	add.w	r3, sl, #24
   84a42:	e743      	b.n	848cc <_realloc_r+0x250>
   84a44:	692a      	ldr	r2, [r5, #16]
   84a46:	f10a 0320 	add.w	r3, sl, #32
   84a4a:	f8ca 2018 	str.w	r2, [sl, #24]
   84a4e:	696a      	ldr	r2, [r5, #20]
   84a50:	3518      	adds	r5, #24
   84a52:	f8ca 201c 	str.w	r2, [sl, #28]
   84a56:	e739      	b.n	848cc <_realloc_r+0x250>
   84a58:	200705dc 	.word	0x200705dc

00084a5c <__fpclassifyd>:
   84a5c:	b410      	push	{r4}
   84a5e:	f031 4400 	bics.w	r4, r1, #2147483648	; 0x80000000
   84a62:	d008      	beq.n	84a76 <__fpclassifyd+0x1a>
   84a64:	4b11      	ldr	r3, [pc, #68]	; (84aac <__fpclassifyd+0x50>)
   84a66:	f5a1 1280 	sub.w	r2, r1, #1048576	; 0x100000
   84a6a:	429a      	cmp	r2, r3
   84a6c:	d808      	bhi.n	84a80 <__fpclassifyd+0x24>
   84a6e:	2004      	movs	r0, #4
   84a70:	f85d 4b04 	ldr.w	r4, [sp], #4
   84a74:	4770      	bx	lr
   84a76:	b918      	cbnz	r0, 84a80 <__fpclassifyd+0x24>
   84a78:	2002      	movs	r0, #2
   84a7a:	f85d 4b04 	ldr.w	r4, [sp], #4
   84a7e:	4770      	bx	lr
   84a80:	f101 41ff 	add.w	r1, r1, #2139095040	; 0x7f800000
   84a84:	4b09      	ldr	r3, [pc, #36]	; (84aac <__fpclassifyd+0x50>)
   84a86:	f501 01e0 	add.w	r1, r1, #7340032	; 0x700000
   84a8a:	4299      	cmp	r1, r3
   84a8c:	d9ef      	bls.n	84a6e <__fpclassifyd+0x12>
   84a8e:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
   84a92:	d201      	bcs.n	84a98 <__fpclassifyd+0x3c>
   84a94:	2003      	movs	r0, #3
   84a96:	e7eb      	b.n	84a70 <__fpclassifyd+0x14>
   84a98:	4b05      	ldr	r3, [pc, #20]	; (84ab0 <__fpclassifyd+0x54>)
   84a9a:	429c      	cmp	r4, r3
   84a9c:	d001      	beq.n	84aa2 <__fpclassifyd+0x46>
   84a9e:	2000      	movs	r0, #0
   84aa0:	e7e6      	b.n	84a70 <__fpclassifyd+0x14>
   84aa2:	fab0 f080 	clz	r0, r0
   84aa6:	0940      	lsrs	r0, r0, #5
   84aa8:	e7e2      	b.n	84a70 <__fpclassifyd+0x14>
   84aaa:	bf00      	nop
   84aac:	7fdfffff 	.word	0x7fdfffff
   84ab0:	7ff00000 	.word	0x7ff00000

00084ab4 <_sbrk_r>:
   84ab4:	b538      	push	{r3, r4, r5, lr}
   84ab6:	4c07      	ldr	r4, [pc, #28]	; (84ad4 <_sbrk_r+0x20>)
   84ab8:	2300      	movs	r3, #0
   84aba:	4605      	mov	r5, r0
   84abc:	4608      	mov	r0, r1
   84abe:	6023      	str	r3, [r4, #0]
   84ac0:	f7fc fa74 	bl	80fac <_sbrk>
   84ac4:	1c43      	adds	r3, r0, #1
   84ac6:	d000      	beq.n	84aca <_sbrk_r+0x16>
   84ac8:	bd38      	pop	{r3, r4, r5, pc}
   84aca:	6823      	ldr	r3, [r4, #0]
   84acc:	2b00      	cmp	r3, #0
   84ace:	d0fb      	beq.n	84ac8 <_sbrk_r+0x14>
   84ad0:	602b      	str	r3, [r5, #0]
   84ad2:	bd38      	pop	{r3, r4, r5, pc}
   84ad4:	20070ad8 	.word	0x20070ad8

00084ad8 <__ssprint_r>:
   84ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84adc:	6893      	ldr	r3, [r2, #8]
   84ade:	b083      	sub	sp, #12
   84ae0:	4691      	mov	r9, r2
   84ae2:	f8d2 8000 	ldr.w	r8, [r2]
   84ae6:	2b00      	cmp	r3, #0
   84ae8:	d072      	beq.n	84bd0 <__ssprint_r+0xf8>
   84aea:	f04f 0b00 	mov.w	fp, #0
   84aee:	460d      	mov	r5, r1
   84af0:	465c      	mov	r4, fp
   84af2:	4607      	mov	r7, r0
   84af4:	688b      	ldr	r3, [r1, #8]
   84af6:	6808      	ldr	r0, [r1, #0]
   84af8:	2c00      	cmp	r4, #0
   84afa:	d045      	beq.n	84b88 <__ssprint_r+0xb0>
   84afc:	429c      	cmp	r4, r3
   84afe:	461e      	mov	r6, r3
   84b00:	469a      	mov	sl, r3
   84b02:	d348      	bcc.n	84b96 <__ssprint_r+0xbe>
   84b04:	89ab      	ldrh	r3, [r5, #12]
   84b06:	f413 6f90 	tst.w	r3, #1152	; 0x480
   84b0a:	d02d      	beq.n	84b68 <__ssprint_r+0x90>
   84b0c:	696e      	ldr	r6, [r5, #20]
   84b0e:	6929      	ldr	r1, [r5, #16]
   84b10:	eb06 0646 	add.w	r6, r6, r6, lsl #1
   84b14:	ebc1 0a00 	rsb	sl, r1, r0
   84b18:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
   84b1c:	1c60      	adds	r0, r4, #1
   84b1e:	1076      	asrs	r6, r6, #1
   84b20:	4450      	add	r0, sl
   84b22:	4286      	cmp	r6, r0
   84b24:	4632      	mov	r2, r6
   84b26:	bf3c      	itt	cc
   84b28:	4606      	movcc	r6, r0
   84b2a:	4632      	movcc	r2, r6
   84b2c:	055b      	lsls	r3, r3, #21
   84b2e:	d535      	bpl.n	84b9c <__ssprint_r+0xc4>
   84b30:	4611      	mov	r1, r2
   84b32:	4638      	mov	r0, r7
   84b34:	f7fe fef6 	bl	83924 <_malloc_r>
   84b38:	2800      	cmp	r0, #0
   84b3a:	d039      	beq.n	84bb0 <__ssprint_r+0xd8>
   84b3c:	4652      	mov	r2, sl
   84b3e:	6929      	ldr	r1, [r5, #16]
   84b40:	9001      	str	r0, [sp, #4]
   84b42:	f7ff f9bf 	bl	83ec4 <memcpy>
   84b46:	89aa      	ldrh	r2, [r5, #12]
   84b48:	9b01      	ldr	r3, [sp, #4]
   84b4a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84b4e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84b52:	81aa      	strh	r2, [r5, #12]
   84b54:	ebca 0206 	rsb	r2, sl, r6
   84b58:	eb03 000a 	add.w	r0, r3, sl
   84b5c:	616e      	str	r6, [r5, #20]
   84b5e:	46a2      	mov	sl, r4
   84b60:	4626      	mov	r6, r4
   84b62:	612b      	str	r3, [r5, #16]
   84b64:	6028      	str	r0, [r5, #0]
   84b66:	60aa      	str	r2, [r5, #8]
   84b68:	4652      	mov	r2, sl
   84b6a:	4659      	mov	r1, fp
   84b6c:	f7ff fa20 	bl	83fb0 <memmove>
   84b70:	f8d9 2008 	ldr.w	r2, [r9, #8]
   84b74:	68ab      	ldr	r3, [r5, #8]
   84b76:	6828      	ldr	r0, [r5, #0]
   84b78:	1b9b      	subs	r3, r3, r6
   84b7a:	4450      	add	r0, sl
   84b7c:	1b14      	subs	r4, r2, r4
   84b7e:	60ab      	str	r3, [r5, #8]
   84b80:	6028      	str	r0, [r5, #0]
   84b82:	f8c9 4008 	str.w	r4, [r9, #8]
   84b86:	b31c      	cbz	r4, 84bd0 <__ssprint_r+0xf8>
   84b88:	f8d8 b000 	ldr.w	fp, [r8]
   84b8c:	f8d8 4004 	ldr.w	r4, [r8, #4]
   84b90:	f108 0808 	add.w	r8, r8, #8
   84b94:	e7b0      	b.n	84af8 <__ssprint_r+0x20>
   84b96:	4626      	mov	r6, r4
   84b98:	46a2      	mov	sl, r4
   84b9a:	e7e5      	b.n	84b68 <__ssprint_r+0x90>
   84b9c:	4638      	mov	r0, r7
   84b9e:	f7ff fd6d 	bl	8467c <_realloc_r>
   84ba2:	4603      	mov	r3, r0
   84ba4:	2800      	cmp	r0, #0
   84ba6:	d1d5      	bne.n	84b54 <__ssprint_r+0x7c>
   84ba8:	4638      	mov	r0, r7
   84baa:	6929      	ldr	r1, [r5, #16]
   84bac:	f7fe fdde 	bl	8376c <_free_r>
   84bb0:	230c      	movs	r3, #12
   84bb2:	603b      	str	r3, [r7, #0]
   84bb4:	89ab      	ldrh	r3, [r5, #12]
   84bb6:	2200      	movs	r2, #0
   84bb8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84bbc:	f04f 30ff 	mov.w	r0, #4294967295
   84bc0:	81ab      	strh	r3, [r5, #12]
   84bc2:	f8c9 2008 	str.w	r2, [r9, #8]
   84bc6:	f8c9 2004 	str.w	r2, [r9, #4]
   84bca:	b003      	add	sp, #12
   84bcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84bd0:	2000      	movs	r0, #0
   84bd2:	f8c9 0004 	str.w	r0, [r9, #4]
   84bd6:	b003      	add	sp, #12
   84bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084bdc <__register_exitproc>:
   84bdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   84be0:	4c25      	ldr	r4, [pc, #148]	; (84c78 <__register_exitproc+0x9c>)
   84be2:	4606      	mov	r6, r0
   84be4:	6825      	ldr	r5, [r4, #0]
   84be6:	4688      	mov	r8, r1
   84be8:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
   84bec:	4692      	mov	sl, r2
   84bee:	4699      	mov	r9, r3
   84bf0:	b3c4      	cbz	r4, 84c64 <__register_exitproc+0x88>
   84bf2:	6860      	ldr	r0, [r4, #4]
   84bf4:	281f      	cmp	r0, #31
   84bf6:	dc17      	bgt.n	84c28 <__register_exitproc+0x4c>
   84bf8:	1c41      	adds	r1, r0, #1
   84bfa:	b176      	cbz	r6, 84c1a <__register_exitproc+0x3e>
   84bfc:	eb04 0380 	add.w	r3, r4, r0, lsl #2
   84c00:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
   84c04:	f8d4 5188 	ldr.w	r5, [r4, #392]	; 0x188
   84c08:	2201      	movs	r2, #1
   84c0a:	4082      	lsls	r2, r0
   84c0c:	4315      	orrs	r5, r2
   84c0e:	2e02      	cmp	r6, #2
   84c10:	f8c4 5188 	str.w	r5, [r4, #392]	; 0x188
   84c14:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
   84c18:	d01e      	beq.n	84c58 <__register_exitproc+0x7c>
   84c1a:	1c83      	adds	r3, r0, #2
   84c1c:	6061      	str	r1, [r4, #4]
   84c1e:	2000      	movs	r0, #0
   84c20:	f844 8023 	str.w	r8, [r4, r3, lsl #2]
   84c24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84c28:	4b14      	ldr	r3, [pc, #80]	; (84c7c <__register_exitproc+0xa0>)
   84c2a:	b303      	cbz	r3, 84c6e <__register_exitproc+0x92>
   84c2c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84c30:	f3af 8000 	nop.w
   84c34:	4604      	mov	r4, r0
   84c36:	b1d0      	cbz	r0, 84c6e <__register_exitproc+0x92>
   84c38:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
   84c3c:	2700      	movs	r7, #0
   84c3e:	e884 0088 	stmia.w	r4, {r3, r7}
   84c42:	4638      	mov	r0, r7
   84c44:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   84c48:	2101      	movs	r1, #1
   84c4a:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
   84c4e:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
   84c52:	2e00      	cmp	r6, #0
   84c54:	d0e1      	beq.n	84c1a <__register_exitproc+0x3e>
   84c56:	e7d1      	b.n	84bfc <__register_exitproc+0x20>
   84c58:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84c5c:	431a      	orrs	r2, r3
   84c5e:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   84c62:	e7da      	b.n	84c1a <__register_exitproc+0x3e>
   84c64:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
   84c68:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   84c6c:	e7c1      	b.n	84bf2 <__register_exitproc+0x16>
   84c6e:	f04f 30ff 	mov.w	r0, #4294967295
   84c72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84c76:	bf00      	nop
   84c78:	00085bb8 	.word	0x00085bb8
   84c7c:	00000000 	.word	0x00000000

00084c80 <_calloc_r>:
   84c80:	b510      	push	{r4, lr}
   84c82:	fb02 f101 	mul.w	r1, r2, r1
   84c86:	f7fe fe4d 	bl	83924 <_malloc_r>
   84c8a:	4604      	mov	r4, r0
   84c8c:	b168      	cbz	r0, 84caa <_calloc_r+0x2a>
   84c8e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84c92:	f022 0203 	bic.w	r2, r2, #3
   84c96:	3a04      	subs	r2, #4
   84c98:	2a24      	cmp	r2, #36	; 0x24
   84c9a:	d818      	bhi.n	84cce <_calloc_r+0x4e>
   84c9c:	2a13      	cmp	r2, #19
   84c9e:	d806      	bhi.n	84cae <_calloc_r+0x2e>
   84ca0:	4603      	mov	r3, r0
   84ca2:	2200      	movs	r2, #0
   84ca4:	601a      	str	r2, [r3, #0]
   84ca6:	605a      	str	r2, [r3, #4]
   84ca8:	609a      	str	r2, [r3, #8]
   84caa:	4620      	mov	r0, r4
   84cac:	bd10      	pop	{r4, pc}
   84cae:	2300      	movs	r3, #0
   84cb0:	2a1b      	cmp	r2, #27
   84cb2:	6003      	str	r3, [r0, #0]
   84cb4:	6043      	str	r3, [r0, #4]
   84cb6:	d90f      	bls.n	84cd8 <_calloc_r+0x58>
   84cb8:	2a24      	cmp	r2, #36	; 0x24
   84cba:	6083      	str	r3, [r0, #8]
   84cbc:	60c3      	str	r3, [r0, #12]
   84cbe:	bf05      	ittet	eq
   84cc0:	6103      	streq	r3, [r0, #16]
   84cc2:	6143      	streq	r3, [r0, #20]
   84cc4:	f100 0310 	addne.w	r3, r0, #16
   84cc8:	f100 0318 	addeq.w	r3, r0, #24
   84ccc:	e7e9      	b.n	84ca2 <_calloc_r+0x22>
   84cce:	2100      	movs	r1, #0
   84cd0:	f7fc f9d0 	bl	81074 <memset>
   84cd4:	4620      	mov	r0, r4
   84cd6:	bd10      	pop	{r4, pc}
   84cd8:	f100 0308 	add.w	r3, r0, #8
   84cdc:	e7e1      	b.n	84ca2 <_calloc_r+0x22>
   84cde:	bf00      	nop

00084ce0 <__aeabi_drsub>:
   84ce0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84ce4:	e002      	b.n	84cec <__adddf3>
   84ce6:	bf00      	nop

00084ce8 <__aeabi_dsub>:
   84ce8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084cec <__adddf3>:
   84cec:	b530      	push	{r4, r5, lr}
   84cee:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84cf2:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84cf6:	ea94 0f05 	teq	r4, r5
   84cfa:	bf08      	it	eq
   84cfc:	ea90 0f02 	teqeq	r0, r2
   84d00:	bf1f      	itttt	ne
   84d02:	ea54 0c00 	orrsne.w	ip, r4, r0
   84d06:	ea55 0c02 	orrsne.w	ip, r5, r2
   84d0a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   84d0e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84d12:	f000 80e2 	beq.w	84eda <__adddf3+0x1ee>
   84d16:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84d1a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   84d1e:	bfb8      	it	lt
   84d20:	426d      	neglt	r5, r5
   84d22:	dd0c      	ble.n	84d3e <__adddf3+0x52>
   84d24:	442c      	add	r4, r5
   84d26:	ea80 0202 	eor.w	r2, r0, r2
   84d2a:	ea81 0303 	eor.w	r3, r1, r3
   84d2e:	ea82 0000 	eor.w	r0, r2, r0
   84d32:	ea83 0101 	eor.w	r1, r3, r1
   84d36:	ea80 0202 	eor.w	r2, r0, r2
   84d3a:	ea81 0303 	eor.w	r3, r1, r3
   84d3e:	2d36      	cmp	r5, #54	; 0x36
   84d40:	bf88      	it	hi
   84d42:	bd30      	pophi	{r4, r5, pc}
   84d44:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84d48:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84d4c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84d50:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84d54:	d002      	beq.n	84d5c <__adddf3+0x70>
   84d56:	4240      	negs	r0, r0
   84d58:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84d5c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84d60:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84d64:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84d68:	d002      	beq.n	84d70 <__adddf3+0x84>
   84d6a:	4252      	negs	r2, r2
   84d6c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84d70:	ea94 0f05 	teq	r4, r5
   84d74:	f000 80a7 	beq.w	84ec6 <__adddf3+0x1da>
   84d78:	f1a4 0401 	sub.w	r4, r4, #1
   84d7c:	f1d5 0e20 	rsbs	lr, r5, #32
   84d80:	db0d      	blt.n	84d9e <__adddf3+0xb2>
   84d82:	fa02 fc0e 	lsl.w	ip, r2, lr
   84d86:	fa22 f205 	lsr.w	r2, r2, r5
   84d8a:	1880      	adds	r0, r0, r2
   84d8c:	f141 0100 	adc.w	r1, r1, #0
   84d90:	fa03 f20e 	lsl.w	r2, r3, lr
   84d94:	1880      	adds	r0, r0, r2
   84d96:	fa43 f305 	asr.w	r3, r3, r5
   84d9a:	4159      	adcs	r1, r3
   84d9c:	e00e      	b.n	84dbc <__adddf3+0xd0>
   84d9e:	f1a5 0520 	sub.w	r5, r5, #32
   84da2:	f10e 0e20 	add.w	lr, lr, #32
   84da6:	2a01      	cmp	r2, #1
   84da8:	fa03 fc0e 	lsl.w	ip, r3, lr
   84dac:	bf28      	it	cs
   84dae:	f04c 0c02 	orrcs.w	ip, ip, #2
   84db2:	fa43 f305 	asr.w	r3, r3, r5
   84db6:	18c0      	adds	r0, r0, r3
   84db8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84dbc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84dc0:	d507      	bpl.n	84dd2 <__adddf3+0xe6>
   84dc2:	f04f 0e00 	mov.w	lr, #0
   84dc6:	f1dc 0c00 	rsbs	ip, ip, #0
   84dca:	eb7e 0000 	sbcs.w	r0, lr, r0
   84dce:	eb6e 0101 	sbc.w	r1, lr, r1
   84dd2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84dd6:	d31b      	bcc.n	84e10 <__adddf3+0x124>
   84dd8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84ddc:	d30c      	bcc.n	84df8 <__adddf3+0x10c>
   84dde:	0849      	lsrs	r1, r1, #1
   84de0:	ea5f 0030 	movs.w	r0, r0, rrx
   84de4:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84de8:	f104 0401 	add.w	r4, r4, #1
   84dec:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84df0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84df4:	f080 809a 	bcs.w	84f2c <__adddf3+0x240>
   84df8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84dfc:	bf08      	it	eq
   84dfe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84e02:	f150 0000 	adcs.w	r0, r0, #0
   84e06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84e0a:	ea41 0105 	orr.w	r1, r1, r5
   84e0e:	bd30      	pop	{r4, r5, pc}
   84e10:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84e14:	4140      	adcs	r0, r0
   84e16:	eb41 0101 	adc.w	r1, r1, r1
   84e1a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84e1e:	f1a4 0401 	sub.w	r4, r4, #1
   84e22:	d1e9      	bne.n	84df8 <__adddf3+0x10c>
   84e24:	f091 0f00 	teq	r1, #0
   84e28:	bf04      	itt	eq
   84e2a:	4601      	moveq	r1, r0
   84e2c:	2000      	moveq	r0, #0
   84e2e:	fab1 f381 	clz	r3, r1
   84e32:	bf08      	it	eq
   84e34:	3320      	addeq	r3, #32
   84e36:	f1a3 030b 	sub.w	r3, r3, #11
   84e3a:	f1b3 0220 	subs.w	r2, r3, #32
   84e3e:	da0c      	bge.n	84e5a <__adddf3+0x16e>
   84e40:	320c      	adds	r2, #12
   84e42:	dd08      	ble.n	84e56 <__adddf3+0x16a>
   84e44:	f102 0c14 	add.w	ip, r2, #20
   84e48:	f1c2 020c 	rsb	r2, r2, #12
   84e4c:	fa01 f00c 	lsl.w	r0, r1, ip
   84e50:	fa21 f102 	lsr.w	r1, r1, r2
   84e54:	e00c      	b.n	84e70 <__adddf3+0x184>
   84e56:	f102 0214 	add.w	r2, r2, #20
   84e5a:	bfd8      	it	le
   84e5c:	f1c2 0c20 	rsble	ip, r2, #32
   84e60:	fa01 f102 	lsl.w	r1, r1, r2
   84e64:	fa20 fc0c 	lsr.w	ip, r0, ip
   84e68:	bfdc      	itt	le
   84e6a:	ea41 010c 	orrle.w	r1, r1, ip
   84e6e:	4090      	lslle	r0, r2
   84e70:	1ae4      	subs	r4, r4, r3
   84e72:	bfa2      	ittt	ge
   84e74:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84e78:	4329      	orrge	r1, r5
   84e7a:	bd30      	popge	{r4, r5, pc}
   84e7c:	ea6f 0404 	mvn.w	r4, r4
   84e80:	3c1f      	subs	r4, #31
   84e82:	da1c      	bge.n	84ebe <__adddf3+0x1d2>
   84e84:	340c      	adds	r4, #12
   84e86:	dc0e      	bgt.n	84ea6 <__adddf3+0x1ba>
   84e88:	f104 0414 	add.w	r4, r4, #20
   84e8c:	f1c4 0220 	rsb	r2, r4, #32
   84e90:	fa20 f004 	lsr.w	r0, r0, r4
   84e94:	fa01 f302 	lsl.w	r3, r1, r2
   84e98:	ea40 0003 	orr.w	r0, r0, r3
   84e9c:	fa21 f304 	lsr.w	r3, r1, r4
   84ea0:	ea45 0103 	orr.w	r1, r5, r3
   84ea4:	bd30      	pop	{r4, r5, pc}
   84ea6:	f1c4 040c 	rsb	r4, r4, #12
   84eaa:	f1c4 0220 	rsb	r2, r4, #32
   84eae:	fa20 f002 	lsr.w	r0, r0, r2
   84eb2:	fa01 f304 	lsl.w	r3, r1, r4
   84eb6:	ea40 0003 	orr.w	r0, r0, r3
   84eba:	4629      	mov	r1, r5
   84ebc:	bd30      	pop	{r4, r5, pc}
   84ebe:	fa21 f004 	lsr.w	r0, r1, r4
   84ec2:	4629      	mov	r1, r5
   84ec4:	bd30      	pop	{r4, r5, pc}
   84ec6:	f094 0f00 	teq	r4, #0
   84eca:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84ece:	bf06      	itte	eq
   84ed0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84ed4:	3401      	addeq	r4, #1
   84ed6:	3d01      	subne	r5, #1
   84ed8:	e74e      	b.n	84d78 <__adddf3+0x8c>
   84eda:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84ede:	bf18      	it	ne
   84ee0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84ee4:	d029      	beq.n	84f3a <__adddf3+0x24e>
   84ee6:	ea94 0f05 	teq	r4, r5
   84eea:	bf08      	it	eq
   84eec:	ea90 0f02 	teqeq	r0, r2
   84ef0:	d005      	beq.n	84efe <__adddf3+0x212>
   84ef2:	ea54 0c00 	orrs.w	ip, r4, r0
   84ef6:	bf04      	itt	eq
   84ef8:	4619      	moveq	r1, r3
   84efa:	4610      	moveq	r0, r2
   84efc:	bd30      	pop	{r4, r5, pc}
   84efe:	ea91 0f03 	teq	r1, r3
   84f02:	bf1e      	ittt	ne
   84f04:	2100      	movne	r1, #0
   84f06:	2000      	movne	r0, #0
   84f08:	bd30      	popne	{r4, r5, pc}
   84f0a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84f0e:	d105      	bne.n	84f1c <__adddf3+0x230>
   84f10:	0040      	lsls	r0, r0, #1
   84f12:	4149      	adcs	r1, r1
   84f14:	bf28      	it	cs
   84f16:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84f1a:	bd30      	pop	{r4, r5, pc}
   84f1c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84f20:	bf3c      	itt	cc
   84f22:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84f26:	bd30      	popcc	{r4, r5, pc}
   84f28:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84f2c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84f30:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84f34:	f04f 0000 	mov.w	r0, #0
   84f38:	bd30      	pop	{r4, r5, pc}
   84f3a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84f3e:	bf1a      	itte	ne
   84f40:	4619      	movne	r1, r3
   84f42:	4610      	movne	r0, r2
   84f44:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84f48:	bf1c      	itt	ne
   84f4a:	460b      	movne	r3, r1
   84f4c:	4602      	movne	r2, r0
   84f4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84f52:	bf06      	itte	eq
   84f54:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84f58:	ea91 0f03 	teqeq	r1, r3
   84f5c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84f60:	bd30      	pop	{r4, r5, pc}
   84f62:	bf00      	nop

00084f64 <__aeabi_ui2d>:
   84f64:	f090 0f00 	teq	r0, #0
   84f68:	bf04      	itt	eq
   84f6a:	2100      	moveq	r1, #0
   84f6c:	4770      	bxeq	lr
   84f6e:	b530      	push	{r4, r5, lr}
   84f70:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84f74:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84f78:	f04f 0500 	mov.w	r5, #0
   84f7c:	f04f 0100 	mov.w	r1, #0
   84f80:	e750      	b.n	84e24 <__adddf3+0x138>
   84f82:	bf00      	nop

00084f84 <__aeabi_i2d>:
   84f84:	f090 0f00 	teq	r0, #0
   84f88:	bf04      	itt	eq
   84f8a:	2100      	moveq	r1, #0
   84f8c:	4770      	bxeq	lr
   84f8e:	b530      	push	{r4, r5, lr}
   84f90:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84f94:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84f98:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84f9c:	bf48      	it	mi
   84f9e:	4240      	negmi	r0, r0
   84fa0:	f04f 0100 	mov.w	r1, #0
   84fa4:	e73e      	b.n	84e24 <__adddf3+0x138>
   84fa6:	bf00      	nop

00084fa8 <__aeabi_f2d>:
   84fa8:	0042      	lsls	r2, r0, #1
   84faa:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84fae:	ea4f 0131 	mov.w	r1, r1, rrx
   84fb2:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84fb6:	bf1f      	itttt	ne
   84fb8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84fbc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84fc0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84fc4:	4770      	bxne	lr
   84fc6:	f092 0f00 	teq	r2, #0
   84fca:	bf14      	ite	ne
   84fcc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84fd0:	4770      	bxeq	lr
   84fd2:	b530      	push	{r4, r5, lr}
   84fd4:	f44f 7460 	mov.w	r4, #896	; 0x380
   84fd8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84fdc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84fe0:	e720      	b.n	84e24 <__adddf3+0x138>
   84fe2:	bf00      	nop

00084fe4 <__aeabi_ul2d>:
   84fe4:	ea50 0201 	orrs.w	r2, r0, r1
   84fe8:	bf08      	it	eq
   84fea:	4770      	bxeq	lr
   84fec:	b530      	push	{r4, r5, lr}
   84fee:	f04f 0500 	mov.w	r5, #0
   84ff2:	e00a      	b.n	8500a <__aeabi_l2d+0x16>

00084ff4 <__aeabi_l2d>:
   84ff4:	ea50 0201 	orrs.w	r2, r0, r1
   84ff8:	bf08      	it	eq
   84ffa:	4770      	bxeq	lr
   84ffc:	b530      	push	{r4, r5, lr}
   84ffe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   85002:	d502      	bpl.n	8500a <__aeabi_l2d+0x16>
   85004:	4240      	negs	r0, r0
   85006:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8500a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8500e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   85012:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   85016:	f43f aedc 	beq.w	84dd2 <__adddf3+0xe6>
   8501a:	f04f 0203 	mov.w	r2, #3
   8501e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   85022:	bf18      	it	ne
   85024:	3203      	addne	r2, #3
   85026:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8502a:	bf18      	it	ne
   8502c:	3203      	addne	r2, #3
   8502e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   85032:	f1c2 0320 	rsb	r3, r2, #32
   85036:	fa00 fc03 	lsl.w	ip, r0, r3
   8503a:	fa20 f002 	lsr.w	r0, r0, r2
   8503e:	fa01 fe03 	lsl.w	lr, r1, r3
   85042:	ea40 000e 	orr.w	r0, r0, lr
   85046:	fa21 f102 	lsr.w	r1, r1, r2
   8504a:	4414      	add	r4, r2
   8504c:	e6c1      	b.n	84dd2 <__adddf3+0xe6>
   8504e:	bf00      	nop

00085050 <__aeabi_dmul>:
   85050:	b570      	push	{r4, r5, r6, lr}
   85052:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85056:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8505a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8505e:	bf1d      	ittte	ne
   85060:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85064:	ea94 0f0c 	teqne	r4, ip
   85068:	ea95 0f0c 	teqne	r5, ip
   8506c:	f000 f8de 	bleq	8522c <__aeabi_dmul+0x1dc>
   85070:	442c      	add	r4, r5
   85072:	ea81 0603 	eor.w	r6, r1, r3
   85076:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   8507a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   8507e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   85082:	bf18      	it	ne
   85084:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   85088:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8508c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85090:	d038      	beq.n	85104 <__aeabi_dmul+0xb4>
   85092:	fba0 ce02 	umull	ip, lr, r0, r2
   85096:	f04f 0500 	mov.w	r5, #0
   8509a:	fbe1 e502 	umlal	lr, r5, r1, r2
   8509e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   850a2:	fbe0 e503 	umlal	lr, r5, r0, r3
   850a6:	f04f 0600 	mov.w	r6, #0
   850aa:	fbe1 5603 	umlal	r5, r6, r1, r3
   850ae:	f09c 0f00 	teq	ip, #0
   850b2:	bf18      	it	ne
   850b4:	f04e 0e01 	orrne.w	lr, lr, #1
   850b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   850bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   850c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   850c4:	d204      	bcs.n	850d0 <__aeabi_dmul+0x80>
   850c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   850ca:	416d      	adcs	r5, r5
   850cc:	eb46 0606 	adc.w	r6, r6, r6
   850d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   850d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   850d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   850dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   850e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   850e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   850e8:	bf88      	it	hi
   850ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   850ee:	d81e      	bhi.n	8512e <__aeabi_dmul+0xde>
   850f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   850f4:	bf08      	it	eq
   850f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   850fa:	f150 0000 	adcs.w	r0, r0, #0
   850fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85102:	bd70      	pop	{r4, r5, r6, pc}
   85104:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   85108:	ea46 0101 	orr.w	r1, r6, r1
   8510c:	ea40 0002 	orr.w	r0, r0, r2
   85110:	ea81 0103 	eor.w	r1, r1, r3
   85114:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   85118:	bfc2      	ittt	gt
   8511a:	ebd4 050c 	rsbsgt	r5, r4, ip
   8511e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85122:	bd70      	popgt	{r4, r5, r6, pc}
   85124:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85128:	f04f 0e00 	mov.w	lr, #0
   8512c:	3c01      	subs	r4, #1
   8512e:	f300 80ab 	bgt.w	85288 <__aeabi_dmul+0x238>
   85132:	f114 0f36 	cmn.w	r4, #54	; 0x36
   85136:	bfde      	ittt	le
   85138:	2000      	movle	r0, #0
   8513a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   8513e:	bd70      	pople	{r4, r5, r6, pc}
   85140:	f1c4 0400 	rsb	r4, r4, #0
   85144:	3c20      	subs	r4, #32
   85146:	da35      	bge.n	851b4 <__aeabi_dmul+0x164>
   85148:	340c      	adds	r4, #12
   8514a:	dc1b      	bgt.n	85184 <__aeabi_dmul+0x134>
   8514c:	f104 0414 	add.w	r4, r4, #20
   85150:	f1c4 0520 	rsb	r5, r4, #32
   85154:	fa00 f305 	lsl.w	r3, r0, r5
   85158:	fa20 f004 	lsr.w	r0, r0, r4
   8515c:	fa01 f205 	lsl.w	r2, r1, r5
   85160:	ea40 0002 	orr.w	r0, r0, r2
   85164:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85168:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   8516c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85170:	fa21 f604 	lsr.w	r6, r1, r4
   85174:	eb42 0106 	adc.w	r1, r2, r6
   85178:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8517c:	bf08      	it	eq
   8517e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85182:	bd70      	pop	{r4, r5, r6, pc}
   85184:	f1c4 040c 	rsb	r4, r4, #12
   85188:	f1c4 0520 	rsb	r5, r4, #32
   8518c:	fa00 f304 	lsl.w	r3, r0, r4
   85190:	fa20 f005 	lsr.w	r0, r0, r5
   85194:	fa01 f204 	lsl.w	r2, r1, r4
   85198:	ea40 0002 	orr.w	r0, r0, r2
   8519c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   851a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   851a4:	f141 0100 	adc.w	r1, r1, #0
   851a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   851ac:	bf08      	it	eq
   851ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   851b2:	bd70      	pop	{r4, r5, r6, pc}
   851b4:	f1c4 0520 	rsb	r5, r4, #32
   851b8:	fa00 f205 	lsl.w	r2, r0, r5
   851bc:	ea4e 0e02 	orr.w	lr, lr, r2
   851c0:	fa20 f304 	lsr.w	r3, r0, r4
   851c4:	fa01 f205 	lsl.w	r2, r1, r5
   851c8:	ea43 0302 	orr.w	r3, r3, r2
   851cc:	fa21 f004 	lsr.w	r0, r1, r4
   851d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   851d4:	fa21 f204 	lsr.w	r2, r1, r4
   851d8:	ea20 0002 	bic.w	r0, r0, r2
   851dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   851e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   851e4:	bf08      	it	eq
   851e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   851ea:	bd70      	pop	{r4, r5, r6, pc}
   851ec:	f094 0f00 	teq	r4, #0
   851f0:	d10f      	bne.n	85212 <__aeabi_dmul+0x1c2>
   851f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   851f6:	0040      	lsls	r0, r0, #1
   851f8:	eb41 0101 	adc.w	r1, r1, r1
   851fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85200:	bf08      	it	eq
   85202:	3c01      	subeq	r4, #1
   85204:	d0f7      	beq.n	851f6 <__aeabi_dmul+0x1a6>
   85206:	ea41 0106 	orr.w	r1, r1, r6
   8520a:	f095 0f00 	teq	r5, #0
   8520e:	bf18      	it	ne
   85210:	4770      	bxne	lr
   85212:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   85216:	0052      	lsls	r2, r2, #1
   85218:	eb43 0303 	adc.w	r3, r3, r3
   8521c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85220:	bf08      	it	eq
   85222:	3d01      	subeq	r5, #1
   85224:	d0f7      	beq.n	85216 <__aeabi_dmul+0x1c6>
   85226:	ea43 0306 	orr.w	r3, r3, r6
   8522a:	4770      	bx	lr
   8522c:	ea94 0f0c 	teq	r4, ip
   85230:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85234:	bf18      	it	ne
   85236:	ea95 0f0c 	teqne	r5, ip
   8523a:	d00c      	beq.n	85256 <__aeabi_dmul+0x206>
   8523c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85240:	bf18      	it	ne
   85242:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85246:	d1d1      	bne.n	851ec <__aeabi_dmul+0x19c>
   85248:	ea81 0103 	eor.w	r1, r1, r3
   8524c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85250:	f04f 0000 	mov.w	r0, #0
   85254:	bd70      	pop	{r4, r5, r6, pc}
   85256:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8525a:	bf06      	itte	eq
   8525c:	4610      	moveq	r0, r2
   8525e:	4619      	moveq	r1, r3
   85260:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85264:	d019      	beq.n	8529a <__aeabi_dmul+0x24a>
   85266:	ea94 0f0c 	teq	r4, ip
   8526a:	d102      	bne.n	85272 <__aeabi_dmul+0x222>
   8526c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85270:	d113      	bne.n	8529a <__aeabi_dmul+0x24a>
   85272:	ea95 0f0c 	teq	r5, ip
   85276:	d105      	bne.n	85284 <__aeabi_dmul+0x234>
   85278:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   8527c:	bf1c      	itt	ne
   8527e:	4610      	movne	r0, r2
   85280:	4619      	movne	r1, r3
   85282:	d10a      	bne.n	8529a <__aeabi_dmul+0x24a>
   85284:	ea81 0103 	eor.w	r1, r1, r3
   85288:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8528c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85290:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85294:	f04f 0000 	mov.w	r0, #0
   85298:	bd70      	pop	{r4, r5, r6, pc}
   8529a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8529e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   852a2:	bd70      	pop	{r4, r5, r6, pc}

000852a4 <__aeabi_ddiv>:
   852a4:	b570      	push	{r4, r5, r6, lr}
   852a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
   852aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   852ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   852b2:	bf1d      	ittte	ne
   852b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   852b8:	ea94 0f0c 	teqne	r4, ip
   852bc:	ea95 0f0c 	teqne	r5, ip
   852c0:	f000 f8a7 	bleq	85412 <__aeabi_ddiv+0x16e>
   852c4:	eba4 0405 	sub.w	r4, r4, r5
   852c8:	ea81 0e03 	eor.w	lr, r1, r3
   852cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   852d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   852d4:	f000 8088 	beq.w	853e8 <__aeabi_ddiv+0x144>
   852d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   852dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   852e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   852e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   852e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
   852ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   852f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   852f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
   852f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   852fc:	429d      	cmp	r5, r3
   852fe:	bf08      	it	eq
   85300:	4296      	cmpeq	r6, r2
   85302:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   85306:	f504 7440 	add.w	r4, r4, #768	; 0x300
   8530a:	d202      	bcs.n	85312 <__aeabi_ddiv+0x6e>
   8530c:	085b      	lsrs	r3, r3, #1
   8530e:	ea4f 0232 	mov.w	r2, r2, rrx
   85312:	1ab6      	subs	r6, r6, r2
   85314:	eb65 0503 	sbc.w	r5, r5, r3
   85318:	085b      	lsrs	r3, r3, #1
   8531a:	ea4f 0232 	mov.w	r2, r2, rrx
   8531e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   85322:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   85326:	ebb6 0e02 	subs.w	lr, r6, r2
   8532a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8532e:	bf22      	ittt	cs
   85330:	1ab6      	subcs	r6, r6, r2
   85332:	4675      	movcs	r5, lr
   85334:	ea40 000c 	orrcs.w	r0, r0, ip
   85338:	085b      	lsrs	r3, r3, #1
   8533a:	ea4f 0232 	mov.w	r2, r2, rrx
   8533e:	ebb6 0e02 	subs.w	lr, r6, r2
   85342:	eb75 0e03 	sbcs.w	lr, r5, r3
   85346:	bf22      	ittt	cs
   85348:	1ab6      	subcs	r6, r6, r2
   8534a:	4675      	movcs	r5, lr
   8534c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85350:	085b      	lsrs	r3, r3, #1
   85352:	ea4f 0232 	mov.w	r2, r2, rrx
   85356:	ebb6 0e02 	subs.w	lr, r6, r2
   8535a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8535e:	bf22      	ittt	cs
   85360:	1ab6      	subcs	r6, r6, r2
   85362:	4675      	movcs	r5, lr
   85364:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85368:	085b      	lsrs	r3, r3, #1
   8536a:	ea4f 0232 	mov.w	r2, r2, rrx
   8536e:	ebb6 0e02 	subs.w	lr, r6, r2
   85372:	eb75 0e03 	sbcs.w	lr, r5, r3
   85376:	bf22      	ittt	cs
   85378:	1ab6      	subcs	r6, r6, r2
   8537a:	4675      	movcs	r5, lr
   8537c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85380:	ea55 0e06 	orrs.w	lr, r5, r6
   85384:	d018      	beq.n	853b8 <__aeabi_ddiv+0x114>
   85386:	ea4f 1505 	mov.w	r5, r5, lsl #4
   8538a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8538e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   85392:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   85396:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   8539a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8539e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   853a2:	d1c0      	bne.n	85326 <__aeabi_ddiv+0x82>
   853a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   853a8:	d10b      	bne.n	853c2 <__aeabi_ddiv+0x11e>
   853aa:	ea41 0100 	orr.w	r1, r1, r0
   853ae:	f04f 0000 	mov.w	r0, #0
   853b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   853b6:	e7b6      	b.n	85326 <__aeabi_ddiv+0x82>
   853b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   853bc:	bf04      	itt	eq
   853be:	4301      	orreq	r1, r0
   853c0:	2000      	moveq	r0, #0
   853c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   853c6:	bf88      	it	hi
   853c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   853cc:	f63f aeaf 	bhi.w	8512e <__aeabi_dmul+0xde>
   853d0:	ebb5 0c03 	subs.w	ip, r5, r3
   853d4:	bf04      	itt	eq
   853d6:	ebb6 0c02 	subseq.w	ip, r6, r2
   853da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   853de:	f150 0000 	adcs.w	r0, r0, #0
   853e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   853e6:	bd70      	pop	{r4, r5, r6, pc}
   853e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   853ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   853f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   853f4:	bfc2      	ittt	gt
   853f6:	ebd4 050c 	rsbsgt	r5, r4, ip
   853fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   853fe:	bd70      	popgt	{r4, r5, r6, pc}
   85400:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85404:	f04f 0e00 	mov.w	lr, #0
   85408:	3c01      	subs	r4, #1
   8540a:	e690      	b.n	8512e <__aeabi_dmul+0xde>
   8540c:	ea45 0e06 	orr.w	lr, r5, r6
   85410:	e68d      	b.n	8512e <__aeabi_dmul+0xde>
   85412:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85416:	ea94 0f0c 	teq	r4, ip
   8541a:	bf08      	it	eq
   8541c:	ea95 0f0c 	teqeq	r5, ip
   85420:	f43f af3b 	beq.w	8529a <__aeabi_dmul+0x24a>
   85424:	ea94 0f0c 	teq	r4, ip
   85428:	d10a      	bne.n	85440 <__aeabi_ddiv+0x19c>
   8542a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8542e:	f47f af34 	bne.w	8529a <__aeabi_dmul+0x24a>
   85432:	ea95 0f0c 	teq	r5, ip
   85436:	f47f af25 	bne.w	85284 <__aeabi_dmul+0x234>
   8543a:	4610      	mov	r0, r2
   8543c:	4619      	mov	r1, r3
   8543e:	e72c      	b.n	8529a <__aeabi_dmul+0x24a>
   85440:	ea95 0f0c 	teq	r5, ip
   85444:	d106      	bne.n	85454 <__aeabi_ddiv+0x1b0>
   85446:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8544a:	f43f aefd 	beq.w	85248 <__aeabi_dmul+0x1f8>
   8544e:	4610      	mov	r0, r2
   85450:	4619      	mov	r1, r3
   85452:	e722      	b.n	8529a <__aeabi_dmul+0x24a>
   85454:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85458:	bf18      	it	ne
   8545a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8545e:	f47f aec5 	bne.w	851ec <__aeabi_dmul+0x19c>
   85462:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   85466:	f47f af0d 	bne.w	85284 <__aeabi_dmul+0x234>
   8546a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8546e:	f47f aeeb 	bne.w	85248 <__aeabi_dmul+0x1f8>
   85472:	e712      	b.n	8529a <__aeabi_dmul+0x24a>

00085474 <__gedf2>:
   85474:	f04f 3cff 	mov.w	ip, #4294967295
   85478:	e006      	b.n	85488 <__cmpdf2+0x4>
   8547a:	bf00      	nop

0008547c <__ledf2>:
   8547c:	f04f 0c01 	mov.w	ip, #1
   85480:	e002      	b.n	85488 <__cmpdf2+0x4>
   85482:	bf00      	nop

00085484 <__cmpdf2>:
   85484:	f04f 0c01 	mov.w	ip, #1
   85488:	f84d cd04 	str.w	ip, [sp, #-4]!
   8548c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85490:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85494:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85498:	bf18      	it	ne
   8549a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8549e:	d01b      	beq.n	854d8 <__cmpdf2+0x54>
   854a0:	b001      	add	sp, #4
   854a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   854a6:	bf0c      	ite	eq
   854a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   854ac:	ea91 0f03 	teqne	r1, r3
   854b0:	bf02      	ittt	eq
   854b2:	ea90 0f02 	teqeq	r0, r2
   854b6:	2000      	moveq	r0, #0
   854b8:	4770      	bxeq	lr
   854ba:	f110 0f00 	cmn.w	r0, #0
   854be:	ea91 0f03 	teq	r1, r3
   854c2:	bf58      	it	pl
   854c4:	4299      	cmppl	r1, r3
   854c6:	bf08      	it	eq
   854c8:	4290      	cmpeq	r0, r2
   854ca:	bf2c      	ite	cs
   854cc:	17d8      	asrcs	r0, r3, #31
   854ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   854d2:	f040 0001 	orr.w	r0, r0, #1
   854d6:	4770      	bx	lr
   854d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   854dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   854e0:	d102      	bne.n	854e8 <__cmpdf2+0x64>
   854e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   854e6:	d107      	bne.n	854f8 <__cmpdf2+0x74>
   854e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   854ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   854f0:	d1d6      	bne.n	854a0 <__cmpdf2+0x1c>
   854f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   854f6:	d0d3      	beq.n	854a0 <__cmpdf2+0x1c>
   854f8:	f85d 0b04 	ldr.w	r0, [sp], #4
   854fc:	4770      	bx	lr
   854fe:	bf00      	nop

00085500 <__aeabi_cdrcmple>:
   85500:	4684      	mov	ip, r0
   85502:	4610      	mov	r0, r2
   85504:	4662      	mov	r2, ip
   85506:	468c      	mov	ip, r1
   85508:	4619      	mov	r1, r3
   8550a:	4663      	mov	r3, ip
   8550c:	e000      	b.n	85510 <__aeabi_cdcmpeq>
   8550e:	bf00      	nop

00085510 <__aeabi_cdcmpeq>:
   85510:	b501      	push	{r0, lr}
   85512:	f7ff ffb7 	bl	85484 <__cmpdf2>
   85516:	2800      	cmp	r0, #0
   85518:	bf48      	it	mi
   8551a:	f110 0f00 	cmnmi.w	r0, #0
   8551e:	bd01      	pop	{r0, pc}

00085520 <__aeabi_dcmpeq>:
   85520:	f84d ed08 	str.w	lr, [sp, #-8]!
   85524:	f7ff fff4 	bl	85510 <__aeabi_cdcmpeq>
   85528:	bf0c      	ite	eq
   8552a:	2001      	moveq	r0, #1
   8552c:	2000      	movne	r0, #0
   8552e:	f85d fb08 	ldr.w	pc, [sp], #8
   85532:	bf00      	nop

00085534 <__aeabi_dcmplt>:
   85534:	f84d ed08 	str.w	lr, [sp, #-8]!
   85538:	f7ff ffea 	bl	85510 <__aeabi_cdcmpeq>
   8553c:	bf34      	ite	cc
   8553e:	2001      	movcc	r0, #1
   85540:	2000      	movcs	r0, #0
   85542:	f85d fb08 	ldr.w	pc, [sp], #8
   85546:	bf00      	nop

00085548 <__aeabi_dcmple>:
   85548:	f84d ed08 	str.w	lr, [sp, #-8]!
   8554c:	f7ff ffe0 	bl	85510 <__aeabi_cdcmpeq>
   85550:	bf94      	ite	ls
   85552:	2001      	movls	r0, #1
   85554:	2000      	movhi	r0, #0
   85556:	f85d fb08 	ldr.w	pc, [sp], #8
   8555a:	bf00      	nop

0008555c <__aeabi_dcmpge>:
   8555c:	f84d ed08 	str.w	lr, [sp, #-8]!
   85560:	f7ff ffce 	bl	85500 <__aeabi_cdrcmple>
   85564:	bf94      	ite	ls
   85566:	2001      	movls	r0, #1
   85568:	2000      	movhi	r0, #0
   8556a:	f85d fb08 	ldr.w	pc, [sp], #8
   8556e:	bf00      	nop

00085570 <__aeabi_dcmpgt>:
   85570:	f84d ed08 	str.w	lr, [sp, #-8]!
   85574:	f7ff ffc4 	bl	85500 <__aeabi_cdrcmple>
   85578:	bf34      	ite	cc
   8557a:	2001      	movcc	r0, #1
   8557c:	2000      	movcs	r0, #0
   8557e:	f85d fb08 	ldr.w	pc, [sp], #8
   85582:	bf00      	nop

00085584 <__aeabi_d2iz>:
   85584:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85588:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   8558c:	d215      	bcs.n	855ba <__aeabi_d2iz+0x36>
   8558e:	d511      	bpl.n	855b4 <__aeabi_d2iz+0x30>
   85590:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   85594:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85598:	d912      	bls.n	855c0 <__aeabi_d2iz+0x3c>
   8559a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8559e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   855a2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   855a6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   855aa:	fa23 f002 	lsr.w	r0, r3, r2
   855ae:	bf18      	it	ne
   855b0:	4240      	negne	r0, r0
   855b2:	4770      	bx	lr
   855b4:	f04f 0000 	mov.w	r0, #0
   855b8:	4770      	bx	lr
   855ba:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   855be:	d105      	bne.n	855cc <__aeabi_d2iz+0x48>
   855c0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   855c4:	bf08      	it	eq
   855c6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   855ca:	4770      	bx	lr
   855cc:	f04f 0000 	mov.w	r0, #0
   855d0:	4770      	bx	lr
   855d2:	bf00      	nop

000855d4 <__aeabi_uldivmod>:
   855d4:	b953      	cbnz	r3, 855ec <__aeabi_uldivmod+0x18>
   855d6:	b94a      	cbnz	r2, 855ec <__aeabi_uldivmod+0x18>
   855d8:	2900      	cmp	r1, #0
   855da:	bf08      	it	eq
   855dc:	2800      	cmpeq	r0, #0
   855de:	bf1c      	itt	ne
   855e0:	f04f 31ff 	movne.w	r1, #4294967295
   855e4:	f04f 30ff 	movne.w	r0, #4294967295
   855e8:	f000 b83c 	b.w	85664 <__aeabi_idiv0>
   855ec:	b082      	sub	sp, #8
   855ee:	46ec      	mov	ip, sp
   855f0:	e92d 5000 	stmdb	sp!, {ip, lr}
   855f4:	f000 f81e 	bl	85634 <__gnu_uldivmod_helper>
   855f8:	f8dd e004 	ldr.w	lr, [sp, #4]
   855fc:	b002      	add	sp, #8
   855fe:	bc0c      	pop	{r2, r3}
   85600:	4770      	bx	lr
   85602:	bf00      	nop

00085604 <__gnu_ldivmod_helper>:
   85604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85608:	9c06      	ldr	r4, [sp, #24]
   8560a:	4690      	mov	r8, r2
   8560c:	4606      	mov	r6, r0
   8560e:	460f      	mov	r7, r1
   85610:	461d      	mov	r5, r3
   85612:	f000 f829 	bl	85668 <__divdi3>
   85616:	fb08 fc01 	mul.w	ip, r8, r1
   8561a:	fba8 2300 	umull	r2, r3, r8, r0
   8561e:	fb00 c505 	mla	r5, r0, r5, ip
   85622:	1ab2      	subs	r2, r6, r2
   85624:	442b      	add	r3, r5
   85626:	eb67 0303 	sbc.w	r3, r7, r3
   8562a:	4686      	mov	lr, r0
   8562c:	e9c4 2300 	strd	r2, r3, [r4]
   85630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00085634 <__gnu_uldivmod_helper>:
   85634:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   85638:	9e08      	ldr	r6, [sp, #32]
   8563a:	4617      	mov	r7, r2
   8563c:	4680      	mov	r8, r0
   8563e:	4689      	mov	r9, r1
   85640:	461d      	mov	r5, r3
   85642:	f000 f967 	bl	85914 <__udivdi3>
   85646:	fb00 f305 	mul.w	r3, r0, r5
   8564a:	fba0 4507 	umull	r4, r5, r0, r7
   8564e:	fb07 3701 	mla	r7, r7, r1, r3
   85652:	ebb8 0404 	subs.w	r4, r8, r4
   85656:	443d      	add	r5, r7
   85658:	eb69 0505 	sbc.w	r5, r9, r5
   8565c:	e9c6 4500 	strd	r4, r5, [r6]
   85660:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00085664 <__aeabi_idiv0>:
   85664:	4770      	bx	lr
   85666:	bf00      	nop

00085668 <__divdi3>:
   85668:	2900      	cmp	r1, #0
   8566a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8566e:	f2c0 80a8 	blt.w	857c2 <__divdi3+0x15a>
   85672:	2600      	movs	r6, #0
   85674:	2b00      	cmp	r3, #0
   85676:	f2c0 809e 	blt.w	857b6 <__divdi3+0x14e>
   8567a:	4681      	mov	r9, r0
   8567c:	468e      	mov	lr, r1
   8567e:	4690      	mov	r8, r2
   85680:	469c      	mov	ip, r3
   85682:	4617      	mov	r7, r2
   85684:	4604      	mov	r4, r0
   85686:	460d      	mov	r5, r1
   85688:	2b00      	cmp	r3, #0
   8568a:	d13d      	bne.n	85708 <__divdi3+0xa0>
   8568c:	428a      	cmp	r2, r1
   8568e:	d959      	bls.n	85744 <__divdi3+0xdc>
   85690:	fab2 f382 	clz	r3, r2
   85694:	b13b      	cbz	r3, 856a6 <__divdi3+0x3e>
   85696:	f1c3 0220 	rsb	r2, r3, #32
   8569a:	409d      	lsls	r5, r3
   8569c:	fa20 f202 	lsr.w	r2, r0, r2
   856a0:	409f      	lsls	r7, r3
   856a2:	4315      	orrs	r5, r2
   856a4:	409c      	lsls	r4, r3
   856a6:	0c39      	lsrs	r1, r7, #16
   856a8:	fbb5 f0f1 	udiv	r0, r5, r1
   856ac:	fa1f fe87 	uxth.w	lr, r7
   856b0:	fb01 5510 	mls	r5, r1, r0, r5
   856b4:	fb0e f300 	mul.w	r3, lr, r0
   856b8:	0c22      	lsrs	r2, r4, #16
   856ba:	ea42 4505 	orr.w	r5, r2, r5, lsl #16
   856be:	42ab      	cmp	r3, r5
   856c0:	d909      	bls.n	856d6 <__divdi3+0x6e>
   856c2:	19ed      	adds	r5, r5, r7
   856c4:	f100 32ff 	add.w	r2, r0, #4294967295
   856c8:	f080 810b 	bcs.w	858e2 <__divdi3+0x27a>
   856cc:	42ab      	cmp	r3, r5
   856ce:	f240 8108 	bls.w	858e2 <__divdi3+0x27a>
   856d2:	3802      	subs	r0, #2
   856d4:	443d      	add	r5, r7
   856d6:	1aed      	subs	r5, r5, r3
   856d8:	fbb5 f3f1 	udiv	r3, r5, r1
   856dc:	fb01 5513 	mls	r5, r1, r3, r5
   856e0:	fb0e fe03 	mul.w	lr, lr, r3
   856e4:	b2a4      	uxth	r4, r4
   856e6:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
   856ea:	45ae      	cmp	lr, r5
   856ec:	d908      	bls.n	85700 <__divdi3+0x98>
   856ee:	19ed      	adds	r5, r5, r7
   856f0:	f103 32ff 	add.w	r2, r3, #4294967295
   856f4:	f080 80f7 	bcs.w	858e6 <__divdi3+0x27e>
   856f8:	45ae      	cmp	lr, r5
   856fa:	f240 80f4 	bls.w	858e6 <__divdi3+0x27e>
   856fe:	3b02      	subs	r3, #2
   85700:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
   85704:	2200      	movs	r2, #0
   85706:	e003      	b.n	85710 <__divdi3+0xa8>
   85708:	428b      	cmp	r3, r1
   8570a:	d90f      	bls.n	8572c <__divdi3+0xc4>
   8570c:	2200      	movs	r2, #0
   8570e:	4613      	mov	r3, r2
   85710:	1c34      	adds	r4, r6, #0
   85712:	bf18      	it	ne
   85714:	2401      	movne	r4, #1
   85716:	4260      	negs	r0, r4
   85718:	f04f 0500 	mov.w	r5, #0
   8571c:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
   85720:	4058      	eors	r0, r3
   85722:	4051      	eors	r1, r2
   85724:	1900      	adds	r0, r0, r4
   85726:	4169      	adcs	r1, r5
   85728:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8572c:	fab3 f283 	clz	r2, r3
   85730:	2a00      	cmp	r2, #0
   85732:	f040 8089 	bne.w	85848 <__divdi3+0x1e0>
   85736:	428b      	cmp	r3, r1
   85738:	d302      	bcc.n	85740 <__divdi3+0xd8>
   8573a:	4580      	cmp	r8, r0
   8573c:	f200 80e2 	bhi.w	85904 <__divdi3+0x29c>
   85740:	2301      	movs	r3, #1
   85742:	e7e5      	b.n	85710 <__divdi3+0xa8>
   85744:	b912      	cbnz	r2, 8574c <__divdi3+0xe4>
   85746:	2301      	movs	r3, #1
   85748:	fbb3 f7f2 	udiv	r7, r3, r2
   8574c:	fab7 f887 	clz	r8, r7
   85750:	f1b8 0f00 	cmp.w	r8, #0
   85754:	d13b      	bne.n	857ce <__divdi3+0x166>
   85756:	1bed      	subs	r5, r5, r7
   85758:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8575c:	fa1f fe87 	uxth.w	lr, r7
   85760:	2201      	movs	r2, #1
   85762:	fbb5 f0fc 	udiv	r0, r5, ip
   85766:	fb0c 5510 	mls	r5, ip, r0, r5
   8576a:	fb0e f300 	mul.w	r3, lr, r0
   8576e:	0c21      	lsrs	r1, r4, #16
   85770:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
   85774:	42ab      	cmp	r3, r5
   85776:	d907      	bls.n	85788 <__divdi3+0x120>
   85778:	19ed      	adds	r5, r5, r7
   8577a:	f100 31ff 	add.w	r1, r0, #4294967295
   8577e:	d202      	bcs.n	85786 <__divdi3+0x11e>
   85780:	42ab      	cmp	r3, r5
   85782:	f200 80c3 	bhi.w	8590c <__divdi3+0x2a4>
   85786:	4608      	mov	r0, r1
   85788:	1aed      	subs	r5, r5, r3
   8578a:	fbb5 f3fc 	udiv	r3, r5, ip
   8578e:	fb0c 5513 	mls	r5, ip, r3, r5
   85792:	fb0e fe03 	mul.w	lr, lr, r3
   85796:	b2a4      	uxth	r4, r4
   85798:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
   8579c:	45ae      	cmp	lr, r5
   8579e:	d907      	bls.n	857b0 <__divdi3+0x148>
   857a0:	19ed      	adds	r5, r5, r7
   857a2:	f103 31ff 	add.w	r1, r3, #4294967295
   857a6:	d202      	bcs.n	857ae <__divdi3+0x146>
   857a8:	45ae      	cmp	lr, r5
   857aa:	f200 80ad 	bhi.w	85908 <__divdi3+0x2a0>
   857ae:	460b      	mov	r3, r1
   857b0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
   857b4:	e7ac      	b.n	85710 <__divdi3+0xa8>
   857b6:	4252      	negs	r2, r2
   857b8:	ea6f 0606 	mvn.w	r6, r6
   857bc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   857c0:	e75b      	b.n	8567a <__divdi3+0x12>
   857c2:	4240      	negs	r0, r0
   857c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   857c8:	f04f 36ff 	mov.w	r6, #4294967295
   857cc:	e752      	b.n	85674 <__divdi3+0xc>
   857ce:	fa07 f708 	lsl.w	r7, r7, r8
   857d2:	f1c8 0220 	rsb	r2, r8, #32
   857d6:	fa25 f302 	lsr.w	r3, r5, r2
   857da:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   857de:	fbb3 f1fc 	udiv	r1, r3, ip
   857e2:	fa1f fe87 	uxth.w	lr, r7
   857e6:	fb0c 3311 	mls	r3, ip, r1, r3
   857ea:	fa24 f202 	lsr.w	r2, r4, r2
   857ee:	fa05 f508 	lsl.w	r5, r5, r8
   857f2:	fb0e f901 	mul.w	r9, lr, r1
   857f6:	432a      	orrs	r2, r5
   857f8:	0c10      	lsrs	r0, r2, #16
   857fa:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
   857fe:	4599      	cmp	r9, r3
   85800:	fa04 f408 	lsl.w	r4, r4, r8
   85804:	d907      	bls.n	85816 <__divdi3+0x1ae>
   85806:	19db      	adds	r3, r3, r7
   85808:	f101 30ff 	add.w	r0, r1, #4294967295
   8580c:	d278      	bcs.n	85900 <__divdi3+0x298>
   8580e:	4599      	cmp	r9, r3
   85810:	d976      	bls.n	85900 <__divdi3+0x298>
   85812:	3902      	subs	r1, #2
   85814:	443b      	add	r3, r7
   85816:	ebc9 0303 	rsb	r3, r9, r3
   8581a:	fbb3 f0fc 	udiv	r0, r3, ip
   8581e:	fb0c 3310 	mls	r3, ip, r0, r3
   85822:	fb0e f500 	mul.w	r5, lr, r0
   85826:	b292      	uxth	r2, r2
   85828:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   8582c:	429d      	cmp	r5, r3
   8582e:	d907      	bls.n	85840 <__divdi3+0x1d8>
   85830:	19db      	adds	r3, r3, r7
   85832:	f100 32ff 	add.w	r2, r0, #4294967295
   85836:	d25f      	bcs.n	858f8 <__divdi3+0x290>
   85838:	429d      	cmp	r5, r3
   8583a:	d95d      	bls.n	858f8 <__divdi3+0x290>
   8583c:	3802      	subs	r0, #2
   8583e:	443b      	add	r3, r7
   85840:	1b5d      	subs	r5, r3, r5
   85842:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
   85846:	e78c      	b.n	85762 <__divdi3+0xfa>
   85848:	f1c2 0320 	rsb	r3, r2, #32
   8584c:	fa28 f103 	lsr.w	r1, r8, r3
   85850:	fa0c fc02 	lsl.w	ip, ip, r2
   85854:	ea41 0c0c 	orr.w	ip, r1, ip
   85858:	ea4f 401c 	mov.w	r0, ip, lsr #16
   8585c:	fa2e f103 	lsr.w	r1, lr, r3
   85860:	fbb1 f5f0 	udiv	r5, r1, r0
   85864:	fa1f f78c 	uxth.w	r7, ip
   85868:	fb00 1115 	mls	r1, r0, r5, r1
   8586c:	fa29 f303 	lsr.w	r3, r9, r3
   85870:	fa0e fe02 	lsl.w	lr, lr, r2
   85874:	fb07 f905 	mul.w	r9, r7, r5
   85878:	ea43 0e0e 	orr.w	lr, r3, lr
   8587c:	ea4f 431e 	mov.w	r3, lr, lsr #16
   85880:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   85884:	4589      	cmp	r9, r1
   85886:	fa08 f802 	lsl.w	r8, r8, r2
   8588a:	d908      	bls.n	8589e <__divdi3+0x236>
   8588c:	eb11 010c 	adds.w	r1, r1, ip
   85890:	f105 33ff 	add.w	r3, r5, #4294967295
   85894:	d232      	bcs.n	858fc <__divdi3+0x294>
   85896:	4589      	cmp	r9, r1
   85898:	d930      	bls.n	858fc <__divdi3+0x294>
   8589a:	3d02      	subs	r5, #2
   8589c:	4461      	add	r1, ip
   8589e:	ebc9 0101 	rsb	r1, r9, r1
   858a2:	fbb1 f3f0 	udiv	r3, r1, r0
   858a6:	fb00 1113 	mls	r1, r0, r3, r1
   858aa:	fb07 f703 	mul.w	r7, r7, r3
   858ae:	fa1f fe8e 	uxth.w	lr, lr
   858b2:	ea4e 4e01 	orr.w	lr, lr, r1, lsl #16
   858b6:	4577      	cmp	r7, lr
   858b8:	d908      	bls.n	858cc <__divdi3+0x264>
   858ba:	eb1e 0e0c 	adds.w	lr, lr, ip
   858be:	f103 31ff 	add.w	r1, r3, #4294967295
   858c2:	d217      	bcs.n	858f4 <__divdi3+0x28c>
   858c4:	4577      	cmp	r7, lr
   858c6:	d915      	bls.n	858f4 <__divdi3+0x28c>
   858c8:	3b02      	subs	r3, #2
   858ca:	44e6      	add	lr, ip
   858cc:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
   858d0:	fba3 8908 	umull	r8, r9, r3, r8
   858d4:	ebc7 0e0e 	rsb	lr, r7, lr
   858d8:	45ce      	cmp	lr, r9
   858da:	d309      	bcc.n	858f0 <__divdi3+0x288>
   858dc:	d005      	beq.n	858ea <__divdi3+0x282>
   858de:	2200      	movs	r2, #0
   858e0:	e716      	b.n	85710 <__divdi3+0xa8>
   858e2:	4610      	mov	r0, r2
   858e4:	e6f7      	b.n	856d6 <__divdi3+0x6e>
   858e6:	4613      	mov	r3, r2
   858e8:	e70a      	b.n	85700 <__divdi3+0x98>
   858ea:	4094      	lsls	r4, r2
   858ec:	4544      	cmp	r4, r8
   858ee:	d2f6      	bcs.n	858de <__divdi3+0x276>
   858f0:	3b01      	subs	r3, #1
   858f2:	e7f4      	b.n	858de <__divdi3+0x276>
   858f4:	460b      	mov	r3, r1
   858f6:	e7e9      	b.n	858cc <__divdi3+0x264>
   858f8:	4610      	mov	r0, r2
   858fa:	e7a1      	b.n	85840 <__divdi3+0x1d8>
   858fc:	461d      	mov	r5, r3
   858fe:	e7ce      	b.n	8589e <__divdi3+0x236>
   85900:	4601      	mov	r1, r0
   85902:	e788      	b.n	85816 <__divdi3+0x1ae>
   85904:	4613      	mov	r3, r2
   85906:	e703      	b.n	85710 <__divdi3+0xa8>
   85908:	3b02      	subs	r3, #2
   8590a:	e751      	b.n	857b0 <__divdi3+0x148>
   8590c:	3802      	subs	r0, #2
   8590e:	443d      	add	r5, r7
   85910:	e73a      	b.n	85788 <__divdi3+0x120>
   85912:	bf00      	nop

00085914 <__udivdi3>:
   85914:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   85918:	2b00      	cmp	r3, #0
   8591a:	d144      	bne.n	859a6 <__udivdi3+0x92>
   8591c:	428a      	cmp	r2, r1
   8591e:	4615      	mov	r5, r2
   85920:	4604      	mov	r4, r0
   85922:	d94f      	bls.n	859c4 <__udivdi3+0xb0>
   85924:	fab2 f782 	clz	r7, r2
   85928:	460e      	mov	r6, r1
   8592a:	b14f      	cbz	r7, 85940 <__udivdi3+0x2c>
   8592c:	f1c7 0320 	rsb	r3, r7, #32
   85930:	40b9      	lsls	r1, r7
   85932:	fa20 f603 	lsr.w	r6, r0, r3
   85936:	fa02 f507 	lsl.w	r5, r2, r7
   8593a:	430e      	orrs	r6, r1
   8593c:	fa00 f407 	lsl.w	r4, r0, r7
   85940:	0c2f      	lsrs	r7, r5, #16
   85942:	fbb6 f0f7 	udiv	r0, r6, r7
   85946:	fa1f fe85 	uxth.w	lr, r5
   8594a:	fb07 6210 	mls	r2, r7, r0, r6
   8594e:	fb0e f100 	mul.w	r1, lr, r0
   85952:	0c26      	lsrs	r6, r4, #16
   85954:	ea46 4302 	orr.w	r3, r6, r2, lsl #16
   85958:	4299      	cmp	r1, r3
   8595a:	d909      	bls.n	85970 <__udivdi3+0x5c>
   8595c:	195b      	adds	r3, r3, r5
   8595e:	f100 32ff 	add.w	r2, r0, #4294967295
   85962:	f080 80ee 	bcs.w	85b42 <__udivdi3+0x22e>
   85966:	4299      	cmp	r1, r3
   85968:	f240 80eb 	bls.w	85b42 <__udivdi3+0x22e>
   8596c:	3802      	subs	r0, #2
   8596e:	442b      	add	r3, r5
   85970:	1a59      	subs	r1, r3, r1
   85972:	fbb1 f3f7 	udiv	r3, r1, r7
   85976:	fb07 1113 	mls	r1, r7, r3, r1
   8597a:	fb0e fe03 	mul.w	lr, lr, r3
   8597e:	b2a4      	uxth	r4, r4
   85980:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
   85984:	458e      	cmp	lr, r1
   85986:	d908      	bls.n	8599a <__udivdi3+0x86>
   85988:	1949      	adds	r1, r1, r5
   8598a:	f103 32ff 	add.w	r2, r3, #4294967295
   8598e:	f080 80da 	bcs.w	85b46 <__udivdi3+0x232>
   85992:	458e      	cmp	lr, r1
   85994:	f240 80d7 	bls.w	85b46 <__udivdi3+0x232>
   85998:	3b02      	subs	r3, #2
   8599a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   8599e:	2600      	movs	r6, #0
   859a0:	4631      	mov	r1, r6
   859a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   859a6:	428b      	cmp	r3, r1
   859a8:	d847      	bhi.n	85a3a <__udivdi3+0x126>
   859aa:	fab3 f683 	clz	r6, r3
   859ae:	2e00      	cmp	r6, #0
   859b0:	d148      	bne.n	85a44 <__udivdi3+0x130>
   859b2:	428b      	cmp	r3, r1
   859b4:	d302      	bcc.n	859bc <__udivdi3+0xa8>
   859b6:	4282      	cmp	r2, r0
   859b8:	f200 80cf 	bhi.w	85b5a <__udivdi3+0x246>
   859bc:	2001      	movs	r0, #1
   859be:	4631      	mov	r1, r6
   859c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   859c4:	b912      	cbnz	r2, 859cc <__udivdi3+0xb8>
   859c6:	2501      	movs	r5, #1
   859c8:	fbb5 f5f2 	udiv	r5, r5, r2
   859cc:	fab5 fc85 	clz	ip, r5
   859d0:	f1bc 0f00 	cmp.w	ip, #0
   859d4:	d178      	bne.n	85ac8 <__udivdi3+0x1b4>
   859d6:	1b49      	subs	r1, r1, r5
   859d8:	0c2f      	lsrs	r7, r5, #16
   859da:	fa1f fe85 	uxth.w	lr, r5
   859de:	2601      	movs	r6, #1
   859e0:	fbb1 f0f7 	udiv	r0, r1, r7
   859e4:	fb07 1110 	mls	r1, r7, r0, r1
   859e8:	fb0e f200 	mul.w	r2, lr, r0
   859ec:	0c23      	lsrs	r3, r4, #16
   859ee:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   859f2:	428a      	cmp	r2, r1
   859f4:	d907      	bls.n	85a06 <__udivdi3+0xf2>
   859f6:	1949      	adds	r1, r1, r5
   859f8:	f100 33ff 	add.w	r3, r0, #4294967295
   859fc:	d202      	bcs.n	85a04 <__udivdi3+0xf0>
   859fe:	428a      	cmp	r2, r1
   85a00:	f200 80bc 	bhi.w	85b7c <__udivdi3+0x268>
   85a04:	4618      	mov	r0, r3
   85a06:	1a89      	subs	r1, r1, r2
   85a08:	fbb1 f3f7 	udiv	r3, r1, r7
   85a0c:	fb07 1113 	mls	r1, r7, r3, r1
   85a10:	fb0e fe03 	mul.w	lr, lr, r3
   85a14:	b2a4      	uxth	r4, r4
   85a16:	ea44 4201 	orr.w	r2, r4, r1, lsl #16
   85a1a:	4596      	cmp	lr, r2
   85a1c:	d908      	bls.n	85a30 <__udivdi3+0x11c>
   85a1e:	1952      	adds	r2, r2, r5
   85a20:	f103 31ff 	add.w	r1, r3, #4294967295
   85a24:	f080 8091 	bcs.w	85b4a <__udivdi3+0x236>
   85a28:	4596      	cmp	lr, r2
   85a2a:	f240 808e 	bls.w	85b4a <__udivdi3+0x236>
   85a2e:	3b02      	subs	r3, #2
   85a30:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   85a34:	4631      	mov	r1, r6
   85a36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   85a3a:	2600      	movs	r6, #0
   85a3c:	4630      	mov	r0, r6
   85a3e:	4631      	mov	r1, r6
   85a40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   85a44:	f1c6 0420 	rsb	r4, r6, #32
   85a48:	fa22 f504 	lsr.w	r5, r2, r4
   85a4c:	40b3      	lsls	r3, r6
   85a4e:	432b      	orrs	r3, r5
   85a50:	fa21 f704 	lsr.w	r7, r1, r4
   85a54:	ea4f 4813 	mov.w	r8, r3, lsr #16
   85a58:	fbb7 fcf8 	udiv	ip, r7, r8
   85a5c:	fa1f f983 	uxth.w	r9, r3
   85a60:	fb08 771c 	mls	r7, r8, ip, r7
   85a64:	fa20 fe04 	lsr.w	lr, r0, r4
   85a68:	fa01 f506 	lsl.w	r5, r1, r6
   85a6c:	fb09 f40c 	mul.w	r4, r9, ip
   85a70:	ea4e 0505 	orr.w	r5, lr, r5
   85a74:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   85a78:	ea4e 4707 	orr.w	r7, lr, r7, lsl #16
   85a7c:	42bc      	cmp	r4, r7
   85a7e:	fa02 f206 	lsl.w	r2, r2, r6
   85a82:	d904      	bls.n	85a8e <__udivdi3+0x17a>
   85a84:	18ff      	adds	r7, r7, r3
   85a86:	f10c 31ff 	add.w	r1, ip, #4294967295
   85a8a:	d368      	bcc.n	85b5e <__udivdi3+0x24a>
   85a8c:	468c      	mov	ip, r1
   85a8e:	1b3f      	subs	r7, r7, r4
   85a90:	fbb7 f4f8 	udiv	r4, r7, r8
   85a94:	fb08 7714 	mls	r7, r8, r4, r7
   85a98:	fb09 f904 	mul.w	r9, r9, r4
   85a9c:	b2ad      	uxth	r5, r5
   85a9e:	ea45 4107 	orr.w	r1, r5, r7, lsl #16
   85aa2:	4589      	cmp	r9, r1
   85aa4:	d904      	bls.n	85ab0 <__udivdi3+0x19c>
   85aa6:	18c9      	adds	r1, r1, r3
   85aa8:	f104 35ff 	add.w	r5, r4, #4294967295
   85aac:	d35d      	bcc.n	85b6a <__udivdi3+0x256>
   85aae:	462c      	mov	r4, r5
   85ab0:	ea44 440c 	orr.w	r4, r4, ip, lsl #16
   85ab4:	fba4 2302 	umull	r2, r3, r4, r2
   85ab8:	ebc9 0101 	rsb	r1, r9, r1
   85abc:	4299      	cmp	r1, r3
   85abe:	d349      	bcc.n	85b54 <__udivdi3+0x240>
   85ac0:	d045      	beq.n	85b4e <__udivdi3+0x23a>
   85ac2:	4620      	mov	r0, r4
   85ac4:	2600      	movs	r6, #0
   85ac6:	e76b      	b.n	859a0 <__udivdi3+0x8c>
   85ac8:	f1cc 0420 	rsb	r4, ip, #32
   85acc:	fa05 f50c 	lsl.w	r5, r5, ip
   85ad0:	fa21 f304 	lsr.w	r3, r1, r4
   85ad4:	0c2a      	lsrs	r2, r5, #16
   85ad6:	fbb3 f6f2 	udiv	r6, r3, r2
   85ada:	fa1f fe85 	uxth.w	lr, r5
   85ade:	fb02 3816 	mls	r8, r2, r6, r3
   85ae2:	fa20 f704 	lsr.w	r7, r0, r4
   85ae6:	fa01 f10c 	lsl.w	r1, r1, ip
   85aea:	fb0e f906 	mul.w	r9, lr, r6
   85aee:	430f      	orrs	r7, r1
   85af0:	0c3c      	lsrs	r4, r7, #16
   85af2:	ea44 4308 	orr.w	r3, r4, r8, lsl #16
   85af6:	4599      	cmp	r9, r3
   85af8:	fa00 f40c 	lsl.w	r4, r0, ip
   85afc:	d907      	bls.n	85b0e <__udivdi3+0x1fa>
   85afe:	195b      	adds	r3, r3, r5
   85b00:	f106 31ff 	add.w	r1, r6, #4294967295
   85b04:	d238      	bcs.n	85b78 <__udivdi3+0x264>
   85b06:	4599      	cmp	r9, r3
   85b08:	d936      	bls.n	85b78 <__udivdi3+0x264>
   85b0a:	3e02      	subs	r6, #2
   85b0c:	442b      	add	r3, r5
   85b0e:	ebc9 0303 	rsb	r3, r9, r3
   85b12:	fbb3 f0f2 	udiv	r0, r3, r2
   85b16:	fb02 3310 	mls	r3, r2, r0, r3
   85b1a:	fb0e f100 	mul.w	r1, lr, r0
   85b1e:	b2bf      	uxth	r7, r7
   85b20:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
   85b24:	4299      	cmp	r1, r3
   85b26:	d907      	bls.n	85b38 <__udivdi3+0x224>
   85b28:	195b      	adds	r3, r3, r5
   85b2a:	f100 37ff 	add.w	r7, r0, #4294967295
   85b2e:	d221      	bcs.n	85b74 <__udivdi3+0x260>
   85b30:	4299      	cmp	r1, r3
   85b32:	d91f      	bls.n	85b74 <__udivdi3+0x260>
   85b34:	3802      	subs	r0, #2
   85b36:	442b      	add	r3, r5
   85b38:	4617      	mov	r7, r2
   85b3a:	1a59      	subs	r1, r3, r1
   85b3c:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
   85b40:	e74e      	b.n	859e0 <__udivdi3+0xcc>
   85b42:	4610      	mov	r0, r2
   85b44:	e714      	b.n	85970 <__udivdi3+0x5c>
   85b46:	4613      	mov	r3, r2
   85b48:	e727      	b.n	8599a <__udivdi3+0x86>
   85b4a:	460b      	mov	r3, r1
   85b4c:	e770      	b.n	85a30 <__udivdi3+0x11c>
   85b4e:	40b0      	lsls	r0, r6
   85b50:	4290      	cmp	r0, r2
   85b52:	d2b6      	bcs.n	85ac2 <__udivdi3+0x1ae>
   85b54:	1e60      	subs	r0, r4, #1
   85b56:	2600      	movs	r6, #0
   85b58:	e722      	b.n	859a0 <__udivdi3+0x8c>
   85b5a:	4630      	mov	r0, r6
   85b5c:	e720      	b.n	859a0 <__udivdi3+0x8c>
   85b5e:	42bc      	cmp	r4, r7
   85b60:	d994      	bls.n	85a8c <__udivdi3+0x178>
   85b62:	f1ac 0c02 	sub.w	ip, ip, #2
   85b66:	441f      	add	r7, r3
   85b68:	e791      	b.n	85a8e <__udivdi3+0x17a>
   85b6a:	4589      	cmp	r9, r1
   85b6c:	d99f      	bls.n	85aae <__udivdi3+0x19a>
   85b6e:	3c02      	subs	r4, #2
   85b70:	4419      	add	r1, r3
   85b72:	e79d      	b.n	85ab0 <__udivdi3+0x19c>
   85b74:	4638      	mov	r0, r7
   85b76:	e7df      	b.n	85b38 <__udivdi3+0x224>
   85b78:	460e      	mov	r6, r1
   85b7a:	e7c8      	b.n	85b0e <__udivdi3+0x1fa>
   85b7c:	3802      	subs	r0, #2
   85b7e:	4429      	add	r1, r5
   85b80:	e741      	b.n	85a06 <__udivdi3+0xf2>
   85b82:	bf00      	nop
   85b84:	00006425 	.word	0x00006425
   85b88:	00000001 	.word	0x00000001
   85b8c:	00000002 	.word	0x00000002
   85b90:	00000004 	.word	0x00000004
   85b94:	00000008 	.word	0x00000008
   85b98:	00000010 	.word	0x00000010
   85b9c:	00000020 	.word	0x00000020
   85ba0:	00000040 	.word	0x00000040
   85ba4:	00000080 	.word	0x00000080
   85ba8:	00000100 	.word	0x00000100
   85bac:	00000200 	.word	0x00000200
   85bb0:	00000400 	.word	0x00000400
   85bb4:	00000043 	.word	0x00000043

00085bb8 <_global_impure_ptr>:
   85bb8:	20070178                                x.. 

00085bbc <zeroes.6911>:
   85bbc:	30303030 30303030 30303030 30303030     0000000000000000

00085bcc <blanks.6910>:
   85bcc:	20202020 20202020 20202020 20202020                     
   85bdc:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   85bec:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   85bfc:	00000000 33323130 37363534 62613938     ....0123456789ab
   85c0c:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   85c1c:	00000030 69666e49 7974696e 00000000     0...Infinity....
   85c2c:	004e614e 49534f50 00000058 0000002e     NaN.POSIX.......
   85c3c:	00000000                                ....

00085c40 <__mprec_tens>:
   85c40:	00000000 3ff00000 00000000 40240000     .......?......$@
   85c50:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85c60:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85c70:	00000000 412e8480 00000000 416312d0     .......A......cA
   85c80:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   85c90:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   85ca0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   85cb0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   85cc0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85cd0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85ce0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85cf0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85d00:	79d99db4 44ea7843                       ...yCx.D

00085d08 <p05.5302>:
   85d08:	00000005 00000019 0000007d 00000000     ........}.......

00085d18 <__mprec_bigtens>:
   85d18:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85d28:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85d38:	7f73bf3c 75154fdd                       <.s..O.u

00085d40 <_init>:
   85d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85d42:	bf00      	nop
   85d44:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85d46:	bc08      	pop	{r3}
   85d48:	469e      	mov	lr, r3
   85d4a:	4770      	bx	lr

00085d4c <__init_array_start>:
   85d4c:	000826ad 	.word	0x000826ad

00085d50 <__frame_dummy_init_array_entry>:
   85d50:	00080119                                ....

00085d54 <_fini>:
   85d54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85d56:	bf00      	nop
   85d58:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85d5a:	bc08      	pop	{r3}
   85d5c:	469e      	mov	lr, r3
   85d5e:	4770      	bx	lr

00085d60 <__fini_array_start>:
   85d60:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4a14      	ldr	r2, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b13      	ldr	r3, [r2, #48]	; 0x30
2007003c:	f023 0303 	bic.w	r3, r3, #3
20070040:	f043 0301 	orr.w	r3, r3, #1
20070044:	6313      	str	r3, [r2, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070048:	f013 0f08 	tst.w	r3, #8
2007004c:	d0fb      	beq.n	20070046 <SystemInit+0x46>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007004e:	4a12      	ldr	r2, [pc, #72]	; (20070098 <SystemInit+0x98>)
20070050:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070052:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070054:	461a      	mov	r2, r3
20070056:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070058:	f013 0f02 	tst.w	r3, #2
2007005c:	d0fb      	beq.n	20070056 <SystemInit+0x56>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007005e:	2211      	movs	r2, #17
20070060:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070062:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070064:	461a      	mov	r2, r3
20070066:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070068:	f013 0f08 	tst.w	r3, #8
2007006c:	d0fb      	beq.n	20070066 <SystemInit+0x66>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007006e:	2212      	movs	r2, #18
20070070:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070072:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070074:	461a      	mov	r2, r3
20070076:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070078:	f013 0f08 	tst.w	r3, #8
2007007c:	d0fb      	beq.n	20070076 <SystemInit+0x76>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007007e:	4a07      	ldr	r2, [pc, #28]	; (2007009c <SystemInit+0x9c>)
20070080:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070082:	601a      	str	r2, [r3, #0]
20070084:	4770      	bx	lr
20070086:	bf00      	nop
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070170 	.word	0x20070170

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <pin_table>:
2007012c:	5c390908 5758591d 675d5556 00003b68     ..9\.YXWVU]gh;..
2007013c:	00000000 0e3a0000 6261600f 07696663     ......:..`abcfi.
2007014c:	4342416a 47464544 14134948 50515253     jABCDEFGHI..SRQP
2007015c:	4c4d4e4f 18102e35 04061617 32310203     ONML5.........12
2007016c:	00003433                                34..

20070170 <SystemCoreClock>:
20070170:	003d0900 00000000                       ..=.....

20070178 <impure_data>:
20070178:	00000000 20070464 200704cc 20070534     ....d.. ... 4.. 
	...
200701ac:	00085bb4 00000000 00000000 00000000     .[..............
	...
20070220:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070230:	0005deec 0000000b 00000000 00000000     ................
	...

200705a0 <_impure_ptr>:
200705a0:	20070178                                x.. 

200705a4 <lconv>:
200705a4:	00085c38 00085bfc 00085bfc 00085bfc     8\...[...[...[..
200705b4:	00085bfc 00085bfc 00085bfc 00085bfc     .[...[...[...[..
200705c4:	00085bfc 00085bfc ffffffff ffffffff     .[...[..........
200705d4:	ffffffff 0000ffff                       ........

200705dc <__malloc_av_>:
	...
200705e4:	200705dc 200705dc 200705e4 200705e4     ... ... ... ... 
200705f4:	200705ec 200705ec 200705f4 200705f4     ... ... ... ... 
20070604:	200705fc 200705fc 20070604 20070604     ... ... ... ... 
20070614:	2007060c 2007060c 20070614 20070614     ... ... ... ... 
20070624:	2007061c 2007061c 20070624 20070624     ... ... $.. $.. 
20070634:	2007062c 2007062c 20070634 20070634     ,.. ,.. 4.. 4.. 
20070644:	2007063c 2007063c 20070644 20070644     <.. <.. D.. D.. 
20070654:	2007064c 2007064c 20070654 20070654     L.. L.. T.. T.. 
20070664:	2007065c 2007065c 20070664 20070664     \.. \.. d.. d.. 
20070674:	2007066c 2007066c 20070674 20070674     l.. l.. t.. t.. 
20070684:	2007067c 2007067c 20070684 20070684     |.. |.. ... ... 
20070694:	2007068c 2007068c 20070694 20070694     ... ... ... ... 
200706a4:	2007069c 2007069c 200706a4 200706a4     ... ... ... ... 
200706b4:	200706ac 200706ac 200706b4 200706b4     ... ... ... ... 
200706c4:	200706bc 200706bc 200706c4 200706c4     ... ... ... ... 
200706d4:	200706cc 200706cc 200706d4 200706d4     ... ... ... ... 
200706e4:	200706dc 200706dc 200706e4 200706e4     ... ... ... ... 
200706f4:	200706ec 200706ec 200706f4 200706f4     ... ... ... ... 
20070704:	200706fc 200706fc 20070704 20070704     ... ... ... ... 
20070714:	2007070c 2007070c 20070714 20070714     ... ... ... ... 
20070724:	2007071c 2007071c 20070724 20070724     ... ... $.. $.. 
20070734:	2007072c 2007072c 20070734 20070734     ,.. ,.. 4.. 4.. 
20070744:	2007073c 2007073c 20070744 20070744     <.. <.. D.. D.. 
20070754:	2007074c 2007074c 20070754 20070754     L.. L.. T.. T.. 
20070764:	2007075c 2007075c 20070764 20070764     \.. \.. d.. d.. 
20070774:	2007076c 2007076c 20070774 20070774     l.. l.. t.. t.. 
20070784:	2007077c 2007077c 20070784 20070784     |.. |.. ... ... 
20070794:	2007078c 2007078c 20070794 20070794     ... ... ... ... 
200707a4:	2007079c 2007079c 200707a4 200707a4     ... ... ... ... 
200707b4:	200707ac 200707ac 200707b4 200707b4     ... ... ... ... 
200707c4:	200707bc 200707bc 200707c4 200707c4     ... ... ... ... 
200707d4:	200707cc 200707cc 200707d4 200707d4     ... ... ... ... 
200707e4:	200707dc 200707dc 200707e4 200707e4     ... ... ... ... 
200707f4:	200707ec 200707ec 200707f4 200707f4     ... ... ... ... 
20070804:	200707fc 200707fc 20070804 20070804     ... ... ... ... 
20070814:	2007080c 2007080c 20070814 20070814     ... ... ... ... 
20070824:	2007081c 2007081c 20070824 20070824     ... ... $.. $.. 
20070834:	2007082c 2007082c 20070834 20070834     ,.. ,.. 4.. 4.. 
20070844:	2007083c 2007083c 20070844 20070844     <.. <.. D.. D.. 
20070854:	2007084c 2007084c 20070854 20070854     L.. L.. T.. T.. 
20070864:	2007085c 2007085c 20070864 20070864     \.. \.. d.. d.. 
20070874:	2007086c 2007086c 20070874 20070874     l.. l.. t.. t.. 
20070884:	2007087c 2007087c 20070884 20070884     |.. |.. ... ... 
20070894:	2007088c 2007088c 20070894 20070894     ... ... ... ... 
200708a4:	2007089c 2007089c 200708a4 200708a4     ... ... ... ... 
200708b4:	200708ac 200708ac 200708b4 200708b4     ... ... ... ... 
200708c4:	200708bc 200708bc 200708c4 200708c4     ... ... ... ... 
200708d4:	200708cc 200708cc 200708d4 200708d4     ... ... ... ... 
200708e4:	200708dc 200708dc 200708e4 200708e4     ... ... ... ... 
200708f4:	200708ec 200708ec 200708f4 200708f4     ... ... ... ... 
20070904:	200708fc 200708fc 20070904 20070904     ... ... ... ... 
20070914:	2007090c 2007090c 20070914 20070914     ... ... ... ... 
20070924:	2007091c 2007091c 20070924 20070924     ... ... $.. $.. 
20070934:	2007092c 2007092c 20070934 20070934     ,.. ,.. 4.. 4.. 
20070944:	2007093c 2007093c 20070944 20070944     <.. <.. D.. D.. 
20070954:	2007094c 2007094c 20070954 20070954     L.. L.. T.. T.. 
20070964:	2007095c 2007095c 20070964 20070964     \.. \.. d.. d.. 
20070974:	2007096c 2007096c 20070974 20070974     l.. l.. t.. t.. 
20070984:	2007097c 2007097c 20070984 20070984     |.. |.. ... ... 
20070994:	2007098c 2007098c 20070994 20070994     ... ... ... ... 
200709a4:	2007099c 2007099c 200709a4 200709a4     ... ... ... ... 
200709b4:	200709ac 200709ac 200709b4 200709b4     ... ... ... ... 
200709c4:	200709bc 200709bc 200709c4 200709c4     ... ... ... ... 
200709d4:	200709cc 200709cc 200709d4 200709d4     ... ... ... ... 

200709e4 <__malloc_trim_threshold>:
200709e4:	00020000                                ....

200709e8 <__malloc_sbrk_base>:
200709e8:	ffffffff                                ....
