
dueSrv.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005c1c  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00085c1c  00085c1c  0000dc1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009ec  20070000  00085c24  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000f0  200709ec  00086610  000109ec  2**2
                  ALLOC
  4 .stack        00002004  20070adc  00086700  000109ec  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109ec  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010a15  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000a30a  00000000  00000000  00010a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001d88  00000000  00000000  0001ad7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003e91  00000000  00000000  0001cb02  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000008f8  00000000  00000000  00020993  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000007d8  00000000  00000000  0002128b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00018536  00000000  00000000  00021a63  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e77a  00000000  00000000  00039f99  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000622e2  00000000  00000000  00048713  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001c30  00000000  00000000  000aa9f8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072ae0 	.word	0x20072ae0
   80004:	00080ca5 	.word	0x00080ca5
   80008:	00080ca1 	.word	0x00080ca1
   8000c:	00080ca1 	.word	0x00080ca1
   80010:	00080ca1 	.word	0x00080ca1
   80014:	00080ca1 	.word	0x00080ca1
   80018:	00080ca1 	.word	0x00080ca1
	...
   8002c:	00080ca1 	.word	0x00080ca1
   80030:	00080ca1 	.word	0x00080ca1
   80034:	00000000 	.word	0x00000000
   80038:	00080ca1 	.word	0x00080ca1
   8003c:	00080ca1 	.word	0x00080ca1
   80040:	00080ca1 	.word	0x00080ca1
   80044:	00080ca1 	.word	0x00080ca1
   80048:	00080ca1 	.word	0x00080ca1
   8004c:	00080ca1 	.word	0x00080ca1
   80050:	00080ca1 	.word	0x00080ca1
   80054:	00080ca1 	.word	0x00080ca1
   80058:	00080ca1 	.word	0x00080ca1
   8005c:	00080ca1 	.word	0x00080ca1
   80060:	00080ca1 	.word	0x00080ca1
   80064:	00080ca1 	.word	0x00080ca1
   80068:	00000000 	.word	0x00000000
   8006c:	00080b11 	.word	0x00080b11
   80070:	00080b25 	.word	0x00080b25
   80074:	00080b39 	.word	0x00080b39
   80078:	00080b4d 	.word	0x00080b4d
	...
   80084:	00080ca1 	.word	0x00080ca1
   80088:	00080ca1 	.word	0x00080ca1
   8008c:	00080ca1 	.word	0x00080ca1
   80090:	00080ca1 	.word	0x00080ca1
   80094:	00080ca1 	.word	0x00080ca1
   80098:	00080ca1 	.word	0x00080ca1
   8009c:	00080ca1 	.word	0x00080ca1
   800a0:	00080ca1 	.word	0x00080ca1
   800a4:	00000000 	.word	0x00000000
   800a8:	00080ca1 	.word	0x00080ca1
   800ac:	00080ca1 	.word	0x00080ca1
   800b0:	00080ca1 	.word	0x00080ca1
   800b4:	00080ca1 	.word	0x00080ca1
   800b8:	00080ca1 	.word	0x00080ca1
   800bc:	00080ca1 	.word	0x00080ca1
   800c0:	00080ca1 	.word	0x00080ca1
   800c4:	00080ca1 	.word	0x00080ca1
   800c8:	00080ca1 	.word	0x00080ca1
   800cc:	00080ca1 	.word	0x00080ca1
   800d0:	00080ca1 	.word	0x00080ca1
   800d4:	00080ca1 	.word	0x00080ca1
   800d8:	00080ca1 	.word	0x00080ca1
   800dc:	00080ca1 	.word	0x00080ca1
   800e0:	00080ca1 	.word	0x00080ca1
   800e4:	00080ca1 	.word	0x00080ca1
   800e8:	00080ca1 	.word	0x00080ca1
   800ec:	00080ca1 	.word	0x00080ca1
   800f0:	00080ca1 	.word	0x00080ca1

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709ec 	.word	0x200709ec
   80110:	00000000 	.word	0x00000000
   80114:	00085c24 	.word	0x00085c24

00080118 <frame_dummy>:
   80118:	4b08      	ldr	r3, [pc, #32]	; (8013c <frame_dummy+0x24>)
   8011a:	b510      	push	{r4, lr}
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4808      	ldr	r0, [pc, #32]	; (80140 <frame_dummy+0x28>)
   80120:	4908      	ldr	r1, [pc, #32]	; (80144 <frame_dummy+0x2c>)
   80122:	f3af 8000 	nop.w
   80126:	4808      	ldr	r0, [pc, #32]	; (80148 <frame_dummy+0x30>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b903      	cbnz	r3, 8012e <frame_dummy+0x16>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	4b07      	ldr	r3, [pc, #28]	; (8014c <frame_dummy+0x34>)
   80130:	2b00      	cmp	r3, #0
   80132:	d0fb      	beq.n	8012c <frame_dummy+0x14>
   80134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80138:	4718      	bx	r3
   8013a:	bf00      	nop
   8013c:	00000000 	.word	0x00000000
   80140:	00085c24 	.word	0x00085c24
   80144:	200709f0 	.word	0x200709f0
   80148:	00085c24 	.word	0x00085c24
   8014c:	00000000 	.word	0x00000000

00080150 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   80150:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   80152:	2401      	movs	r4, #1
   80154:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   80156:	2400      	movs	r4, #0
   80158:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   8015a:	f240 2502 	movw	r5, #514	; 0x202
   8015e:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   80162:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   80166:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   8016a:	6845      	ldr	r5, [r0, #4]
   8016c:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   8016e:	0052      	lsls	r2, r2, #1
   80170:	fbb1 f1f2 	udiv	r1, r1, r2
   80174:	1e4a      	subs	r2, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80176:	0212      	lsls	r2, r2, #8
   80178:	b292      	uxth	r2, r2
   8017a:	4313      	orrs	r3, r2
   8017c:	6043      	str	r3, [r0, #4]
	return 0;
}
   8017e:	4620      	mov	r0, r4
   80180:	bc30      	pop	{r4, r5}
   80182:	4770      	bx	lr

00080184 <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   80184:	6843      	ldr	r3, [r0, #4]
   80186:	f023 0310 	bic.w	r3, r3, #16
   8018a:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   8018c:	6843      	ldr	r3, [r0, #4]
   8018e:	4319      	orrs	r1, r3
   80190:	6041      	str	r1, [r0, #4]
   80192:	4770      	bx	lr

00080194 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   80194:	6843      	ldr	r3, [r0, #4]
   80196:	4319      	orrs	r1, r3
   80198:	01d2      	lsls	r2, r2, #7
   8019a:	b2d2      	uxtb	r2, r2
   8019c:	4311      	orrs	r1, r2
   8019e:	6041      	str	r1, [r0, #4]
   801a0:	4770      	bx	lr
   801a2:	bf00      	nop

000801a4 <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   801a4:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801a6:	6844      	ldr	r4, [r0, #4]
   801a8:	4322      	orrs	r2, r4
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   801aa:	0609      	lsls	r1, r1, #24
   801ac:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
   801b0:	430a      	orrs	r2, r1
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801b2:	071b      	lsls	r3, r3, #28
   801b4:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   801b8:	4313      	orrs	r3, r2
   801ba:	6043      	str	r3, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   801bc:	f85d 4b04 	ldr.w	r4, [sp], #4
   801c0:	4770      	bx	lr
   801c2:	bf00      	nop

000801c4 <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   801c4:	2302      	movs	r3, #2
   801c6:	6003      	str	r3, [r0, #0]
   801c8:	4770      	bx	lr
   801ca:	bf00      	nop

000801cc <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   801cc:	2301      	movs	r3, #1
   801ce:	408b      	lsls	r3, r1
   801d0:	6103      	str	r3, [r0, #16]
   801d2:	4770      	bx	lr

000801d4 <adc_enable_all_channel>:
 * \param p_adc Pointer to an ADC instance.
 */
void adc_enable_all_channel(Adc *p_adc)
{
#if SAM3S || SAM4S || SAM3N || SAM3XA
	p_adc->ADC_CHER = 0xFFFF;
   801d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
   801d8:	6103      	str	r3, [r0, #16]
   801da:	4770      	bx	lr

000801dc <pin_mapper>:
					PIO_PA22_IDX,PIO_PA6_IDX,PIO_PA4_IDX,PIO_PA3_IDX,PIO_PA2_IDX,PIO_PB17_IDX,
					PIO_PB18_IDX,PIO_PB19_IDX,PIO_PB20_IDX};
					
uint8_t pin_mapper(uint8_t pin){
	return pin_table[pin];
   801dc:	4b01      	ldr	r3, [pc, #4]	; (801e4 <pin_mapper+0x8>)
   801de:	5c18      	ldrb	r0, [r3, r0]
   801e0:	4770      	bx	lr
   801e2:	bf00      	nop
   801e4:	2007012c 	.word	0x2007012c

000801e8 <pwm_set_duty>:
		pwm_set_duty(0);
	}
}


void pwm_set_duty(uint32_t duty_cycle){
   801e8:	b508      	push	{r3, lr}
   801ea:	4602      	mov	r2, r0
	/*Set duty cycle*/
	pwm_channel_update_duty(PWM,&pwm_channel_instance,duty_cycle);
   801ec:	4802      	ldr	r0, [pc, #8]	; (801f8 <pwm_set_duty+0x10>)
   801ee:	4903      	ldr	r1, [pc, #12]	; (801fc <pwm_set_duty+0x14>)
   801f0:	4b03      	ldr	r3, [pc, #12]	; (80200 <pwm_set_duty+0x18>)
   801f2:	4798      	blx	r3
   801f4:	bd08      	pop	{r3, pc}
   801f6:	bf00      	nop
   801f8:	40094000 	.word	0x40094000
   801fc:	20070a08 	.word	0x20070a08
   80200:	000806f5 	.word	0x000806f5

00080204 <pwm_setup>:
#include <pwm.h>
#include "analog_output.h"

static pwm_channel_t pwm_channel_instance;

void pwm_setup(){
   80204:	b530      	push	{r4, r5, lr}
   80206:	b085      	sub	sp, #20
	/* Enable the specified peripheral clock (PWM clock).
	   If function returns 0, then we can proceed... */
	if (pmc_enable_periph_clk(ID_PWM) == 0) {
   80208:	2024      	movs	r0, #36	; 0x24
   8020a:	4b17      	ldr	r3, [pc, #92]	; (80268 <pwm_setup+0x64>)
   8020c:	4798      	blx	r3
   8020e:	2800      	cmp	r0, #0
   80210:	d128      	bne.n	80264 <pwm_setup+0x60>
		pwm_channel_disable(PWM, PWM_CHANNEL_0);
   80212:	4d16      	ldr	r5, [pc, #88]	; (8026c <pwm_setup+0x68>)
   80214:	4628      	mov	r0, r5
   80216:	2100      	movs	r1, #0
   80218:	4b15      	ldr	r3, [pc, #84]	; (80270 <pwm_setup+0x6c>)
   8021a:	4798      	blx	r3
		pwm_clock_t clock_setting = {
   8021c:	4b15      	ldr	r3, [pc, #84]	; (80274 <pwm_setup+0x70>)
   8021e:	9301      	str	r3, [sp, #4]
   80220:	2400      	movs	r4, #0
   80222:	9402      	str	r4, [sp, #8]
   80224:	4b14      	ldr	r3, [pc, #80]	; (80278 <pwm_setup+0x74>)
   80226:	9303      	str	r3, [sp, #12]
			.ul_clka = PWM_FREQUENCY * PWM_RESOLUTION,
			.ul_clkb = 0,
			.ul_mck = sysclk_get_cpu_hz()
		};
		pwm_init(PWM, &clock_setting);
   80228:	4628      	mov	r0, r5
   8022a:	a901      	add	r1, sp, #4
   8022c:	4b13      	ldr	r3, [pc, #76]	; (8027c <pwm_setup+0x78>)
   8022e:	4798      	blx	r3
		pwm_channel_instance.alignment = PWM_ALIGN_LEFT;
   80230:	4913      	ldr	r1, [pc, #76]	; (80280 <pwm_setup+0x7c>)
   80232:	810c      	strh	r4, [r1, #8]
		pwm_channel_instance.polarity = PWM_POLARITY;
   80234:	728c      	strb	r4, [r1, #10]
		pwm_channel_instance.ul_prescaler = PWM_CMR_CPRE_CLKA;
   80236:	230b      	movs	r3, #11
   80238:	604b      	str	r3, [r1, #4]
		pwm_channel_instance.ul_period = PWM_RESOLUTION;
   8023a:	23ff      	movs	r3, #255	; 0xff
   8023c:	610b      	str	r3, [r1, #16]
		pwm_channel_instance.ul_duty = 0;
   8023e:	60cc      	str	r4, [r1, #12]
		pwm_channel_instance.channel = PWM_CHANNEL_0;
   80240:	600c      	str	r4, [r1, #0]
		pwm_channel_init(PWM, &pwm_channel_instance);
   80242:	4628      	mov	r0, r5
   80244:	4b0f      	ldr	r3, [pc, #60]	; (80284 <pwm_setup+0x80>)
   80246:	4798      	blx	r3
		/* setup PWM for pin */
		pio_set_peripheral(PWM_PIO, PWM_PERIPHERAL, PWM_PIN);
   80248:	480f      	ldr	r0, [pc, #60]	; (80288 <pwm_setup+0x84>)
   8024a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8024e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   80252:	4b0e      	ldr	r3, [pc, #56]	; (8028c <pwm_setup+0x88>)
   80254:	4798      	blx	r3
		/* enable PWM channel */
		pwm_channel_enable(PWM, PWM_CHANNEL_0);	
   80256:	4628      	mov	r0, r5
   80258:	4621      	mov	r1, r4
   8025a:	4b0d      	ldr	r3, [pc, #52]	; (80290 <pwm_setup+0x8c>)
   8025c:	4798      	blx	r3
		pwm_set_duty(0);
   8025e:	4620      	mov	r0, r4
   80260:	4b0c      	ldr	r3, [pc, #48]	; (80294 <pwm_setup+0x90>)
   80262:	4798      	blx	r3
	}
}
   80264:	b005      	add	sp, #20
   80266:	bd30      	pop	{r4, r5, pc}
   80268:	00080c4d 	.word	0x00080c4d
   8026c:	40094000 	.word	0x40094000
   80270:	00080721 	.word	0x00080721
   80274:	0003e418 	.word	0x0003e418
   80278:	0501bd00 	.word	0x0501bd00
   8027c:	000805a1 	.word	0x000805a1
   80280:	20070a08 	.word	0x20070a08
   80284:	000805ed 	.word	0x000805ed
   80288:	400e1000 	.word	0x400e1000
   8028c:	000808a9 	.word	0x000808a9
   80290:	00080719 	.word	0x00080719
   80294:	000801e9 	.word	0x000801e9

00080298 <uart_config>:
void uart_config(uint32_t baud)
{
	/* reset and disable receiver & transmitter */
	UART_CR = UART_CR_RSTRX | UART_CR_RSTTX	| UART_CR_RXDIS | UART_CR_TXDIS;
	/* configure baud rate */
	UART_BRGR = (MCK >> 4) / baud;
   80298:	4b0c      	ldr	r3, [pc, #48]	; (802cc <uart_config+0x34>)
   8029a:	fbb3 f0f0 	udiv	r0, r3, r0
   8029e:	4b0c      	ldr	r3, [pc, #48]	; (802d0 <uart_config+0x38>)
   802a0:	6018      	str	r0, [r3, #0]
	/* configure mode */
	UART_MR = UART_MR_PAR_NO | UART_MR_CHMODE_NORMAL;
   802a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
   802a6:	3b1c      	subs	r3, #28
   802a8:	601a      	str	r2, [r3, #0]
	/* enable receiver and transmitter */
	UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   802aa:	2250      	movs	r2, #80	; 0x50
   802ac:	3b04      	subs	r3, #4
   802ae:	601a      	str	r2, [r3, #0]
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   802b0:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
   802b4:	f44f 7280 	mov.w	r2, #256	; 0x100
   802b8:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   802ba:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   802bc:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   802be:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   802c2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   802c4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   802c8:	671a      	str	r2, [r3, #112]	; 0x70
   802ca:	4770      	bx	lr
   802cc:	00501bd0 	.word	0x00501bd0
   802d0:	400e0820 	.word	0x400e0820

000802d4 <uart_transmitter_ready>:
 * Transmitter Ready?
 * Return 1 if "Transmitter Ready" flag is set, otherwise 0.
 */
int uart_transmitter_ready(void)
{
	return (UART_SR & UART_SR_TXRDY);
   802d4:	4b02      	ldr	r3, [pc, #8]	; (802e0 <uart_transmitter_ready+0xc>)
   802d6:	6818      	ldr	r0, [r3, #0]
}
   802d8:	f000 0002 	and.w	r0, r0, #2
   802dc:	4770      	bx	lr
   802de:	bf00      	nop
   802e0:	400e0814 	.word	0x400e0814

000802e4 <uart_receiver_ready>:
 * Receiver Ready?
 * Return 1 if "Receiver Ready" flag is set, otherwise 0.
 */
int uart_receiver_ready(void)
{
	return (UART_SR & UART_SR_RXRDY);
   802e4:	4b02      	ldr	r3, [pc, #8]	; (802f0 <uart_receiver_ready+0xc>)
   802e6:	6818      	ldr	r0, [r3, #0]
}
   802e8:	f000 0001 	and.w	r0, r0, #1
   802ec:	4770      	bx	lr
   802ee:	bf00      	nop
   802f0:	400e0814 	.word	0x400e0814

000802f4 <uart_send_char>:
 * Send character
 * Write character to Transmit Holding Register.
 */
void uart_send_char(uint8_t chr)
{
	UART_THR = chr;
   802f4:	4b01      	ldr	r3, [pc, #4]	; (802fc <uart_send_char+0x8>)
   802f6:	6018      	str	r0, [r3, #0]
   802f8:	4770      	bx	lr
   802fa:	bf00      	nop
   802fc:	400e081c 	.word	0x400e081c

00080300 <uart_receive_char>:
 */
char uart_receive_char(void)
{
	char chr = UART_RHR;
	return chr;
   80300:	4b01      	ldr	r3, [pc, #4]	; (80308 <uart_receive_char+0x8>)
   80302:	7818      	ldrb	r0, [r3, #0]
   80304:	4770      	bx	lr
   80306:	bf00      	nop
   80308:	400e0818 	.word	0x400e0818

0008030c <io_pin_dir>:
#include "matlab_coms/matlab_functions.h"
#include "common/pin_mapper.h"
#include "io_control/analog_output.h"
#include "io_control/adc.h"

void io_pin_dir(uint8_t pin,int8_t dir){
   8030c:	b510      	push	{r4, lr}
   8030e:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   80310:	4b0e      	ldr	r3, [pc, #56]	; (8034c <io_pin_dir+0x40>)
   80312:	4798      	blx	r3
	ioport_set_pin_dir(mapp_pin,dir);
   80314:	b2e1      	uxtb	r1, r4
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   80316:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80318:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8031c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80320:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
   80322:	2901      	cmp	r1, #1
   80324:	d105      	bne.n	80332 <io_pin_dir+0x26>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80326:	f000 011f 	and.w	r1, r0, #31
   8032a:	2201      	movs	r2, #1
   8032c:	408a      	lsls	r2, r1
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   8032e:	611a      	str	r2, [r3, #16]
   80330:	e005      	b.n	8033e <io_pin_dir+0x32>
	} else if (dir == IOPORT_DIR_INPUT) {
   80332:	b921      	cbnz	r1, 8033e <io_pin_dir+0x32>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80334:	f000 011f 	and.w	r1, r0, #31
   80338:	2201      	movs	r2, #1
   8033a:	408a      	lsls	r2, r1
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8033c:	615a      	str	r2, [r3, #20]
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   8033e:	f000 001f 	and.w	r0, r0, #31
   80342:	2201      	movs	r2, #1
   80344:	4082      	lsls	r2, r0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80346:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
   8034a:	bd10      	pop	{r4, pc}
   8034c:	000801dd 	.word	0x000801dd

00080350 <io_pin_level>:
}

void io_pin_level(int8_t pin,int8_t level){
   80350:	b510      	push	{r4, lr}
   80352:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   80354:	b2c0      	uxtb	r0, r0
   80356:	4b0a      	ldr	r3, [pc, #40]	; (80380 <io_pin_level+0x30>)
   80358:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   8035a:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   8035c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80360:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80364:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   80366:	b12c      	cbz	r4, 80374 <io_pin_level+0x24>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80368:	f000 001f 	and.w	r0, r0, #31
   8036c:	2201      	movs	r2, #1
   8036e:	4082      	lsls	r2, r0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80370:	631a      	str	r2, [r3, #48]	; 0x30
   80372:	bd10      	pop	{r4, pc}
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80374:	f000 001f 	and.w	r0, r0, #31
   80378:	2201      	movs	r2, #1
   8037a:	4082      	lsls	r2, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8037c:	635a      	str	r2, [r3, #52]	; 0x34
   8037e:	bd10      	pop	{r4, pc}
   80380:	000801dd 	.word	0x000801dd

00080384 <io_pin_status>:
	ioport_set_pin_level(mapp_pin,level);
}

int8_t io_pin_status(int8_t pin){
   80384:	b508      	push	{r3, lr}
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   80386:	b2c0      	uxtb	r0, r0
   80388:	4b08      	ldr	r3, [pc, #32]	; (803ac <io_pin_status+0x28>)
   8038a:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   8038c:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   8038e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80392:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80396:	025b      	lsls	r3, r3, #9
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80398:	6bda      	ldr	r2, [r3, #60]	; 0x3c
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   8039a:	f000 001f 	and.w	r0, r0, #31
   8039e:	2301      	movs	r3, #1
   803a0:	4083      	lsls	r3, r0
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   803a2:	4213      	tst	r3, r2
	return ioport_get_pin_level(mapp_pin);
}
   803a4:	bf14      	ite	ne
   803a6:	2001      	movne	r0, #1
   803a8:	2000      	moveq	r0, #0
   803aa:	bd08      	pop	{r3, pc}
   803ac:	000801dd 	.word	0x000801dd

000803b0 <io_pwm_duty>:

void io_pwm_duty(uint8_t duty){
   803b0:	b508      	push	{r3, lr}
	pwm_set_duty(duty);
   803b2:	4b01      	ldr	r3, [pc, #4]	; (803b8 <io_pwm_duty+0x8>)
   803b4:	4798      	blx	r3
   803b6:	bd08      	pop	{r3, pc}
   803b8:	000801e9 	.word	0x000801e9

000803bc <io_adc_value>:
}

uint16_t io_adc_value(uint32_t channel){
   803bc:	b508      	push	{r3, lr}
	return read_adc_value(channel);
   803be:	4b01      	ldr	r3, [pc, #4]	; (803c4 <io_adc_value+0x8>)
   803c0:	4798      	blx	r3
}
   803c2:	bd08      	pop	{r3, pc}
   803c4:	000807a5 	.word	0x000807a5

000803c8 <send_char_term>:

void send_char_term(uint8_t chr){
   803c8:	b538      	push	{r3, r4, r5, lr}
   803ca:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   803cc:	4c07      	ldr	r4, [pc, #28]	; (803ec <send_char_term+0x24>)
   803ce:	47a0      	blx	r4
   803d0:	2800      	cmp	r0, #0
   803d2:	d0fc      	beq.n	803ce <send_char_term+0x6>
	uart_send_char(chr);
   803d4:	4628      	mov	r0, r5
   803d6:	4b06      	ldr	r3, [pc, #24]	; (803f0 <send_char_term+0x28>)
   803d8:	4798      	blx	r3
	/*Line terminator*/
	while (!uart_transmitter_ready());
   803da:	4c04      	ldr	r4, [pc, #16]	; (803ec <send_char_term+0x24>)
   803dc:	47a0      	blx	r4
   803de:	2800      	cmp	r0, #0
   803e0:	d0fc      	beq.n	803dc <send_char_term+0x14>
	uart_send_char(10);
   803e2:	200a      	movs	r0, #10
   803e4:	4b02      	ldr	r3, [pc, #8]	; (803f0 <send_char_term+0x28>)
   803e6:	4798      	blx	r3
   803e8:	bd38      	pop	{r3, r4, r5, pc}
   803ea:	bf00      	nop
   803ec:	000802d5 	.word	0x000802d5
   803f0:	000802f5 	.word	0x000802f5

000803f4 <send_char_no_term>:
}

void send_char_no_term(uint8_t chr){
   803f4:	b538      	push	{r3, r4, r5, lr}
   803f6:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   803f8:	4c03      	ldr	r4, [pc, #12]	; (80408 <send_char_no_term+0x14>)
   803fa:	47a0      	blx	r4
   803fc:	2800      	cmp	r0, #0
   803fe:	d0fc      	beq.n	803fa <send_char_no_term+0x6>
	uart_send_char(chr);
   80400:	4628      	mov	r0, r5
   80402:	4b02      	ldr	r3, [pc, #8]	; (8040c <send_char_no_term+0x18>)
   80404:	4798      	blx	r3
   80406:	bd38      	pop	{r3, r4, r5, pc}
   80408:	000802d5 	.word	0x000802d5
   8040c:	000802f5 	.word	0x000802f5

00080410 <read_char>:
}

uint8_t read_char(void){
   80410:	b508      	push	{r3, lr}
	/*Read char if receiver is ready*/
	if (uart_receiver_ready())
   80412:	4b04      	ldr	r3, [pc, #16]	; (80424 <read_char+0x14>)
   80414:	4798      	blx	r3
   80416:	b110      	cbz	r0, 8041e <read_char+0xe>
	{
		return uart_receive_char();
   80418:	4b03      	ldr	r3, [pc, #12]	; (80428 <read_char+0x18>)
   8041a:	4798      	blx	r3
   8041c:	bd08      	pop	{r3, pc}
	}
	/*failed to read char*/
	return 0;
   8041e:	2000      	movs	r0, #0
}
   80420:	bd08      	pop	{r3, pc}
   80422:	bf00      	nop
   80424:	000802e5 	.word	0x000802e5
   80428:	00080301 	.word	0x00080301

0008042c <read_when_ready>:

uint8_t read_when_ready(void){
   8042c:	b510      	push	{r4, lr}
	while (!uart_receiver_ready());
   8042e:	4c03      	ldr	r4, [pc, #12]	; (8043c <read_when_ready+0x10>)
   80430:	47a0      	blx	r4
   80432:	2800      	cmp	r0, #0
   80434:	d0fc      	beq.n	80430 <read_when_ready+0x4>
	return read_char();
   80436:	4b02      	ldr	r3, [pc, #8]	; (80440 <read_when_ready+0x14>)
   80438:	4798      	blx	r3
}
   8043a:	bd10      	pop	{r4, pc}
   8043c:	000802e5 	.word	0x000802e5
   80440:	00080411 	.word	0x00080411

00080444 <send_number>:

void send_number(uint16_t nbr){
   80444:	b530      	push	{r4, r5, lr}
   80446:	b085      	sub	sp, #20
   80448:	4602      	mov	r2, r0
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
   8044a:	a801      	add	r0, sp, #4
   8044c:	4908      	ldr	r1, [pc, #32]	; (80470 <send_number+0x2c>)
   8044e:	4b09      	ldr	r3, [pc, #36]	; (80474 <send_number+0x30>)
   80450:	4798      	blx	r3
	
	while (string[i] != '\0')
   80452:	f89d 0004 	ldrb.w	r0, [sp, #4]
   80456:	b130      	cbz	r0, 80466 <send_number+0x22>
   80458:	ac01      	add	r4, sp, #4
	{
		send_char_no_term(string[i]);
   8045a:	4d07      	ldr	r5, [pc, #28]	; (80478 <send_number+0x34>)
   8045c:	47a8      	blx	r5
void send_number(uint16_t nbr){
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
	
	while (string[i] != '\0')
   8045e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   80462:	2800      	cmp	r0, #0
   80464:	d1fa      	bne.n	8045c <send_number+0x18>
	{
		send_char_no_term(string[i]);
		i++;
	}
	
	send_char_term(13); //Carriage Return and terminator;
   80466:	200d      	movs	r0, #13
   80468:	4b04      	ldr	r3, [pc, #16]	; (8047c <send_number+0x38>)
   8046a:	4798      	blx	r3
   8046c:	b005      	add	sp, #20
   8046e:	bd30      	pop	{r4, r5, pc}
   80470:	00085a3c 	.word	0x00085a3c
   80474:	00080fcd 	.word	0x00080fcd
   80478:	000803f5 	.word	0x000803f5
   8047c:	000803c9 	.word	0x000803c9

00080480 <start_coms>:
#include "io_control/io_uart.h"
#include "matlab_coms/matlab_functions.h"
#include "matlab_coms/matlab_state.h"


void start_coms(){
   80480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint16_t adc_val;
	pin = 0;
	val = 0;
	adc_val = 0;
	
	state next_state = STANDBY;
   80482:	2400      	movs	r4, #0
			val = 0;
			next_state = STANDBY;
			break;
			
			case A_READ:
			pin = read_when_ready();
   80484:	4d28      	ldr	r5, [pc, #160]	; (80528 <start_coms+0xa8>)
			adc_val = io_adc_value(pin);
   80486:	4f29      	ldr	r7, [pc, #164]	; (8052c <start_coms+0xac>)
			send_number(adc_val);
   80488:	4e29      	ldr	r6, [pc, #164]	; (80530 <start_coms+0xb0>)
	state next_state = STANDBY;
	state current_state = STANDBY;
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
   8048a:	2c06      	cmp	r4, #6
   8048c:	d8fd      	bhi.n	8048a <start_coms+0xa>
   8048e:	e8df f004 	tbb	[pc, r4]
   80492:	1e04      	.short	0x1e04
   80494:	41392e23 	.word	0x41392e23
   80498:	46          	.byte	0x46
   80499:	00          	.byte	0x00
			case STANDBY:
			switch (read_char())
   8049a:	4b26      	ldr	r3, [pc, #152]	; (80534 <start_coms+0xb4>)
   8049c:	4798      	blx	r3
   8049e:	2857      	cmp	r0, #87	; 0x57
   804a0:	d00f      	beq.n	804c2 <start_coms+0x42>
   804a2:	d805      	bhi.n	804b0 <start_coms+0x30>
   804a4:	2805      	cmp	r0, #5
   804a6:	d00a      	beq.n	804be <start_coms+0x3e>
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
				break;
				case PIN_MODE:
				next_state = P_MODE;
   804a8:	2856      	cmp	r0, #86	; 0x56
   804aa:	bf08      	it	eq
   804ac:	2402      	moveq	r4, #2
   804ae:	e7ec      	b.n	8048a <start_coms+0xa>
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
			case STANDBY:
			switch (read_char())
   804b0:	2859      	cmp	r0, #89	; 0x59
   804b2:	d00a      	beq.n	804ca <start_coms+0x4a>
   804b4:	d307      	bcc.n	804c6 <start_coms+0x46>
				break;
				case ANALOG_WRITE:
				next_state = A_WRITE;
				break;
				case ANALOG_READ:
				next_state = A_READ;
   804b6:	285a      	cmp	r0, #90	; 0x5a
   804b8:	bf08      	it	eq
   804ba:	2406      	moveq	r4, #6
   804bc:	e7e5      	b.n	8048a <start_coms+0xa>
		switch(current_state){
			case STANDBY:
			switch (read_char())
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
   804be:	2401      	movs	r4, #1
   804c0:	e7e3      	b.n	8048a <start_coms+0xa>
				break;
				case PIN_MODE:
				next_state = P_MODE;
				break;
				case DIGITAL_WRITE:
				next_state = D_WRITE;
   804c2:	2403      	movs	r4, #3
				break;
   804c4:	e7e1      	b.n	8048a <start_coms+0xa>
				case DIGITAL_READ:
				next_state = D_READ;
   804c6:	2404      	movs	r4, #4
				break;
   804c8:	e7df      	b.n	8048a <start_coms+0xa>
				case ANALOG_WRITE:
				next_state = A_WRITE;
   804ca:	2405      	movs	r4, #5
				break;
   804cc:	e7dd      	b.n	8048a <start_coms+0xa>
				break;
			}
			break;
			
			case HANDSHAKE: /*Handshake with matlab*/
			send_char_term(ACK);
   804ce:	2006      	movs	r0, #6
   804d0:	4b19      	ldr	r3, [pc, #100]	; (80538 <start_coms+0xb8>)
   804d2:	4798      	blx	r3
			next_state = STANDBY;
   804d4:	2400      	movs	r4, #0
			break;
   804d6:	e7d8      	b.n	8048a <start_coms+0xa>
			
			case P_MODE: 
			pin = read_when_ready();
   804d8:	47a8      	blx	r5
   804da:	4604      	mov	r4, r0
			val = read_when_ready();
   804dc:	47a8      	blx	r5
			io_pin_dir(pin,(val-10));	//calculate value
   804de:	f1a0 010a 	sub.w	r1, r0, #10
   804e2:	4620      	mov	r0, r4
   804e4:	b249      	sxtb	r1, r1
   804e6:	4b15      	ldr	r3, [pc, #84]	; (8053c <start_coms+0xbc>)
   804e8:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   804ea:	2400      	movs	r4, #0
			break;
   804ec:	e7cd      	b.n	8048a <start_coms+0xa>
			
			case D_WRITE:
			pin = read_when_ready();
   804ee:	47a8      	blx	r5
   804f0:	4604      	mov	r4, r0
			val = read_when_ready();
   804f2:	47a8      	blx	r5
			io_pin_level(pin,(val-10));	//calculate value
   804f4:	f1a0 010a 	sub.w	r1, r0, #10
   804f8:	b260      	sxtb	r0, r4
   804fa:	b249      	sxtb	r1, r1
   804fc:	4b10      	ldr	r3, [pc, #64]	; (80540 <start_coms+0xc0>)
   804fe:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   80500:	2400      	movs	r4, #0
			break;
   80502:	e7c2      	b.n	8048a <start_coms+0xa>
			
			case D_READ:
			pin = read_when_ready();
   80504:	47a8      	blx	r5
			val = io_pin_status(pin);
   80506:	b240      	sxtb	r0, r0
   80508:	4b0e      	ldr	r3, [pc, #56]	; (80544 <start_coms+0xc4>)
   8050a:	4798      	blx	r3
			send_number(val);
   8050c:	b2c0      	uxtb	r0, r0
   8050e:	47b0      	blx	r6
			pin = 0;
			val = 0;
			next_state = STANDBY;
   80510:	2400      	movs	r4, #0
			break;
   80512:	e7ba      	b.n	8048a <start_coms+0xa>
			
			case A_WRITE:
			val = read_when_ready();
   80514:	47a8      	blx	r5
			io_pwm_duty(val);
   80516:	4b0c      	ldr	r3, [pc, #48]	; (80548 <start_coms+0xc8>)
   80518:	4798      	blx	r3
			val = 0;
			next_state = STANDBY;
   8051a:	2400      	movs	r4, #0
			break;
   8051c:	e7b5      	b.n	8048a <start_coms+0xa>
			
			case A_READ:
			pin = read_when_ready();
   8051e:	47a8      	blx	r5
			adc_val = io_adc_value(pin);
   80520:	47b8      	blx	r7
			send_number(adc_val);
   80522:	47b0      	blx	r6
			pin = 0;
			adc_val = 0;
			next_state = STANDBY;
   80524:	2400      	movs	r4, #0
			break;
   80526:	e7b0      	b.n	8048a <start_coms+0xa>
   80528:	0008042d 	.word	0x0008042d
   8052c:	000803bd 	.word	0x000803bd
   80530:	00080445 	.word	0x00080445
   80534:	00080411 	.word	0x00080411
   80538:	000803c9 	.word	0x000803c9
   8053c:	0008030d 	.word	0x0008030d
   80540:	00080351 	.word	0x00080351
   80544:	00080385 	.word	0x00080385
   80548:	000803b1 	.word	0x000803b1

0008054c <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
   8054c:	b4f0      	push	{r4, r5, r6, r7}
   8054e:	b08c      	sub	sp, #48	; 0x30
   80550:	4607      	mov	r7, r0
   80552:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
   80554:	ac01      	add	r4, sp, #4
   80556:	4d11      	ldr	r5, [pc, #68]	; (8059c <pwm_clocks_generate+0x50>)
   80558:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   8055a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   8055c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   8055e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80560:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   80564:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   80568:	aa01      	add	r2, sp, #4
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
   8056a:	2000      	movs	r0, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
   8056c:	f852 3b04 	ldr.w	r3, [r2], #4
   80570:	fbb6 f3f3 	udiv	r3, r6, r3
   80574:	fbb3 f3f7 	udiv	r3, r3, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
   80578:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   8057c:	d905      	bls.n	8058a <pwm_clocks_generate+0x3e>
			break;
		}
		ul_pre++;
   8057e:	3001      	adds	r0, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
   80580:	280b      	cmp	r0, #11
   80582:	d1f3      	bne.n	8056c <pwm_clocks_generate+0x20>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
		return ul_div | (ul_pre << 8);
	} else {
		return PWM_INVALID_ARGUMENT;
   80584:	f64f 70ff 	movw	r0, #65535	; 0xffff
   80588:	e005      	b.n	80596 <pwm_clocks_generate+0x4a>
		}
		ul_pre++;
	} while (ul_pre < PWM_CLOCK_PRE_MAX);

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
   8058a:	280a      	cmp	r0, #10
		return ul_div | (ul_pre << 8);
   8058c:	bf94      	ite	ls
   8058e:	ea43 2000 	orrls.w	r0, r3, r0, lsl #8
	} else {
		return PWM_INVALID_ARGUMENT;
   80592:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
	}
}
   80596:	b00c      	add	sp, #48	; 0x30
   80598:	bcf0      	pop	{r4, r5, r6, r7}
   8059a:	4770      	bx	lr
   8059c:	00085a40 	.word	0x00085a40

000805a0 <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
   805a0:	b570      	push	{r4, r5, r6, lr}
   805a2:	4606      	mov	r6, r0
   805a4:	460c      	mov	r4, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
   805a6:	6808      	ldr	r0, [r1, #0]
   805a8:	b140      	cbz	r0, 805bc <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
   805aa:	6889      	ldr	r1, [r1, #8]
   805ac:	4b0e      	ldr	r3, [pc, #56]	; (805e8 <pwm_init+0x48>)
   805ae:	4798      	blx	r3
   805b0:	4605      	mov	r5, r0
		if (result == PWM_INVALID_ARGUMENT) {
   805b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
   805b6:	4298      	cmp	r0, r3
   805b8:	d101      	bne.n	805be <pwm_init+0x1e>
   805ba:	e00e      	b.n	805da <pwm_init+0x3a>
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
	uint32_t clock = 0;
   805bc:	2500      	movs	r5, #0

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
   805be:	6860      	ldr	r0, [r4, #4]
   805c0:	b140      	cbz	r0, 805d4 <pwm_init+0x34>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
   805c2:	68a1      	ldr	r1, [r4, #8]
   805c4:	4b08      	ldr	r3, [pc, #32]	; (805e8 <pwm_init+0x48>)
   805c6:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
   805c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
   805cc:	4298      	cmp	r0, r3
   805ce:	d007      	beq.n	805e0 <pwm_init+0x40>
			return result;
		}

		clock |= (result << 16);
   805d0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
   805d4:	6035      	str	r5, [r6, #0]
#endif
	return 0;
   805d6:	2000      	movs	r0, #0
   805d8:	bd70      	pop	{r4, r5, r6, pc}

	/* Clock A */
	if (clock_config->ul_clka != 0) {
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
		if (result == PWM_INVALID_ARGUMENT) {
			return result;
   805da:	f64f 70ff 	movw	r0, #65535	; 0xffff
   805de:	bd70      	pop	{r4, r5, r6, pc}
	/* Clock B */
	if (clock_config->ul_clkb != 0) {
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);

		if (result == PWM_INVALID_ARGUMENT) {
			return result;
   805e0:	f64f 70ff 	movw	r0, #65535	; 0xffff
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
#endif
	return 0;
}
   805e4:	bd70      	pop	{r4, r5, r6, pc}
   805e6:	bf00      	nop
   805e8:	0008054d 	.word	0x0008054d

000805ec <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
   805ec:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
   805ee:	680b      	ldr	r3, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   805f0:	8a8a      	ldrh	r2, [r1, #20]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   805f2:	684c      	ldr	r4, [r1, #4]
   805f4:	f004 040f 	and.w	r4, r4, #15
   805f8:	4322      	orrs	r2, r4
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
   805fa:	890c      	ldrh	r4, [r1, #8]
   805fc:	4322      	orrs	r2, r4
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   805fe:	7a8c      	ldrb	r4, [r1, #10]
   80600:	ea42 2244 	orr.w	r2, r2, r4, lsl #9
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
			(p_channel->b_deadtime_generator << 16) |
   80604:	7d8c      	ldrb	r4, [r1, #22]
   80606:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
   8060a:	7dcc      	ldrb	r4, [r1, #23]
   8060c:	ea42 4244 	orr.w	r2, r2, r4, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
   80610:	7e0c      	ldrb	r4, [r1, #24]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80612:	ea42 4284 	orr.w	r2, r2, r4, lsl #18
   80616:	eb00 1443 	add.w	r4, r0, r3, lsl #5
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
   8061a:	f8c4 2200 	str.w	r2, [r4, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
   8061e:	68ca      	ldr	r2, [r1, #12]
   80620:	f8c4 2204 	str.w	r2, [r4, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
   80624:	690a      	ldr	r2, [r1, #16]
   80626:	f8c4 220c 	str.w	r2, [r4, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
   8062a:	7d8a      	ldrb	r2, [r1, #22]
   8062c:	b13a      	cbz	r2, 8063e <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
   8062e:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
   80630:	8b4a      	ldrh	r2, [r1, #26]
   80632:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
   80636:	eb00 1443 	add.w	r4, r0, r3, lsl #5
   8063a:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
   8063e:	6c84      	ldr	r4, [r0, #72]	; 0x48
   80640:	f04f 1201 	mov.w	r2, #65537	; 0x10001
   80644:	409a      	lsls	r2, r3
   80646:	43d2      	mvns	r2, r2
   80648:	ea02 0504 	and.w	r5, r2, r4
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
   8064c:	7fcc      	ldrb	r4, [r1, #31]
   8064e:	fa04 f603 	lsl.w	r6, r4, r3
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
   80652:	7f8c      	ldrb	r4, [r1, #30]
   80654:	409c      	lsls	r4, r3
   80656:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   8065a:	432c      	orrs	r4, r5
			(((p_channel->output_selection.b_override_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
   8065c:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
   8065e:	6c44      	ldr	r4, [r0, #68]	; 0x44
   80660:	4014      	ands	r4, r2
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
   80662:	f891 2021 	ldrb.w	r2, [r1, #33]	; 0x21
   80666:	fa02 f503 	lsl.w	r5, r2, r3
					<< 16);
	p_pwm->PWM_OS = tmp_reg;

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
   8066a:	f891 2020 	ldrb.w	r2, [r1, #32]
   8066e:	409a      	lsls	r2, r3
   80670:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
   80674:	4322      	orrs	r2, r4
			(((p_channel->output_selection.override_level_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
   80676:	6442      	str	r2, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
   80678:	2201      	movs	r2, #1
   8067a:	409a      	lsls	r2, r3
	if (p_channel->b_sync_ch) {
   8067c:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   80680:	b11c      	cbz	r4, 8068a <pwm_channel_init+0x9e>
		p_pwm->PWM_SCM |= channel;
   80682:	6a04      	ldr	r4, [r0, #32]
   80684:	4314      	orrs	r4, r2
   80686:	6204      	str	r4, [r0, #32]
   80688:	e003      	b.n	80692 <pwm_channel_init+0xa6>
	} else {
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
   8068a:	6a04      	ldr	r4, [r0, #32]
   8068c:	ea24 0402 	bic.w	r4, r4, r2
   80690:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
   80692:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   80696:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
   80698:	6e84      	ldr	r4, [r0, #104]	; 0x68
   8069a:	bf0c      	ite	eq
   8069c:	4314      	orreq	r4, r2
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
   8069e:	4394      	bicne	r4, r2
   806a0:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
   806a2:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   806a6:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
   806a8:	6e84      	ldr	r4, [r0, #104]	; 0x68
   806aa:	bf0c      	ite	eq
   806ac:	ea44 4202 	orreq.w	r2, r4, r2, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
   806b0:	ea24 4202 	bicne.w	r2, r4, r2, lsl #16
   806b4:	6682      	str	r2, [r0, #104]	; 0x68
	}
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
   806b6:	2b03      	cmp	r3, #3
   806b8:	d80b      	bhi.n	806d2 <pwm_channel_init+0xe6>
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE1;
   806ba:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
		ch_num *= 8;
   806bc:	00dd      	lsls	r5, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE1;
		fault_enable_reg &= ~(0xFF << ch_num);
   806be:	22ff      	movs	r2, #255	; 0xff
   806c0:	40aa      	lsls	r2, r5
   806c2:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   806c6:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
   806ca:	40ab      	lsls	r3, r5
   806cc:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE1 = fault_enable_reg;
   806ce:	66c3      	str	r3, [r0, #108]	; 0x6c
   806d0:	e00c      	b.n	806ec <pwm_channel_init+0x100>
	} else {
		ch_num -= 4;
   806d2:	3b04      	subs	r3, #4
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE2;
   806d4:	6f02      	ldr	r2, [r0, #112]	; 0x70
		fault_enable_reg &= ~(0xFF << ch_num);
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
		p_pwm->PWM_FPE1 = fault_enable_reg;
	} else {
		ch_num -= 4;
		ch_num *= 8;
   806d6:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE2;
		fault_enable_reg &= ~(0xFF << ch_num);
   806d8:	24ff      	movs	r4, #255	; 0xff
   806da:	409c      	lsls	r4, r3
   806dc:	ea22 0404 	bic.w	r4, r2, r4
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   806e0:	f891 2023 	ldrb.w	r2, [r1, #35]	; 0x23
   806e4:	fa02 f303 	lsl.w	r3, r2, r3
   806e8:	4323      	orrs	r3, r4
		p_pwm->PWM_FPE2 = fault_enable_reg;
   806ea:	6703      	str	r3, [r0, #112]	; 0x70
			PWM_CAE_ADEDGV(p_channel->ul_additional_edge) |
			p_channel->additional_edge_mode;
#endif

	return 0;
}
   806ec:	2000      	movs	r0, #0
   806ee:	bc70      	pop	{r4, r5, r6}
   806f0:	4770      	bx	lr
   806f2:	bf00      	nop

000806f4 <pwm_channel_update_duty>:
 *
 * \retval 0 if changing succeeds, otherwise fails.
 */
uint32_t pwm_channel_update_duty(Pwm *p_pwm, pwm_channel_t *p_channel,
		uint32_t ul_duty)
{
   806f4:	b410      	push	{r4}
	uint32_t ch_num = p_channel->channel;
   806f6:	680c      	ldr	r4, [r1, #0]

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
   806f8:	690b      	ldr	r3, [r1, #16]
   806fa:	4293      	cmp	r3, r2
   806fc:	d306      	bcc.n	8070c <pwm_channel_update_duty+0x18>
		return PWM_INVALID_ARGUMENT;
	} else {
		/* Save new duty cycle value */
		p_channel->ul_duty = ul_duty;
   806fe:	60ca      	str	r2, [r1, #12]
		mode &= ~PWM_CMR_CPD;
		p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = mode;

		p_pwm->PWM_CH_NUM[ch_num].PWM_CUPD = ul_duty;
#else
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
   80700:	eb00 1044 	add.w	r0, r0, r4, lsl #5
   80704:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
#endif
	}

	return 0;
   80708:	2000      	movs	r0, #0
   8070a:	e001      	b.n	80710 <pwm_channel_update_duty+0x1c>
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
		return PWM_INVALID_ARGUMENT;
   8070c:	f64f 70ff 	movw	r0, #65535	; 0xffff
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
#endif
	}

	return 0;
}
   80710:	f85d 4b04 	ldr.w	r4, [sp], #4
   80714:	4770      	bx	lr
   80716:	bf00      	nop

00080718 <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
   80718:	2301      	movs	r3, #1
   8071a:	408b      	lsls	r3, r1
   8071c:	6043      	str	r3, [r0, #4]
   8071e:	4770      	bx	lr

00080720 <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
   80720:	2301      	movs	r3, #1
   80722:	408b      	lsls	r3, r1
   80724:	6083      	str	r3, [r0, #8]
   80726:	4770      	bx	lr

00080728 <init_adc>:
 */ 
#include <adc.h>
#include <asf.h>
#include "io_control/adc.h"

void init_adc(){
   80728:	b538      	push	{r3, r4, r5, lr}
	pmc_enable_periph_clk(ID_ADC);
   8072a:	2025      	movs	r0, #37	; 0x25
   8072c:	4b13      	ldr	r3, [pc, #76]	; (8077c <init_adc+0x54>)
   8072e:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz()/2, ADC_CLOCK, 8);
   80730:	4c13      	ldr	r4, [pc, #76]	; (80780 <init_adc+0x58>)
   80732:	4620      	mov	r0, r4
   80734:	4913      	ldr	r1, [pc, #76]	; (80784 <init_adc+0x5c>)
   80736:	4a14      	ldr	r2, [pc, #80]	; (80788 <init_adc+0x60>)
   80738:	2308      	movs	r3, #8
   8073a:	4d14      	ldr	r5, [pc, #80]	; (8078c <init_adc+0x64>)
   8073c:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, ADC_SETTLING_TIME_3, 1);
   8073e:	4620      	mov	r0, r4
   80740:	2100      	movs	r1, #0
   80742:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
   80746:	2301      	movs	r3, #1
   80748:	4d11      	ldr	r5, [pc, #68]	; (80790 <init_adc+0x68>)
   8074a:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_10);
   8074c:	4620      	mov	r0, r4
   8074e:	2110      	movs	r1, #16
   80750:	4b10      	ldr	r3, [pc, #64]	; (80794 <init_adc+0x6c>)
   80752:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_7);	//A0
   80754:	4620      	mov	r0, r4
   80756:	2107      	movs	r1, #7
   80758:	4d0f      	ldr	r5, [pc, #60]	; (80798 <init_adc+0x70>)
   8075a:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_6);	//A1
   8075c:	4620      	mov	r0, r4
   8075e:	2106      	movs	r1, #6
   80760:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_5);	//A2
   80762:	4620      	mov	r0, r4
   80764:	2105      	movs	r1, #5
   80766:	47a8      	blx	r5
	adc_enable_all_channel(ADC);
   80768:	4620      	mov	r0, r4
   8076a:	4b0c      	ldr	r3, [pc, #48]	; (8079c <init_adc+0x74>)
   8076c:	4798      	blx	r3
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
   8076e:	4620      	mov	r0, r4
   80770:	2100      	movs	r1, #0
   80772:	460a      	mov	r2, r1
   80774:	4b0a      	ldr	r3, [pc, #40]	; (807a0 <init_adc+0x78>)
   80776:	4798      	blx	r3
   80778:	bd38      	pop	{r3, r4, r5, pc}
   8077a:	bf00      	nop
   8077c:	00080c4d 	.word	0x00080c4d
   80780:	400c0000 	.word	0x400c0000
   80784:	0501bd00 	.word	0x0501bd00
   80788:	000f4240 	.word	0x000f4240
   8078c:	00080151 	.word	0x00080151
   80790:	000801a5 	.word	0x000801a5
   80794:	00080185 	.word	0x00080185
   80798:	000801cd 	.word	0x000801cd
   8079c:	000801d5 	.word	0x000801d5
   807a0:	00080195 	.word	0x00080195

000807a4 <read_adc_value>:
}

uint16_t read_adc_value(uint32_t channel){
   807a4:	b538      	push	{r3, r4, r5, lr}
   807a6:	4604      	mov	r4, r0
	adc_start(ADC);
   807a8:	4d04      	ldr	r5, [pc, #16]	; (807bc <read_adc_value+0x18>)
   807aa:	4628      	mov	r0, r5
   807ac:	4b04      	ldr	r3, [pc, #16]	; (807c0 <read_adc_value+0x1c>)
   807ae:	4798      	blx	r3
	return ADC->ADC_CDR[channel];
   807b0:	3414      	adds	r4, #20
   807b2:	f855 0024 	ldr.w	r0, [r5, r4, lsl #2]
   807b6:	b280      	uxth	r0, r0
   807b8:	bd38      	pop	{r3, r4, r5, pc}
   807ba:	bf00      	nop
   807bc:	400c0000 	.word	0x400c0000
   807c0:	000801c5 	.word	0x000801c5

000807c4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   807c4:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   807c6:	480e      	ldr	r0, [pc, #56]	; (80800 <sysclk_init+0x3c>)
   807c8:	4b0e      	ldr	r3, [pc, #56]	; (80804 <sysclk_init+0x40>)
   807ca:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   807cc:	2000      	movs	r0, #0
   807ce:	213e      	movs	r1, #62	; 0x3e
   807d0:	4b0d      	ldr	r3, [pc, #52]	; (80808 <sysclk_init+0x44>)
   807d2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   807d4:	4c0d      	ldr	r4, [pc, #52]	; (8080c <sysclk_init+0x48>)
   807d6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   807d8:	2800      	cmp	r0, #0
   807da:	d0fc      	beq.n	807d6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   807dc:	4b0c      	ldr	r3, [pc, #48]	; (80810 <sysclk_init+0x4c>)
   807de:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   807e0:	4a0c      	ldr	r2, [pc, #48]	; (80814 <sysclk_init+0x50>)
   807e2:	4b0d      	ldr	r3, [pc, #52]	; (80818 <sysclk_init+0x54>)
   807e4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   807e6:	4c0d      	ldr	r4, [pc, #52]	; (8081c <sysclk_init+0x58>)
   807e8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   807ea:	2800      	cmp	r0, #0
   807ec:	d0fc      	beq.n	807e8 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   807ee:	2010      	movs	r0, #16
   807f0:	4b0b      	ldr	r3, [pc, #44]	; (80820 <sysclk_init+0x5c>)
   807f2:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   807f4:	4b0b      	ldr	r3, [pc, #44]	; (80824 <sysclk_init+0x60>)
   807f6:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   807f8:	4801      	ldr	r0, [pc, #4]	; (80800 <sysclk_init+0x3c>)
   807fa:	4b02      	ldr	r3, [pc, #8]	; (80804 <sysclk_init+0x40>)
   807fc:	4798      	blx	r3
   807fe:	bd10      	pop	{r4, pc}
   80800:	0501bd00 	.word	0x0501bd00
   80804:	200700a5 	.word	0x200700a5
   80808:	00080bc9 	.word	0x00080bc9
   8080c:	00080c1d 	.word	0x00080c1d
   80810:	00080c2d 	.word	0x00080c2d
   80814:	200d3f01 	.word	0x200d3f01
   80818:	400e0600 	.word	0x400e0600
   8081c:	00080c3d 	.word	0x00080c3d
   80820:	00080b61 	.word	0x00080b61
   80824:	00080d55 	.word	0x00080d55

00080828 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80828:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   8082a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   8082e:	4b16      	ldr	r3, [pc, #88]	; (80888 <board_init+0x60>)
   80830:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80832:	200b      	movs	r0, #11
   80834:	4c15      	ldr	r4, [pc, #84]	; (8088c <board_init+0x64>)
   80836:	47a0      	blx	r4
   80838:	200c      	movs	r0, #12
   8083a:	47a0      	blx	r4
   8083c:	200d      	movs	r0, #13
   8083e:	47a0      	blx	r4
   80840:	200e      	movs	r0, #14
   80842:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80844:	203b      	movs	r0, #59	; 0x3b
   80846:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8084a:	4c11      	ldr	r4, [pc, #68]	; (80890 <board_init+0x68>)
   8084c:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   8084e:	2055      	movs	r0, #85	; 0x55
   80850:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80854:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   80856:	2056      	movs	r0, #86	; 0x56
   80858:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8085c:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   8085e:	2068      	movs	r0, #104	; 0x68
   80860:	490c      	ldr	r1, [pc, #48]	; (80894 <board_init+0x6c>)
   80862:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80864:	205c      	movs	r0, #92	; 0x5c
   80866:	490c      	ldr	r1, [pc, #48]	; (80898 <board_init+0x70>)
   80868:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   8086a:	480c      	ldr	r0, [pc, #48]	; (8089c <board_init+0x74>)
   8086c:	f44f 7140 	mov.w	r1, #768	; 0x300
   80870:	4a0b      	ldr	r2, [pc, #44]	; (808a0 <board_init+0x78>)
   80872:	4b0c      	ldr	r3, [pc, #48]	; (808a4 <board_init+0x7c>)
   80874:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   80876:	202b      	movs	r0, #43	; 0x2b
   80878:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8087c:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   8087e:	202a      	movs	r0, #42	; 0x2a
   80880:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80884:	47a0      	blx	r4
   80886:	bd10      	pop	{r4, pc}
   80888:	400e1a50 	.word	0x400e1a50
   8088c:	00080c4d 	.word	0x00080c4d
   80890:	0008094d 	.word	0x0008094d
   80894:	28000079 	.word	0x28000079
   80898:	28000001 	.word	0x28000001
   8089c:	400e0e00 	.word	0x400e0e00
   808a0:	08000001 	.word	0x08000001
   808a4:	00080a21 	.word	0x00080a21

000808a8 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   808a8:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   808aa:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   808ae:	d016      	beq.n	808de <pio_set_peripheral+0x36>
   808b0:	d804      	bhi.n	808bc <pio_set_peripheral+0x14>
   808b2:	b1c1      	cbz	r1, 808e6 <pio_set_peripheral+0x3e>
   808b4:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   808b8:	d00a      	beq.n	808d0 <pio_set_peripheral+0x28>
   808ba:	e013      	b.n	808e4 <pio_set_peripheral+0x3c>
   808bc:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   808c0:	d011      	beq.n	808e6 <pio_set_peripheral+0x3e>
   808c2:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   808c6:	d00e      	beq.n	808e6 <pio_set_peripheral+0x3e>
   808c8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   808cc:	d10a      	bne.n	808e4 <pio_set_peripheral+0x3c>
   808ce:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   808d0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   808d2:	6f01      	ldr	r1, [r0, #112]	; 0x70
   808d4:	400b      	ands	r3, r1
   808d6:	ea23 0302 	bic.w	r3, r3, r2
   808da:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   808dc:	e002      	b.n	808e4 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   808de:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   808e0:	4313      	orrs	r3, r2
   808e2:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   808e4:	6042      	str	r2, [r0, #4]
   808e6:	4770      	bx	lr

000808e8 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   808e8:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   808ea:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   808ee:	bf14      	ite	ne
   808f0:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   808f2:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   808f4:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   808f8:	bf14      	ite	ne
   808fa:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   808fc:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   808fe:	f012 0f02 	tst.w	r2, #2
   80902:	d002      	beq.n	8090a <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80904:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80908:	e004      	b.n	80914 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   8090a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8090e:	bf18      	it	ne
   80910:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80914:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80916:	6001      	str	r1, [r0, #0]
   80918:	4770      	bx	lr
   8091a:	bf00      	nop

0008091c <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   8091c:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   8091e:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80920:	9c01      	ldr	r4, [sp, #4]
   80922:	b10c      	cbz	r4, 80928 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80924:	6641      	str	r1, [r0, #100]	; 0x64
   80926:	e000      	b.n	8092a <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80928:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   8092a:	b10b      	cbz	r3, 80930 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   8092c:	6501      	str	r1, [r0, #80]	; 0x50
   8092e:	e000      	b.n	80932 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80930:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80932:	b10a      	cbz	r2, 80938 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80934:	6301      	str	r1, [r0, #48]	; 0x30
   80936:	e000      	b.n	8093a <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80938:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   8093a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   8093c:	6001      	str	r1, [r0, #0]
}
   8093e:	f85d 4b04 	ldr.w	r4, [sp], #4
   80942:	4770      	bx	lr

00080944 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80944:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80946:	4770      	bx	lr

00080948 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80948:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8094a:	4770      	bx	lr

0008094c <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   8094c:	b570      	push	{r4, r5, r6, lr}
   8094e:	b082      	sub	sp, #8
   80950:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80952:	0943      	lsrs	r3, r0, #5
   80954:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80958:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8095c:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   8095e:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   80962:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80966:	d030      	beq.n	809ca <pio_configure_pin+0x7e>
   80968:	d806      	bhi.n	80978 <pio_configure_pin+0x2c>
   8096a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8096e:	d00a      	beq.n	80986 <pio_configure_pin+0x3a>
   80970:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80974:	d018      	beq.n	809a8 <pio_configure_pin+0x5c>
   80976:	e049      	b.n	80a0c <pio_configure_pin+0xc0>
   80978:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8097c:	d030      	beq.n	809e0 <pio_configure_pin+0x94>
   8097e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80982:	d02d      	beq.n	809e0 <pio_configure_pin+0x94>
   80984:	e042      	b.n	80a0c <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80986:	f000 001f 	and.w	r0, r0, #31
   8098a:	2601      	movs	r6, #1
   8098c:	4086      	lsls	r6, r0
   8098e:	4620      	mov	r0, r4
   80990:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80994:	4632      	mov	r2, r6
   80996:	4b1f      	ldr	r3, [pc, #124]	; (80a14 <pio_configure_pin+0xc8>)
   80998:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   8099a:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8099e:	bf14      	ite	ne
   809a0:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809a2:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809a4:	2001      	movs	r0, #1
   809a6:	e032      	b.n	80a0e <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   809a8:	f000 001f 	and.w	r0, r0, #31
   809ac:	2601      	movs	r6, #1
   809ae:	4086      	lsls	r6, r0
   809b0:	4620      	mov	r0, r4
   809b2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   809b6:	4632      	mov	r2, r6
   809b8:	4b16      	ldr	r3, [pc, #88]	; (80a14 <pio_configure_pin+0xc8>)
   809ba:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809bc:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809c0:	bf14      	ite	ne
   809c2:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809c4:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809c6:	2001      	movs	r0, #1
   809c8:	e021      	b.n	80a0e <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   809ca:	f000 031f 	and.w	r3, r0, #31
   809ce:	2601      	movs	r6, #1
   809d0:	4620      	mov	r0, r4
   809d2:	fa06 f103 	lsl.w	r1, r6, r3
   809d6:	462a      	mov	r2, r5
   809d8:	4b0f      	ldr	r3, [pc, #60]	; (80a18 <pio_configure_pin+0xcc>)
   809da:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   809dc:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   809de:	e016      	b.n	80a0e <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   809e0:	f000 031f 	and.w	r3, r0, #31
   809e4:	2601      	movs	r6, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   809e6:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   809ea:	ea05 0106 	and.w	r1, r5, r6
   809ee:	9100      	str	r1, [sp, #0]
   809f0:	4620      	mov	r0, r4
   809f2:	fa06 f103 	lsl.w	r1, r6, r3
   809f6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   809fa:	bf14      	ite	ne
   809fc:	2200      	movne	r2, #0
   809fe:	2201      	moveq	r2, #1
   80a00:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80a04:	4c05      	ldr	r4, [pc, #20]	; (80a1c <pio_configure_pin+0xd0>)
   80a06:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80a08:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80a0a:	e000      	b.n	80a0e <pio_configure_pin+0xc2>

	default:
		return 0;
   80a0c:	2000      	movs	r0, #0
	}

	return 1;
}
   80a0e:	b002      	add	sp, #8
   80a10:	bd70      	pop	{r4, r5, r6, pc}
   80a12:	bf00      	nop
   80a14:	000808a9 	.word	0x000808a9
   80a18:	000808e9 	.word	0x000808e9
   80a1c:	0008091d 	.word	0x0008091d

00080a20 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80a20:	b570      	push	{r4, r5, r6, lr}
   80a22:	b082      	sub	sp, #8
   80a24:	4606      	mov	r6, r0
   80a26:	460d      	mov	r5, r1
   80a28:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80a2a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   80a2e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80a32:	d026      	beq.n	80a82 <pio_configure_pin_group+0x62>
   80a34:	d806      	bhi.n	80a44 <pio_configure_pin_group+0x24>
   80a36:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80a3a:	d00a      	beq.n	80a52 <pio_configure_pin_group+0x32>
   80a3c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80a40:	d013      	beq.n	80a6a <pio_configure_pin_group+0x4a>
   80a42:	e034      	b.n	80aae <pio_configure_pin_group+0x8e>
   80a44:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80a48:	d01f      	beq.n	80a8a <pio_configure_pin_group+0x6a>
   80a4a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80a4e:	d01c      	beq.n	80a8a <pio_configure_pin_group+0x6a>
   80a50:	e02d      	b.n	80aae <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80a52:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80a56:	462a      	mov	r2, r5
   80a58:	4b16      	ldr	r3, [pc, #88]	; (80ab4 <pio_configure_pin_group+0x94>)
   80a5a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a5c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80a60:	bf14      	ite	ne
   80a62:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a64:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a66:	2001      	movs	r0, #1
   80a68:	e022      	b.n	80ab0 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80a6a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80a6e:	462a      	mov	r2, r5
   80a70:	4b10      	ldr	r3, [pc, #64]	; (80ab4 <pio_configure_pin_group+0x94>)
   80a72:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a74:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80a78:	bf14      	ite	ne
   80a7a:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a7c:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a7e:	2001      	movs	r0, #1
   80a80:	e016      	b.n	80ab0 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80a82:	4b0d      	ldr	r3, [pc, #52]	; (80ab8 <pio_configure_pin_group+0x98>)
   80a84:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80a86:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80a88:	e012      	b.n	80ab0 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80a8a:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80a8e:	f004 0301 	and.w	r3, r4, #1
   80a92:	9300      	str	r3, [sp, #0]
   80a94:	4630      	mov	r0, r6
   80a96:	4629      	mov	r1, r5
   80a98:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80a9c:	bf14      	ite	ne
   80a9e:	2200      	movne	r2, #0
   80aa0:	2201      	moveq	r2, #1
   80aa2:	f3c4 0380 	ubfx	r3, r4, #2, #1
   80aa6:	4c05      	ldr	r4, [pc, #20]	; (80abc <pio_configure_pin_group+0x9c>)
   80aa8:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80aaa:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80aac:	e000      	b.n	80ab0 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80aae:	2000      	movs	r0, #0
	}

	return 1;
}
   80ab0:	b002      	add	sp, #8
   80ab2:	bd70      	pop	{r4, r5, r6, pc}
   80ab4:	000808a9 	.word	0x000808a9
   80ab8:	000808e9 	.word	0x000808e9
   80abc:	0008091d 	.word	0x0008091d

00080ac0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80ac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80ac4:	4604      	mov	r4, r0
   80ac6:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80ac8:	4b0e      	ldr	r3, [pc, #56]	; (80b04 <pio_handler_process+0x44>)
   80aca:	4798      	blx	r3
   80acc:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80ace:	4620      	mov	r0, r4
   80ad0:	4b0d      	ldr	r3, [pc, #52]	; (80b08 <pio_handler_process+0x48>)
   80ad2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80ad4:	4005      	ands	r5, r0
   80ad6:	d013      	beq.n	80b00 <pio_handler_process+0x40>
   80ad8:	4c0c      	ldr	r4, [pc, #48]	; (80b0c <pio_handler_process+0x4c>)
   80ada:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80ade:	6823      	ldr	r3, [r4, #0]
   80ae0:	4543      	cmp	r3, r8
   80ae2:	d108      	bne.n	80af6 <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80ae4:	6861      	ldr	r1, [r4, #4]
   80ae6:	4229      	tst	r1, r5
   80ae8:	d005      	beq.n	80af6 <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80aea:	68e3      	ldr	r3, [r4, #12]
   80aec:	4640      	mov	r0, r8
   80aee:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80af0:	6863      	ldr	r3, [r4, #4]
   80af2:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80af6:	42b4      	cmp	r4, r6
   80af8:	d002      	beq.n	80b00 <pio_handler_process+0x40>
   80afa:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80afc:	2d00      	cmp	r5, #0
   80afe:	d1ee      	bne.n	80ade <pio_handler_process+0x1e>
   80b00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80b04:	00080945 	.word	0x00080945
   80b08:	00080949 	.word	0x00080949
   80b0c:	20070a30 	.word	0x20070a30

00080b10 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80b10:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80b12:	4802      	ldr	r0, [pc, #8]	; (80b1c <PIOA_Handler+0xc>)
   80b14:	210b      	movs	r1, #11
   80b16:	4b02      	ldr	r3, [pc, #8]	; (80b20 <PIOA_Handler+0x10>)
   80b18:	4798      	blx	r3
   80b1a:	bd08      	pop	{r3, pc}
   80b1c:	400e0e00 	.word	0x400e0e00
   80b20:	00080ac1 	.word	0x00080ac1

00080b24 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80b24:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80b26:	4802      	ldr	r0, [pc, #8]	; (80b30 <PIOB_Handler+0xc>)
   80b28:	210c      	movs	r1, #12
   80b2a:	4b02      	ldr	r3, [pc, #8]	; (80b34 <PIOB_Handler+0x10>)
   80b2c:	4798      	blx	r3
   80b2e:	bd08      	pop	{r3, pc}
   80b30:	400e1000 	.word	0x400e1000
   80b34:	00080ac1 	.word	0x00080ac1

00080b38 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80b38:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80b3a:	4802      	ldr	r0, [pc, #8]	; (80b44 <PIOC_Handler+0xc>)
   80b3c:	210d      	movs	r1, #13
   80b3e:	4b02      	ldr	r3, [pc, #8]	; (80b48 <PIOC_Handler+0x10>)
   80b40:	4798      	blx	r3
   80b42:	bd08      	pop	{r3, pc}
   80b44:	400e1200 	.word	0x400e1200
   80b48:	00080ac1 	.word	0x00080ac1

00080b4c <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80b4c:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80b4e:	4802      	ldr	r0, [pc, #8]	; (80b58 <PIOD_Handler+0xc>)
   80b50:	210e      	movs	r1, #14
   80b52:	4b02      	ldr	r3, [pc, #8]	; (80b5c <PIOD_Handler+0x10>)
   80b54:	4798      	blx	r3
   80b56:	bd08      	pop	{r3, pc}
   80b58:	400e1400 	.word	0x400e1400
   80b5c:	00080ac1 	.word	0x00080ac1

00080b60 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80b60:	4a18      	ldr	r2, [pc, #96]	; (80bc4 <pmc_switch_mck_to_pllack+0x64>)
   80b62:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80b64:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80b68:	4318      	orrs	r0, r3
   80b6a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b6c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80b6e:	f013 0f08 	tst.w	r3, #8
   80b72:	d003      	beq.n	80b7c <pmc_switch_mck_to_pllack+0x1c>
   80b74:	e009      	b.n	80b8a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80b76:	3b01      	subs	r3, #1
   80b78:	d103      	bne.n	80b82 <pmc_switch_mck_to_pllack+0x22>
   80b7a:	e01e      	b.n	80bba <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b7c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80b80:	4910      	ldr	r1, [pc, #64]	; (80bc4 <pmc_switch_mck_to_pllack+0x64>)
   80b82:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80b84:	f012 0f08 	tst.w	r2, #8
   80b88:	d0f5      	beq.n	80b76 <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80b8a:	4a0e      	ldr	r2, [pc, #56]	; (80bc4 <pmc_switch_mck_to_pllack+0x64>)
   80b8c:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80b8e:	f023 0303 	bic.w	r3, r3, #3
   80b92:	f043 0302 	orr.w	r3, r3, #2
   80b96:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b98:	6e90      	ldr	r0, [r2, #104]	; 0x68
   80b9a:	f010 0008 	ands.w	r0, r0, #8
   80b9e:	d004      	beq.n	80baa <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80ba0:	2000      	movs	r0, #0
   80ba2:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
   80ba4:	3b01      	subs	r3, #1
   80ba6:	d103      	bne.n	80bb0 <pmc_switch_mck_to_pllack+0x50>
   80ba8:	e009      	b.n	80bbe <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80baa:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80bae:	4905      	ldr	r1, [pc, #20]	; (80bc4 <pmc_switch_mck_to_pllack+0x64>)
   80bb0:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80bb2:	f012 0f08 	tst.w	r2, #8
   80bb6:	d0f5      	beq.n	80ba4 <pmc_switch_mck_to_pllack+0x44>
   80bb8:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80bba:	2001      	movs	r0, #1
   80bbc:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80bbe:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80bc0:	4770      	bx	lr
   80bc2:	bf00      	nop
   80bc4:	400e0600 	.word	0x400e0600

00080bc8 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80bc8:	b138      	cbz	r0, 80bda <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80bca:	4911      	ldr	r1, [pc, #68]	; (80c10 <pmc_switch_mainck_to_xtal+0x48>)
   80bcc:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80bce:	4a11      	ldr	r2, [pc, #68]	; (80c14 <pmc_switch_mainck_to_xtal+0x4c>)
   80bd0:	401a      	ands	r2, r3
   80bd2:	4b11      	ldr	r3, [pc, #68]	; (80c18 <pmc_switch_mainck_to_xtal+0x50>)
   80bd4:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80bd6:	620b      	str	r3, [r1, #32]
   80bd8:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80bda:	4a0d      	ldr	r2, [pc, #52]	; (80c10 <pmc_switch_mainck_to_xtal+0x48>)
   80bdc:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80bde:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80be2:	f023 0303 	bic.w	r3, r3, #3
   80be6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80bea:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80bee:	0209      	lsls	r1, r1, #8
   80bf0:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80bf2:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80bf4:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80bf6:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80bf8:	f013 0f01 	tst.w	r3, #1
   80bfc:	d0fb      	beq.n	80bf6 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80bfe:	4a04      	ldr	r2, [pc, #16]	; (80c10 <pmc_switch_mainck_to_xtal+0x48>)
   80c00:	6a13      	ldr	r3, [r2, #32]
   80c02:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80c06:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80c0a:	6213      	str	r3, [r2, #32]
   80c0c:	4770      	bx	lr
   80c0e:	bf00      	nop
   80c10:	400e0600 	.word	0x400e0600
   80c14:	fec8fffc 	.word	0xfec8fffc
   80c18:	01370002 	.word	0x01370002

00080c1c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80c1c:	4b02      	ldr	r3, [pc, #8]	; (80c28 <pmc_osc_is_ready_mainck+0xc>)
   80c1e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c20:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80c24:	4770      	bx	lr
   80c26:	bf00      	nop
   80c28:	400e0600 	.word	0x400e0600

00080c2c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80c2c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80c30:	4b01      	ldr	r3, [pc, #4]	; (80c38 <pmc_disable_pllack+0xc>)
   80c32:	629a      	str	r2, [r3, #40]	; 0x28
   80c34:	4770      	bx	lr
   80c36:	bf00      	nop
   80c38:	400e0600 	.word	0x400e0600

00080c3c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80c3c:	4b02      	ldr	r3, [pc, #8]	; (80c48 <pmc_is_locked_pllack+0xc>)
   80c3e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c40:	f000 0002 	and.w	r0, r0, #2
   80c44:	4770      	bx	lr
   80c46:	bf00      	nop
   80c48:	400e0600 	.word	0x400e0600

00080c4c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80c4c:	282c      	cmp	r0, #44	; 0x2c
   80c4e:	d81e      	bhi.n	80c8e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   80c50:	281f      	cmp	r0, #31
   80c52:	d80c      	bhi.n	80c6e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80c54:	4b11      	ldr	r3, [pc, #68]	; (80c9c <pmc_enable_periph_clk+0x50>)
   80c56:	699a      	ldr	r2, [r3, #24]
   80c58:	2301      	movs	r3, #1
   80c5a:	4083      	lsls	r3, r0
   80c5c:	401a      	ands	r2, r3
   80c5e:	4293      	cmp	r3, r2
   80c60:	d017      	beq.n	80c92 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   80c62:	2301      	movs	r3, #1
   80c64:	4083      	lsls	r3, r0
   80c66:	4a0d      	ldr	r2, [pc, #52]	; (80c9c <pmc_enable_periph_clk+0x50>)
   80c68:	6113      	str	r3, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80c6a:	2000      	movs	r0, #0
   80c6c:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80c6e:	4b0b      	ldr	r3, [pc, #44]	; (80c9c <pmc_enable_periph_clk+0x50>)
   80c70:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
   80c74:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80c76:	2301      	movs	r3, #1
   80c78:	4083      	lsls	r3, r0
   80c7a:	401a      	ands	r2, r3
   80c7c:	4293      	cmp	r3, r2
   80c7e:	d00a      	beq.n	80c96 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   80c80:	2301      	movs	r3, #1
   80c82:	4083      	lsls	r3, r0
   80c84:	4a05      	ldr	r2, [pc, #20]	; (80c9c <pmc_enable_periph_clk+0x50>)
   80c86:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
   80c8a:	2000      	movs	r0, #0
   80c8c:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80c8e:	2001      	movs	r0, #1
   80c90:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80c92:	2000      	movs	r0, #0
   80c94:	4770      	bx	lr
   80c96:	2000      	movs	r0, #0
}
   80c98:	4770      	bx	lr
   80c9a:	bf00      	nop
   80c9c:	400e0600 	.word	0x400e0600

00080ca0 <Dummy_Handler>:
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
	}
   80ca0:	e7fe      	b.n	80ca0 <Dummy_Handler>
   80ca2:	bf00      	nop

00080ca4 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80ca4:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80ca6:	4b1f      	ldr	r3, [pc, #124]	; (80d24 <Reset_Handler+0x80>)
   80ca8:	4a1f      	ldr	r2, [pc, #124]	; (80d28 <Reset_Handler+0x84>)
   80caa:	429a      	cmp	r2, r3
   80cac:	d003      	beq.n	80cb6 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80cae:	4b1f      	ldr	r3, [pc, #124]	; (80d2c <Reset_Handler+0x88>)
   80cb0:	4a1c      	ldr	r2, [pc, #112]	; (80d24 <Reset_Handler+0x80>)
   80cb2:	429a      	cmp	r2, r3
   80cb4:	d304      	bcc.n	80cc0 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80cb6:	4b1e      	ldr	r3, [pc, #120]	; (80d30 <Reset_Handler+0x8c>)
   80cb8:	4a1e      	ldr	r2, [pc, #120]	; (80d34 <Reset_Handler+0x90>)
   80cba:	429a      	cmp	r2, r3
   80cbc:	d310      	bcc.n	80ce0 <Reset_Handler+0x3c>
   80cbe:	e01b      	b.n	80cf8 <Reset_Handler+0x54>
   80cc0:	4918      	ldr	r1, [pc, #96]	; (80d24 <Reset_Handler+0x80>)
   80cc2:	1d0a      	adds	r2, r1, #4
   80cc4:	4b1c      	ldr	r3, [pc, #112]	; (80d38 <Reset_Handler+0x94>)
   80cc6:	1a9b      	subs	r3, r3, r2
   80cc8:	f023 0303 	bic.w	r3, r3, #3
   80ccc:	3304      	adds	r3, #4
   80cce:	4a16      	ldr	r2, [pc, #88]	; (80d28 <Reset_Handler+0x84>)
   80cd0:	4413      	add	r3, r2
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
			*pDest++ = *pSrc++;
   80cd2:	f852 0b04 	ldr.w	r0, [r2], #4
   80cd6:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80cda:	429a      	cmp	r2, r3
   80cdc:	d1f9      	bne.n	80cd2 <Reset_Handler+0x2e>
   80cde:	e7ea      	b.n	80cb6 <Reset_Handler+0x12>
   80ce0:	4b16      	ldr	r3, [pc, #88]	; (80d3c <Reset_Handler+0x98>)
   80ce2:	4a17      	ldr	r2, [pc, #92]	; (80d40 <Reset_Handler+0x9c>)
   80ce4:	1ad2      	subs	r2, r2, r3
   80ce6:	f022 0203 	bic.w	r2, r2, #3
   80cea:	441a      	add	r2, r3
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80cec:	3b04      	subs	r3, #4
		*pDest++ = 0;
   80cee:	2100      	movs	r1, #0
   80cf0:	f843 1b04 	str.w	r1, [r3], #4
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80cf4:	4293      	cmp	r3, r2
   80cf6:	d1fb      	bne.n	80cf0 <Reset_Handler+0x4c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80cf8:	4b12      	ldr	r3, [pc, #72]	; (80d44 <Reset_Handler+0xa0>)
   80cfa:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80cfe:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80d02:	4911      	ldr	r1, [pc, #68]	; (80d48 <Reset_Handler+0xa4>)
   80d04:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80d06:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80d0a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80d0e:	d203      	bcs.n	80d18 <Reset_Handler+0x74>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80d10:	688b      	ldr	r3, [r1, #8]
   80d12:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80d16:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80d18:	4b0c      	ldr	r3, [pc, #48]	; (80d4c <Reset_Handler+0xa8>)
   80d1a:	4798      	blx	r3

	/* Branch to main function */
	main();
   80d1c:	4b0c      	ldr	r3, [pc, #48]	; (80d50 <Reset_Handler+0xac>)
   80d1e:	4798      	blx	r3

	/* Infinite loop */
	while (1);
   80d20:	e7fe      	b.n	80d20 <Reset_Handler+0x7c>
   80d22:	bf00      	nop
   80d24:	20070000 	.word	0x20070000
   80d28:	00085c24 	.word	0x00085c24
   80d2c:	200709ec 	.word	0x200709ec
   80d30:	20070adc 	.word	0x20070adc
   80d34:	200709ec 	.word	0x200709ec
   80d38:	200709ef 	.word	0x200709ef
   80d3c:	200709f0 	.word	0x200709f0
   80d40:	20070adf 	.word	0x20070adf
   80d44:	00080000 	.word	0x00080000
   80d48:	e000ed00 	.word	0xe000ed00
   80d4c:	00080ee1 	.word	0x00080ee1
   80d50:	00080ea5 	.word	0x00080ea5

00080d54 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80d54:	4b3e      	ldr	r3, [pc, #248]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80d58:	f003 0303 	and.w	r3, r3, #3
   80d5c:	2b03      	cmp	r3, #3
   80d5e:	d85f      	bhi.n	80e20 <SystemCoreClockUpdate+0xcc>
   80d60:	e8df f003 	tbb	[pc, r3]
   80d64:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80d68:	4b3a      	ldr	r3, [pc, #232]	; (80e54 <SystemCoreClockUpdate+0x100>)
   80d6a:	695b      	ldr	r3, [r3, #20]
   80d6c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80d70:	bf14      	ite	ne
   80d72:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80d76:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80d7a:	4b37      	ldr	r3, [pc, #220]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80d7c:	601a      	str	r2, [r3, #0]
   80d7e:	e04f      	b.n	80e20 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80d80:	4b33      	ldr	r3, [pc, #204]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80d82:	6a1b      	ldr	r3, [r3, #32]
   80d84:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80d88:	d003      	beq.n	80d92 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80d8a:	4a34      	ldr	r2, [pc, #208]	; (80e5c <SystemCoreClockUpdate+0x108>)
   80d8c:	4b32      	ldr	r3, [pc, #200]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80d8e:	601a      	str	r2, [r3, #0]
   80d90:	e046      	b.n	80e20 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80d92:	4a33      	ldr	r2, [pc, #204]	; (80e60 <SystemCoreClockUpdate+0x10c>)
   80d94:	4b30      	ldr	r3, [pc, #192]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80d96:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80d98:	4b2d      	ldr	r3, [pc, #180]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80d9a:	6a1b      	ldr	r3, [r3, #32]
   80d9c:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80da0:	2b10      	cmp	r3, #16
   80da2:	d002      	beq.n	80daa <SystemCoreClockUpdate+0x56>
   80da4:	2b20      	cmp	r3, #32
   80da6:	d004      	beq.n	80db2 <SystemCoreClockUpdate+0x5e>
   80da8:	e03a      	b.n	80e20 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80daa:	4a2e      	ldr	r2, [pc, #184]	; (80e64 <SystemCoreClockUpdate+0x110>)
   80dac:	4b2a      	ldr	r3, [pc, #168]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80dae:	601a      	str	r2, [r3, #0]
				break;
   80db0:	e036      	b.n	80e20 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80db2:	4a2a      	ldr	r2, [pc, #168]	; (80e5c <SystemCoreClockUpdate+0x108>)
   80db4:	4b28      	ldr	r3, [pc, #160]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80db6:	601a      	str	r2, [r3, #0]
				break;
   80db8:	e032      	b.n	80e20 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80dba:	4b25      	ldr	r3, [pc, #148]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80dbc:	6a1b      	ldr	r3, [r3, #32]
   80dbe:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80dc2:	d003      	beq.n	80dcc <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80dc4:	4a25      	ldr	r2, [pc, #148]	; (80e5c <SystemCoreClockUpdate+0x108>)
   80dc6:	4b24      	ldr	r3, [pc, #144]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80dc8:	601a      	str	r2, [r3, #0]
   80dca:	e012      	b.n	80df2 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80dcc:	4a24      	ldr	r2, [pc, #144]	; (80e60 <SystemCoreClockUpdate+0x10c>)
   80dce:	4b22      	ldr	r3, [pc, #136]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80dd0:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80dd2:	4b1f      	ldr	r3, [pc, #124]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80dd4:	6a1b      	ldr	r3, [r3, #32]
   80dd6:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80dda:	2b10      	cmp	r3, #16
   80ddc:	d002      	beq.n	80de4 <SystemCoreClockUpdate+0x90>
   80dde:	2b20      	cmp	r3, #32
   80de0:	d004      	beq.n	80dec <SystemCoreClockUpdate+0x98>
   80de2:	e006      	b.n	80df2 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80de4:	4a1f      	ldr	r2, [pc, #124]	; (80e64 <SystemCoreClockUpdate+0x110>)
   80de6:	4b1c      	ldr	r3, [pc, #112]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80de8:	601a      	str	r2, [r3, #0]
				break;
   80dea:	e002      	b.n	80df2 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80dec:	4a1b      	ldr	r2, [pc, #108]	; (80e5c <SystemCoreClockUpdate+0x108>)
   80dee:	4b1a      	ldr	r3, [pc, #104]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80df0:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80df2:	4b17      	ldr	r3, [pc, #92]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80df4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80df6:	f003 0303 	and.w	r3, r3, #3
   80dfa:	2b02      	cmp	r3, #2
   80dfc:	d10d      	bne.n	80e1a <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80dfe:	4a14      	ldr	r2, [pc, #80]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80e00:	6a93      	ldr	r3, [r2, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e02:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80e04:	4814      	ldr	r0, [pc, #80]	; (80e58 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80e06:	f3c3 410a 	ubfx	r1, r3, #16, #11
   80e0a:	6803      	ldr	r3, [r0, #0]
   80e0c:	fb01 3303 	mla	r3, r1, r3, r3
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e10:	b2d2      	uxtb	r2, r2
   80e12:	fbb3 f3f2 	udiv	r3, r3, r2
   80e16:	6003      	str	r3, [r0, #0]
   80e18:	e002      	b.n	80e20 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80e1a:	4a13      	ldr	r2, [pc, #76]	; (80e68 <SystemCoreClockUpdate+0x114>)
   80e1c:	4b0e      	ldr	r3, [pc, #56]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80e1e:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80e20:	4b0b      	ldr	r3, [pc, #44]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80e22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e24:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80e28:	2b70      	cmp	r3, #112	; 0x70
   80e2a:	d107      	bne.n	80e3c <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80e2c:	4a0a      	ldr	r2, [pc, #40]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80e2e:	6813      	ldr	r3, [r2, #0]
   80e30:	490e      	ldr	r1, [pc, #56]	; (80e6c <SystemCoreClockUpdate+0x118>)
   80e32:	fba1 1303 	umull	r1, r3, r1, r3
   80e36:	085b      	lsrs	r3, r3, #1
   80e38:	6013      	str	r3, [r2, #0]
   80e3a:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80e3c:	4b04      	ldr	r3, [pc, #16]	; (80e50 <SystemCoreClockUpdate+0xfc>)
   80e3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80e40:	4905      	ldr	r1, [pc, #20]	; (80e58 <SystemCoreClockUpdate+0x104>)
   80e42:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80e46:	680b      	ldr	r3, [r1, #0]
   80e48:	40d3      	lsrs	r3, r2
   80e4a:	600b      	str	r3, [r1, #0]
   80e4c:	4770      	bx	lr
   80e4e:	bf00      	nop
   80e50:	400e0600 	.word	0x400e0600
   80e54:	400e1a10 	.word	0x400e1a10
   80e58:	20070170 	.word	0x20070170
   80e5c:	00b71b00 	.word	0x00b71b00
   80e60:	003d0900 	.word	0x003d0900
   80e64:	007a1200 	.word	0x007a1200
   80e68:	0e4e1c00 	.word	0x0e4e1c00
   80e6c:	aaaaaaab 	.word	0xaaaaaaab

00080e70 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80e70:	4b09      	ldr	r3, [pc, #36]	; (80e98 <_sbrk+0x28>)
   80e72:	681b      	ldr	r3, [r3, #0]
   80e74:	b913      	cbnz	r3, 80e7c <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80e76:	4a09      	ldr	r2, [pc, #36]	; (80e9c <_sbrk+0x2c>)
   80e78:	4b07      	ldr	r3, [pc, #28]	; (80e98 <_sbrk+0x28>)
   80e7a:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80e7c:	4b06      	ldr	r3, [pc, #24]	; (80e98 <_sbrk+0x28>)
   80e7e:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80e80:	181a      	adds	r2, r3, r0
   80e82:	4907      	ldr	r1, [pc, #28]	; (80ea0 <_sbrk+0x30>)
   80e84:	4291      	cmp	r1, r2
   80e86:	db04      	blt.n	80e92 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80e88:	4610      	mov	r0, r2
   80e8a:	4a03      	ldr	r2, [pc, #12]	; (80e98 <_sbrk+0x28>)
   80e8c:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80e8e:	4618      	mov	r0, r3
   80e90:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80e92:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80e96:	4770      	bx	lr
   80e98:	20070aa0 	.word	0x20070aa0
   80e9c:	20072ae0 	.word	0x20072ae0
   80ea0:	20087ffc 	.word	0x20087ffc

00080ea4 <main>:
#include "common/pin_mapper.h"

#define UART_BAUDRATE	115200		//Baud must be the same in Matlab

int main (void)
{
   80ea4:	b508      	push	{r3, lr}
	sysclk_init();
   80ea6:	4b08      	ldr	r3, [pc, #32]	; (80ec8 <main+0x24>)
   80ea8:	4798      	blx	r3
	board_init();
   80eaa:	4b08      	ldr	r3, [pc, #32]	; (80ecc <main+0x28>)
   80eac:	4798      	blx	r3
	uart_config((uint32_t)UART_BAUDRATE);
   80eae:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80eb2:	4b07      	ldr	r3, [pc, #28]	; (80ed0 <main+0x2c>)
   80eb4:	4798      	blx	r3
	init_adc();
   80eb6:	4b07      	ldr	r3, [pc, #28]	; (80ed4 <main+0x30>)
   80eb8:	4798      	blx	r3
	pwm_setup();
   80eba:	4b07      	ldr	r3, [pc, #28]	; (80ed8 <main+0x34>)
   80ebc:	4798      	blx	r3
	start_coms();					//Run state machine
   80ebe:	4b07      	ldr	r3, [pc, #28]	; (80edc <main+0x38>)
   80ec0:	4798      	blx	r3
	
	
}
   80ec2:	2000      	movs	r0, #0
   80ec4:	bd08      	pop	{r3, pc}
   80ec6:	bf00      	nop
   80ec8:	000807c5 	.word	0x000807c5
   80ecc:	00080829 	.word	0x00080829
   80ed0:	00080299 	.word	0x00080299
   80ed4:	00080729 	.word	0x00080729
   80ed8:	00080205 	.word	0x00080205
   80edc:	00080481 	.word	0x00080481

00080ee0 <__libc_init_array>:
   80ee0:	b570      	push	{r4, r5, r6, lr}
   80ee2:	4e0f      	ldr	r6, [pc, #60]	; (80f20 <__libc_init_array+0x40>)
   80ee4:	4d0f      	ldr	r5, [pc, #60]	; (80f24 <__libc_init_array+0x44>)
   80ee6:	1b76      	subs	r6, r6, r5
   80ee8:	10b6      	asrs	r6, r6, #2
   80eea:	bf18      	it	ne
   80eec:	2400      	movne	r4, #0
   80eee:	d005      	beq.n	80efc <__libc_init_array+0x1c>
   80ef0:	3401      	adds	r4, #1
   80ef2:	f855 3b04 	ldr.w	r3, [r5], #4
   80ef6:	4798      	blx	r3
   80ef8:	42a6      	cmp	r6, r4
   80efa:	d1f9      	bne.n	80ef0 <__libc_init_array+0x10>
   80efc:	4e0a      	ldr	r6, [pc, #40]	; (80f28 <__libc_init_array+0x48>)
   80efe:	4d0b      	ldr	r5, [pc, #44]	; (80f2c <__libc_init_array+0x4c>)
   80f00:	f004 fe7a 	bl	85bf8 <_init>
   80f04:	1b76      	subs	r6, r6, r5
   80f06:	10b6      	asrs	r6, r6, #2
   80f08:	bf18      	it	ne
   80f0a:	2400      	movne	r4, #0
   80f0c:	d006      	beq.n	80f1c <__libc_init_array+0x3c>
   80f0e:	3401      	adds	r4, #1
   80f10:	f855 3b04 	ldr.w	r3, [r5], #4
   80f14:	4798      	blx	r3
   80f16:	42a6      	cmp	r6, r4
   80f18:	d1f9      	bne.n	80f0e <__libc_init_array+0x2e>
   80f1a:	bd70      	pop	{r4, r5, r6, pc}
   80f1c:	bd70      	pop	{r4, r5, r6, pc}
   80f1e:	bf00      	nop
   80f20:	00085c04 	.word	0x00085c04
   80f24:	00085c04 	.word	0x00085c04
   80f28:	00085c0c 	.word	0x00085c0c
   80f2c:	00085c04 	.word	0x00085c04

00080f30 <memset>:
   80f30:	b470      	push	{r4, r5, r6}
   80f32:	0784      	lsls	r4, r0, #30
   80f34:	d046      	beq.n	80fc4 <memset+0x94>
   80f36:	1e54      	subs	r4, r2, #1
   80f38:	2a00      	cmp	r2, #0
   80f3a:	d041      	beq.n	80fc0 <memset+0x90>
   80f3c:	b2cd      	uxtb	r5, r1
   80f3e:	4603      	mov	r3, r0
   80f40:	e002      	b.n	80f48 <memset+0x18>
   80f42:	1e62      	subs	r2, r4, #1
   80f44:	b3e4      	cbz	r4, 80fc0 <memset+0x90>
   80f46:	4614      	mov	r4, r2
   80f48:	f803 5b01 	strb.w	r5, [r3], #1
   80f4c:	079a      	lsls	r2, r3, #30
   80f4e:	d1f8      	bne.n	80f42 <memset+0x12>
   80f50:	2c03      	cmp	r4, #3
   80f52:	d92e      	bls.n	80fb2 <memset+0x82>
   80f54:	b2cd      	uxtb	r5, r1
   80f56:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   80f5a:	2c0f      	cmp	r4, #15
   80f5c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   80f60:	d919      	bls.n	80f96 <memset+0x66>
   80f62:	4626      	mov	r6, r4
   80f64:	f103 0210 	add.w	r2, r3, #16
   80f68:	3e10      	subs	r6, #16
   80f6a:	2e0f      	cmp	r6, #15
   80f6c:	f842 5c10 	str.w	r5, [r2, #-16]
   80f70:	f842 5c0c 	str.w	r5, [r2, #-12]
   80f74:	f842 5c08 	str.w	r5, [r2, #-8]
   80f78:	f842 5c04 	str.w	r5, [r2, #-4]
   80f7c:	f102 0210 	add.w	r2, r2, #16
   80f80:	d8f2      	bhi.n	80f68 <memset+0x38>
   80f82:	f1a4 0210 	sub.w	r2, r4, #16
   80f86:	f022 020f 	bic.w	r2, r2, #15
   80f8a:	f004 040f 	and.w	r4, r4, #15
   80f8e:	3210      	adds	r2, #16
   80f90:	2c03      	cmp	r4, #3
   80f92:	4413      	add	r3, r2
   80f94:	d90d      	bls.n	80fb2 <memset+0x82>
   80f96:	461e      	mov	r6, r3
   80f98:	4622      	mov	r2, r4
   80f9a:	3a04      	subs	r2, #4
   80f9c:	2a03      	cmp	r2, #3
   80f9e:	f846 5b04 	str.w	r5, [r6], #4
   80fa2:	d8fa      	bhi.n	80f9a <memset+0x6a>
   80fa4:	1f22      	subs	r2, r4, #4
   80fa6:	f022 0203 	bic.w	r2, r2, #3
   80faa:	3204      	adds	r2, #4
   80fac:	4413      	add	r3, r2
   80fae:	f004 0403 	and.w	r4, r4, #3
   80fb2:	b12c      	cbz	r4, 80fc0 <memset+0x90>
   80fb4:	b2c9      	uxtb	r1, r1
   80fb6:	441c      	add	r4, r3
   80fb8:	f803 1b01 	strb.w	r1, [r3], #1
   80fbc:	42a3      	cmp	r3, r4
   80fbe:	d1fb      	bne.n	80fb8 <memset+0x88>
   80fc0:	bc70      	pop	{r4, r5, r6}
   80fc2:	4770      	bx	lr
   80fc4:	4614      	mov	r4, r2
   80fc6:	4603      	mov	r3, r0
   80fc8:	e7c2      	b.n	80f50 <memset+0x20>
   80fca:	bf00      	nop

00080fcc <sprintf>:
   80fcc:	b40e      	push	{r1, r2, r3}
   80fce:	b5f0      	push	{r4, r5, r6, r7, lr}
   80fd0:	4606      	mov	r6, r0
   80fd2:	f64f 7eff 	movw	lr, #65535	; 0xffff
   80fd6:	b09c      	sub	sp, #112	; 0x70
   80fd8:	ac21      	add	r4, sp, #132	; 0x84
   80fda:	f854 2b04 	ldr.w	r2, [r4], #4
   80fde:	490d      	ldr	r1, [pc, #52]	; (81014 <sprintf+0x48>)
   80fe0:	4623      	mov	r3, r4
   80fe2:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   80fe6:	6808      	ldr	r0, [r1, #0]
   80fe8:	f44f 7702 	mov.w	r7, #520	; 0x208
   80fec:	a902      	add	r1, sp, #8
   80fee:	9602      	str	r6, [sp, #8]
   80ff0:	9606      	str	r6, [sp, #24]
   80ff2:	9401      	str	r4, [sp, #4]
   80ff4:	f8ad e016 	strh.w	lr, [sp, #22]
   80ff8:	f8ad 7014 	strh.w	r7, [sp, #20]
   80ffc:	9504      	str	r5, [sp, #16]
   80ffe:	9507      	str	r5, [sp, #28]
   81000:	f000 f838 	bl	81074 <_svfprintf_r>
   81004:	9b02      	ldr	r3, [sp, #8]
   81006:	2200      	movs	r2, #0
   81008:	701a      	strb	r2, [r3, #0]
   8100a:	b01c      	add	sp, #112	; 0x70
   8100c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81010:	b003      	add	sp, #12
   81012:	4770      	bx	lr
   81014:	200705a0 	.word	0x200705a0

00081018 <strlen>:
   81018:	f020 0103 	bic.w	r1, r0, #3
   8101c:	f010 0003 	ands.w	r0, r0, #3
   81020:	f1c0 0000 	rsb	r0, r0, #0
   81024:	f851 3b04 	ldr.w	r3, [r1], #4
   81028:	f100 0c04 	add.w	ip, r0, #4
   8102c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81030:	f06f 0200 	mvn.w	r2, #0
   81034:	bf1c      	itt	ne
   81036:	fa22 f20c 	lsrne.w	r2, r2, ip
   8103a:	4313      	orrne	r3, r2
   8103c:	f04f 0c01 	mov.w	ip, #1
   81040:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81044:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81048:	eba3 020c 	sub.w	r2, r3, ip
   8104c:	ea22 0203 	bic.w	r2, r2, r3
   81050:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81054:	bf04      	itt	eq
   81056:	f851 3b04 	ldreq.w	r3, [r1], #4
   8105a:	3004      	addeq	r0, #4
   8105c:	d0f4      	beq.n	81048 <strlen+0x30>
   8105e:	f1c2 0100 	rsb	r1, r2, #0
   81062:	ea02 0201 	and.w	r2, r2, r1
   81066:	fab2 f282 	clz	r2, r2
   8106a:	f1c2 021f 	rsb	r2, r2, #31
   8106e:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   81072:	4770      	bx	lr

00081074 <_svfprintf_r>:
   81074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81078:	b0c1      	sub	sp, #260	; 0x104
   8107a:	4689      	mov	r9, r1
   8107c:	920a      	str	r2, [sp, #40]	; 0x28
   8107e:	930e      	str	r3, [sp, #56]	; 0x38
   81080:	9008      	str	r0, [sp, #32]
   81082:	f002 fba7 	bl	837d4 <_localeconv_r>
   81086:	6803      	ldr	r3, [r0, #0]
   81088:	4618      	mov	r0, r3
   8108a:	9317      	str	r3, [sp, #92]	; 0x5c
   8108c:	f7ff ffc4 	bl	81018 <strlen>
   81090:	f8b9 300c 	ldrh.w	r3, [r9, #12]
   81094:	9018      	str	r0, [sp, #96]	; 0x60
   81096:	061c      	lsls	r4, r3, #24
   81098:	d504      	bpl.n	810a4 <_svfprintf_r+0x30>
   8109a:	f8d9 3010 	ldr.w	r3, [r9, #16]
   8109e:	2b00      	cmp	r3, #0
   810a0:	f001 80c2 	beq.w	82228 <_svfprintf_r+0x11b4>
   810a4:	af30      	add	r7, sp, #192	; 0xc0
   810a6:	463c      	mov	r4, r7
   810a8:	464e      	mov	r6, r9
   810aa:	2300      	movs	r3, #0
   810ac:	9313      	str	r3, [sp, #76]	; 0x4c
   810ae:	9316      	str	r3, [sp, #88]	; 0x58
   810b0:	9319      	str	r3, [sp, #100]	; 0x64
   810b2:	930b      	str	r3, [sp, #44]	; 0x2c
   810b4:	9325      	str	r3, [sp, #148]	; 0x94
   810b6:	9324      	str	r3, [sp, #144]	; 0x90
   810b8:	9723      	str	r7, [sp, #140]	; 0x8c
   810ba:	9314      	str	r3, [sp, #80]	; 0x50
   810bc:	9315      	str	r3, [sp, #84]	; 0x54
   810be:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   810c0:	782b      	ldrb	r3, [r5, #0]
   810c2:	2b00      	cmp	r3, #0
   810c4:	f000 80a9 	beq.w	8121a <_svfprintf_r+0x1a6>
   810c8:	2b25      	cmp	r3, #37	; 0x25
   810ca:	d102      	bne.n	810d2 <_svfprintf_r+0x5e>
   810cc:	e0a5      	b.n	8121a <_svfprintf_r+0x1a6>
   810ce:	2b25      	cmp	r3, #37	; 0x25
   810d0:	d003      	beq.n	810da <_svfprintf_r+0x66>
   810d2:	f815 3f01 	ldrb.w	r3, [r5, #1]!
   810d6:	2b00      	cmp	r3, #0
   810d8:	d1f9      	bne.n	810ce <_svfprintf_r+0x5a>
   810da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   810dc:	1aeb      	subs	r3, r5, r3
   810de:	b173      	cbz	r3, 810fe <_svfprintf_r+0x8a>
   810e0:	9a24      	ldr	r2, [sp, #144]	; 0x90
   810e2:	9925      	ldr	r1, [sp, #148]	; 0x94
   810e4:	3201      	adds	r2, #1
   810e6:	980a      	ldr	r0, [sp, #40]	; 0x28
   810e8:	4419      	add	r1, r3
   810ea:	2a07      	cmp	r2, #7
   810ec:	e884 0009 	stmia.w	r4, {r0, r3}
   810f0:	9125      	str	r1, [sp, #148]	; 0x94
   810f2:	9224      	str	r2, [sp, #144]	; 0x90
   810f4:	dc72      	bgt.n	811dc <_svfprintf_r+0x168>
   810f6:	3408      	adds	r4, #8
   810f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   810fa:	441a      	add	r2, r3
   810fc:	920b      	str	r2, [sp, #44]	; 0x2c
   810fe:	782b      	ldrb	r3, [r5, #0]
   81100:	2b00      	cmp	r3, #0
   81102:	f000 87e2 	beq.w	820ca <_svfprintf_r+0x1056>
   81106:	2300      	movs	r3, #0
   81108:	461a      	mov	r2, r3
   8110a:	1c69      	adds	r1, r5, #1
   8110c:	786d      	ldrb	r5, [r5, #1]
   8110e:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   81112:	930c      	str	r3, [sp, #48]	; 0x30
   81114:	9307      	str	r3, [sp, #28]
   81116:	f04f 3aff 	mov.w	sl, #4294967295
   8111a:	1c4b      	adds	r3, r1, #1
   8111c:	f1a5 0120 	sub.w	r1, r5, #32
   81120:	2958      	cmp	r1, #88	; 0x58
   81122:	f200 83ea 	bhi.w	818fa <_svfprintf_r+0x886>
   81126:	e8df f011 	tbh	[pc, r1, lsl #1]
   8112a:	026d      	.short	0x026d
   8112c:	03e803e8 	.word	0x03e803e8
   81130:	03e802d1 	.word	0x03e802d1
   81134:	03e803e8 	.word	0x03e803e8
   81138:	03e803e8 	.word	0x03e803e8
   8113c:	02bc03e8 	.word	0x02bc03e8
   81140:	03e8020d 	.word	0x03e8020d
   81144:	021101f4 	.word	0x021101f4
   81148:	02d803e8 	.word	0x02d803e8
   8114c:	027b027b 	.word	0x027b027b
   81150:	027b027b 	.word	0x027b027b
   81154:	027b027b 	.word	0x027b027b
   81158:	027b027b 	.word	0x027b027b
   8115c:	03e8027b 	.word	0x03e8027b
   81160:	03e803e8 	.word	0x03e803e8
   81164:	03e803e8 	.word	0x03e803e8
   81168:	03e803e8 	.word	0x03e803e8
   8116c:	03e803e8 	.word	0x03e803e8
   81170:	028a03e8 	.word	0x028a03e8
   81174:	03e802df 	.word	0x03e802df
   81178:	03e802df 	.word	0x03e802df
   8117c:	03e803e8 	.word	0x03e803e8
   81180:	03cb03e8 	.word	0x03cb03e8
   81184:	03e803e8 	.word	0x03e803e8
   81188:	03e8032f 	.word	0x03e8032f
   8118c:	03e803e8 	.word	0x03e803e8
   81190:	03e803e8 	.word	0x03e803e8
   81194:	03e8034d 	.word	0x03e8034d
   81198:	036703e8 	.word	0x036703e8
   8119c:	03e803e8 	.word	0x03e803e8
   811a0:	03e803e8 	.word	0x03e803e8
   811a4:	03e803e8 	.word	0x03e803e8
   811a8:	03e803e8 	.word	0x03e803e8
   811ac:	03e803e8 	.word	0x03e803e8
   811b0:	022b0382 	.word	0x022b0382
   811b4:	02df02df 	.word	0x02df02df
   811b8:	02ca02df 	.word	0x02ca02df
   811bc:	03e8022b 	.word	0x03e8022b
   811c0:	02b203e8 	.word	0x02b203e8
   811c4:	03d203e8 	.word	0x03d203e8
   811c8:	031901fb 	.word	0x031901fb
   811cc:	03e80274 	.word	0x03e80274
   811d0:	03e803a3 	.word	0x03e803a3
   811d4:	03e8007a 	.word	0x03e8007a
   811d8:	024703e8 	.word	0x024703e8
   811dc:	9808      	ldr	r0, [sp, #32]
   811de:	4631      	mov	r1, r6
   811e0:	aa23      	add	r2, sp, #140	; 0x8c
   811e2:	9307      	str	r3, [sp, #28]
   811e4:	f003 fbd4 	bl	84990 <__ssprint_r>
   811e8:	b950      	cbnz	r0, 81200 <_svfprintf_r+0x18c>
   811ea:	463c      	mov	r4, r7
   811ec:	9b07      	ldr	r3, [sp, #28]
   811ee:	e783      	b.n	810f8 <_svfprintf_r+0x84>
   811f0:	9808      	ldr	r0, [sp, #32]
   811f2:	4631      	mov	r1, r6
   811f4:	aa23      	add	r2, sp, #140	; 0x8c
   811f6:	f003 fbcb 	bl	84990 <__ssprint_r>
   811fa:	2800      	cmp	r0, #0
   811fc:	f000 8185 	beq.w	8150a <_svfprintf_r+0x496>
   81200:	46b1      	mov	r9, r6
   81202:	f8b9 300c 	ldrh.w	r3, [r9, #12]
   81206:	f013 0f40 	tst.w	r3, #64	; 0x40
   8120a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8120c:	bf18      	it	ne
   8120e:	f04f 33ff 	movne.w	r3, #4294967295
   81212:	4618      	mov	r0, r3
   81214:	b041      	add	sp, #260	; 0x104
   81216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8121a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8121c:	e76f      	b.n	810fe <_svfprintf_r+0x8a>
   8121e:	930a      	str	r3, [sp, #40]	; 0x28
   81220:	9b07      	ldr	r3, [sp, #28]
   81222:	0698      	lsls	r0, r3, #26
   81224:	f140 82d7 	bpl.w	817d6 <_svfprintf_r+0x762>
   81228:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8122a:	f103 0907 	add.w	r9, r3, #7
   8122e:	f029 0307 	bic.w	r3, r9, #7
   81232:	f103 0208 	add.w	r2, r3, #8
   81236:	e9d3 8900 	ldrd	r8, r9, [r3]
   8123a:	920e      	str	r2, [sp, #56]	; 0x38
   8123c:	2301      	movs	r3, #1
   8123e:	2200      	movs	r2, #0
   81240:	4694      	mov	ip, r2
   81242:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   81246:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   8124a:	f1ba 0f00 	cmp.w	sl, #0
   8124e:	db03      	blt.n	81258 <_svfprintf_r+0x1e4>
   81250:	9a07      	ldr	r2, [sp, #28]
   81252:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   81256:	9207      	str	r2, [sp, #28]
   81258:	ea58 0209 	orrs.w	r2, r8, r9
   8125c:	f040 836f 	bne.w	8193e <_svfprintf_r+0x8ca>
   81260:	f1ba 0f00 	cmp.w	sl, #0
   81264:	f000 8474 	beq.w	81b50 <_svfprintf_r+0xadc>
   81268:	2b01      	cmp	r3, #1
   8126a:	f000 8372 	beq.w	81952 <_svfprintf_r+0x8de>
   8126e:	2b02      	cmp	r3, #2
   81270:	f000 84c2 	beq.w	81bf8 <_svfprintf_r+0xb84>
   81274:	4639      	mov	r1, r7
   81276:	ea4f 02d8 	mov.w	r2, r8, lsr #3
   8127a:	ea42 7249 	orr.w	r2, r2, r9, lsl #29
   8127e:	ea4f 00d9 	mov.w	r0, r9, lsr #3
   81282:	f008 0307 	and.w	r3, r8, #7
   81286:	4681      	mov	r9, r0
   81288:	4690      	mov	r8, r2
   8128a:	3330      	adds	r3, #48	; 0x30
   8128c:	ea58 0209 	orrs.w	r2, r8, r9
   81290:	f801 3d01 	strb.w	r3, [r1, #-1]!
   81294:	d1ef      	bne.n	81276 <_svfprintf_r+0x202>
   81296:	9a07      	ldr	r2, [sp, #28]
   81298:	9110      	str	r1, [sp, #64]	; 0x40
   8129a:	07d2      	lsls	r2, r2, #31
   8129c:	f100 857f 	bmi.w	81d9e <_svfprintf_r+0xd2a>
   812a0:	1a7b      	subs	r3, r7, r1
   812a2:	930d      	str	r3, [sp, #52]	; 0x34
   812a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   812a6:	4653      	mov	r3, sl
   812a8:	4592      	cmp	sl, r2
   812aa:	bfb8      	it	lt
   812ac:	4613      	movlt	r3, r2
   812ae:	9309      	str	r3, [sp, #36]	; 0x24
   812b0:	2300      	movs	r3, #0
   812b2:	9312      	str	r3, [sp, #72]	; 0x48
   812b4:	f1bc 0f00 	cmp.w	ip, #0
   812b8:	d002      	beq.n	812c0 <_svfprintf_r+0x24c>
   812ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
   812bc:	3301      	adds	r3, #1
   812be:	9309      	str	r3, [sp, #36]	; 0x24
   812c0:	9b07      	ldr	r3, [sp, #28]
   812c2:	f013 0302 	ands.w	r3, r3, #2
   812c6:	930f      	str	r3, [sp, #60]	; 0x3c
   812c8:	d002      	beq.n	812d0 <_svfprintf_r+0x25c>
   812ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
   812cc:	3302      	adds	r3, #2
   812ce:	9309      	str	r3, [sp, #36]	; 0x24
   812d0:	9b07      	ldr	r3, [sp, #28]
   812d2:	f013 0984 	ands.w	r9, r3, #132	; 0x84
   812d6:	f040 832f 	bne.w	81938 <_svfprintf_r+0x8c4>
   812da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   812dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
   812de:	ebc2 0803 	rsb	r8, r2, r3
   812e2:	f1b8 0f00 	cmp.w	r8, #0
   812e6:	f340 8327 	ble.w	81938 <_svfprintf_r+0x8c4>
   812ea:	f1b8 0f10 	cmp.w	r8, #16
   812ee:	9925      	ldr	r1, [sp, #148]	; 0x94
   812f0:	9a24      	ldr	r2, [sp, #144]	; 0x90
   812f2:	f8df a570 	ldr.w	sl, [pc, #1392]	; 81864 <_svfprintf_r+0x7f0>
   812f6:	dd29      	ble.n	8134c <_svfprintf_r+0x2d8>
   812f8:	4653      	mov	r3, sl
   812fa:	f04f 0b10 	mov.w	fp, #16
   812fe:	46c2      	mov	sl, r8
   81300:	46a8      	mov	r8, r5
   81302:	461d      	mov	r5, r3
   81304:	e006      	b.n	81314 <_svfprintf_r+0x2a0>
   81306:	f1aa 0a10 	sub.w	sl, sl, #16
   8130a:	f1ba 0f10 	cmp.w	sl, #16
   8130e:	f104 0408 	add.w	r4, r4, #8
   81312:	dd17      	ble.n	81344 <_svfprintf_r+0x2d0>
   81314:	3201      	adds	r2, #1
   81316:	3110      	adds	r1, #16
   81318:	2a07      	cmp	r2, #7
   8131a:	9125      	str	r1, [sp, #148]	; 0x94
   8131c:	9224      	str	r2, [sp, #144]	; 0x90
   8131e:	e884 0820 	stmia.w	r4, {r5, fp}
   81322:	ddf0      	ble.n	81306 <_svfprintf_r+0x292>
   81324:	9808      	ldr	r0, [sp, #32]
   81326:	4631      	mov	r1, r6
   81328:	aa23      	add	r2, sp, #140	; 0x8c
   8132a:	f003 fb31 	bl	84990 <__ssprint_r>
   8132e:	2800      	cmp	r0, #0
   81330:	f47f af66 	bne.w	81200 <_svfprintf_r+0x18c>
   81334:	f1aa 0a10 	sub.w	sl, sl, #16
   81338:	f1ba 0f10 	cmp.w	sl, #16
   8133c:	463c      	mov	r4, r7
   8133e:	9925      	ldr	r1, [sp, #148]	; 0x94
   81340:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81342:	dce7      	bgt.n	81314 <_svfprintf_r+0x2a0>
   81344:	462b      	mov	r3, r5
   81346:	4645      	mov	r5, r8
   81348:	46d0      	mov	r8, sl
   8134a:	469a      	mov	sl, r3
   8134c:	3201      	adds	r2, #1
   8134e:	eb08 0b01 	add.w	fp, r8, r1
   81352:	2a07      	cmp	r2, #7
   81354:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81358:	9224      	str	r2, [sp, #144]	; 0x90
   8135a:	f8c4 a000 	str.w	sl, [r4]
   8135e:	f8c4 8004 	str.w	r8, [r4, #4]
   81362:	f300 82de 	bgt.w	81922 <_svfprintf_r+0x8ae>
   81366:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   8136a:	3408      	adds	r4, #8
   8136c:	f1bc 0f00 	cmp.w	ip, #0
   81370:	d00f      	beq.n	81392 <_svfprintf_r+0x31e>
   81372:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81374:	f10b 0b01 	add.w	fp, fp, #1
   81378:	3301      	adds	r3, #1
   8137a:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
   8137e:	2201      	movs	r2, #1
   81380:	2b07      	cmp	r3, #7
   81382:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81386:	9324      	str	r3, [sp, #144]	; 0x90
   81388:	e884 0006 	stmia.w	r4, {r1, r2}
   8138c:	f300 83fd 	bgt.w	81b8a <_svfprintf_r+0xb16>
   81390:	3408      	adds	r4, #8
   81392:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   81394:	b173      	cbz	r3, 813b4 <_svfprintf_r+0x340>
   81396:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81398:	f10b 0b02 	add.w	fp, fp, #2
   8139c:	3301      	adds	r3, #1
   8139e:	a91c      	add	r1, sp, #112	; 0x70
   813a0:	2202      	movs	r2, #2
   813a2:	2b07      	cmp	r3, #7
   813a4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   813a8:	9324      	str	r3, [sp, #144]	; 0x90
   813aa:	e884 0006 	stmia.w	r4, {r1, r2}
   813ae:	f300 83f9 	bgt.w	81ba4 <_svfprintf_r+0xb30>
   813b2:	3408      	adds	r4, #8
   813b4:	f1b9 0f80 	cmp.w	r9, #128	; 0x80
   813b8:	f000 8334 	beq.w	81a24 <_svfprintf_r+0x9b0>
   813bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   813be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   813c0:	ebc2 0a03 	rsb	sl, r2, r3
   813c4:	f1ba 0f00 	cmp.w	sl, #0
   813c8:	dd3c      	ble.n	81444 <_svfprintf_r+0x3d0>
   813ca:	f1ba 0f10 	cmp.w	sl, #16
   813ce:	9a24      	ldr	r2, [sp, #144]	; 0x90
   813d0:	f8df 9494 	ldr.w	r9, [pc, #1172]	; 81868 <_svfprintf_r+0x7f4>
   813d4:	dd2b      	ble.n	8142e <_svfprintf_r+0x3ba>
   813d6:	4649      	mov	r1, r9
   813d8:	465b      	mov	r3, fp
   813da:	46a9      	mov	r9, r5
   813dc:	f04f 0810 	mov.w	r8, #16
   813e0:	f8dd b020 	ldr.w	fp, [sp, #32]
   813e4:	460d      	mov	r5, r1
   813e6:	e006      	b.n	813f6 <_svfprintf_r+0x382>
   813e8:	f1aa 0a10 	sub.w	sl, sl, #16
   813ec:	f1ba 0f10 	cmp.w	sl, #16
   813f0:	f104 0408 	add.w	r4, r4, #8
   813f4:	dd17      	ble.n	81426 <_svfprintf_r+0x3b2>
   813f6:	3201      	adds	r2, #1
   813f8:	3310      	adds	r3, #16
   813fa:	2a07      	cmp	r2, #7
   813fc:	9325      	str	r3, [sp, #148]	; 0x94
   813fe:	9224      	str	r2, [sp, #144]	; 0x90
   81400:	e884 0120 	stmia.w	r4, {r5, r8}
   81404:	ddf0      	ble.n	813e8 <_svfprintf_r+0x374>
   81406:	4658      	mov	r0, fp
   81408:	4631      	mov	r1, r6
   8140a:	aa23      	add	r2, sp, #140	; 0x8c
   8140c:	f003 fac0 	bl	84990 <__ssprint_r>
   81410:	2800      	cmp	r0, #0
   81412:	f47f aef5 	bne.w	81200 <_svfprintf_r+0x18c>
   81416:	f1aa 0a10 	sub.w	sl, sl, #16
   8141a:	f1ba 0f10 	cmp.w	sl, #16
   8141e:	463c      	mov	r4, r7
   81420:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81422:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81424:	dce7      	bgt.n	813f6 <_svfprintf_r+0x382>
   81426:	469b      	mov	fp, r3
   81428:	462b      	mov	r3, r5
   8142a:	464d      	mov	r5, r9
   8142c:	4699      	mov	r9, r3
   8142e:	3201      	adds	r2, #1
   81430:	44d3      	add	fp, sl
   81432:	2a07      	cmp	r2, #7
   81434:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81438:	9224      	str	r2, [sp, #144]	; 0x90
   8143a:	e884 0600 	stmia.w	r4, {r9, sl}
   8143e:	f300 8398 	bgt.w	81b72 <_svfprintf_r+0xafe>
   81442:	3408      	adds	r4, #8
   81444:	9b07      	ldr	r3, [sp, #28]
   81446:	05d9      	lsls	r1, r3, #23
   81448:	f100 828f 	bmi.w	8196a <_svfprintf_r+0x8f6>
   8144c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8144e:	990d      	ldr	r1, [sp, #52]	; 0x34
   81450:	3301      	adds	r3, #1
   81452:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81454:	448b      	add	fp, r1
   81456:	2b07      	cmp	r3, #7
   81458:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   8145c:	6022      	str	r2, [r4, #0]
   8145e:	6061      	str	r1, [r4, #4]
   81460:	9324      	str	r3, [sp, #144]	; 0x90
   81462:	f300 83b8 	bgt.w	81bd6 <_svfprintf_r+0xb62>
   81466:	3408      	adds	r4, #8
   81468:	9b07      	ldr	r3, [sp, #28]
   8146a:	075a      	lsls	r2, r3, #29
   8146c:	d541      	bpl.n	814f2 <_svfprintf_r+0x47e>
   8146e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   81470:	9a09      	ldr	r2, [sp, #36]	; 0x24
   81472:	1a9d      	subs	r5, r3, r2
   81474:	2d00      	cmp	r5, #0
   81476:	dd3c      	ble.n	814f2 <_svfprintf_r+0x47e>
   81478:	2d10      	cmp	r5, #16
   8147a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8147c:	f8df a3e4 	ldr.w	sl, [pc, #996]	; 81864 <_svfprintf_r+0x7f0>
   81480:	dd23      	ble.n	814ca <_svfprintf_r+0x456>
   81482:	f04f 0810 	mov.w	r8, #16
   81486:	465a      	mov	r2, fp
   81488:	f8dd 9020 	ldr.w	r9, [sp, #32]
   8148c:	e004      	b.n	81498 <_svfprintf_r+0x424>
   8148e:	3d10      	subs	r5, #16
   81490:	2d10      	cmp	r5, #16
   81492:	f104 0408 	add.w	r4, r4, #8
   81496:	dd17      	ble.n	814c8 <_svfprintf_r+0x454>
   81498:	3301      	adds	r3, #1
   8149a:	3210      	adds	r2, #16
   8149c:	2b07      	cmp	r3, #7
   8149e:	9225      	str	r2, [sp, #148]	; 0x94
   814a0:	9324      	str	r3, [sp, #144]	; 0x90
   814a2:	f8c4 a000 	str.w	sl, [r4]
   814a6:	f8c4 8004 	str.w	r8, [r4, #4]
   814aa:	ddf0      	ble.n	8148e <_svfprintf_r+0x41a>
   814ac:	4648      	mov	r0, r9
   814ae:	4631      	mov	r1, r6
   814b0:	aa23      	add	r2, sp, #140	; 0x8c
   814b2:	f003 fa6d 	bl	84990 <__ssprint_r>
   814b6:	2800      	cmp	r0, #0
   814b8:	f47f aea2 	bne.w	81200 <_svfprintf_r+0x18c>
   814bc:	3d10      	subs	r5, #16
   814be:	2d10      	cmp	r5, #16
   814c0:	463c      	mov	r4, r7
   814c2:	9a25      	ldr	r2, [sp, #148]	; 0x94
   814c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   814c6:	dce7      	bgt.n	81498 <_svfprintf_r+0x424>
   814c8:	4693      	mov	fp, r2
   814ca:	3301      	adds	r3, #1
   814cc:	44ab      	add	fp, r5
   814ce:	2b07      	cmp	r3, #7
   814d0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   814d4:	9324      	str	r3, [sp, #144]	; 0x90
   814d6:	f8c4 a000 	str.w	sl, [r4]
   814da:	6065      	str	r5, [r4, #4]
   814dc:	dd09      	ble.n	814f2 <_svfprintf_r+0x47e>
   814de:	9808      	ldr	r0, [sp, #32]
   814e0:	4631      	mov	r1, r6
   814e2:	aa23      	add	r2, sp, #140	; 0x8c
   814e4:	f003 fa54 	bl	84990 <__ssprint_r>
   814e8:	2800      	cmp	r0, #0
   814ea:	f47f ae89 	bne.w	81200 <_svfprintf_r+0x18c>
   814ee:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   814f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   814f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   814f6:	990c      	ldr	r1, [sp, #48]	; 0x30
   814f8:	428a      	cmp	r2, r1
   814fa:	bfac      	ite	ge
   814fc:	189b      	addge	r3, r3, r2
   814fe:	185b      	addlt	r3, r3, r1
   81500:	930b      	str	r3, [sp, #44]	; 0x2c
   81502:	f1bb 0f00 	cmp.w	fp, #0
   81506:	f47f ae73 	bne.w	811f0 <_svfprintf_r+0x17c>
   8150a:	2300      	movs	r3, #0
   8150c:	9324      	str	r3, [sp, #144]	; 0x90
   8150e:	463c      	mov	r4, r7
   81510:	e5d5      	b.n	810be <_svfprintf_r+0x4a>
   81512:	4619      	mov	r1, r3
   81514:	9807      	ldr	r0, [sp, #28]
   81516:	f040 0004 	orr.w	r0, r0, #4
   8151a:	9007      	str	r0, [sp, #28]
   8151c:	781d      	ldrb	r5, [r3, #0]
   8151e:	e5fc      	b.n	8111a <_svfprintf_r+0xa6>
   81520:	930a      	str	r3, [sp, #40]	; 0x28
   81522:	9b07      	ldr	r3, [sp, #28]
   81524:	f013 0320 	ands.w	r3, r3, #32
   81528:	f000 8138 	beq.w	8179c <_svfprintf_r+0x728>
   8152c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8152e:	f103 0907 	add.w	r9, r3, #7
   81532:	f029 0307 	bic.w	r3, r9, #7
   81536:	f103 0208 	add.w	r2, r3, #8
   8153a:	e9d3 8900 	ldrd	r8, r9, [r3]
   8153e:	920e      	str	r2, [sp, #56]	; 0x38
   81540:	2300      	movs	r3, #0
   81542:	e67c      	b.n	8123e <_svfprintf_r+0x1ca>
   81544:	781d      	ldrb	r5, [r3, #0]
   81546:	4619      	mov	r1, r3
   81548:	222b      	movs	r2, #43	; 0x2b
   8154a:	e5e6      	b.n	8111a <_svfprintf_r+0xa6>
   8154c:	781d      	ldrb	r5, [r3, #0]
   8154e:	1c59      	adds	r1, r3, #1
   81550:	2d2a      	cmp	r5, #42	; 0x2a
   81552:	f000 87e5 	beq.w	82520 <_svfprintf_r+0x14ac>
   81556:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   8155a:	2809      	cmp	r0, #9
   8155c:	460b      	mov	r3, r1
   8155e:	f04f 0a00 	mov.w	sl, #0
   81562:	f63f addb 	bhi.w	8111c <_svfprintf_r+0xa8>
   81566:	f813 5b01 	ldrb.w	r5, [r3], #1
   8156a:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
   8156e:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
   81572:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   81576:	2809      	cmp	r0, #9
   81578:	d9f5      	bls.n	81566 <_svfprintf_r+0x4f2>
   8157a:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
   8157e:	e5cd      	b.n	8111c <_svfprintf_r+0xa8>
   81580:	930a      	str	r3, [sp, #40]	; 0x28
   81582:	9b07      	ldr	r3, [sp, #28]
   81584:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81588:	0698      	lsls	r0, r3, #26
   8158a:	d562      	bpl.n	81652 <_svfprintf_r+0x5de>
   8158c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8158e:	f103 0907 	add.w	r9, r3, #7
   81592:	f029 0907 	bic.w	r9, r9, #7
   81596:	e9d9 2300 	ldrd	r2, r3, [r9]
   8159a:	f109 0108 	add.w	r1, r9, #8
   8159e:	4690      	mov	r8, r2
   815a0:	4699      	mov	r9, r3
   815a2:	910e      	str	r1, [sp, #56]	; 0x38
   815a4:	2a00      	cmp	r2, #0
   815a6:	f173 0300 	sbcs.w	r3, r3, #0
   815aa:	db64      	blt.n	81676 <_svfprintf_r+0x602>
   815ac:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   815b0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   815b4:	2301      	movs	r3, #1
   815b6:	e648      	b.n	8124a <_svfprintf_r+0x1d6>
   815b8:	930a      	str	r3, [sp, #40]	; 0x28
   815ba:	4ba7      	ldr	r3, [pc, #668]	; (81858 <_svfprintf_r+0x7e4>)
   815bc:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   815c0:	9316      	str	r3, [sp, #88]	; 0x58
   815c2:	9b07      	ldr	r3, [sp, #28]
   815c4:	069b      	lsls	r3, r3, #26
   815c6:	f140 8120 	bpl.w	8180a <_svfprintf_r+0x796>
   815ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   815cc:	f103 0907 	add.w	r9, r3, #7
   815d0:	f029 0307 	bic.w	r3, r9, #7
   815d4:	f103 0208 	add.w	r2, r3, #8
   815d8:	920e      	str	r2, [sp, #56]	; 0x38
   815da:	e9d3 8900 	ldrd	r8, r9, [r3]
   815de:	9b07      	ldr	r3, [sp, #28]
   815e0:	07d9      	lsls	r1, r3, #31
   815e2:	f140 8122 	bpl.w	8182a <_svfprintf_r+0x7b6>
   815e6:	ea58 0309 	orrs.w	r3, r8, r9
   815ea:	f000 811e 	beq.w	8182a <_svfprintf_r+0x7b6>
   815ee:	9a07      	ldr	r2, [sp, #28]
   815f0:	2330      	movs	r3, #48	; 0x30
   815f2:	f042 0202 	orr.w	r2, r2, #2
   815f6:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
   815fa:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
   815fe:	9207      	str	r2, [sp, #28]
   81600:	2302      	movs	r3, #2
   81602:	e61c      	b.n	8123e <_svfprintf_r+0x1ca>
   81604:	2a00      	cmp	r2, #0
   81606:	f040 84e5 	bne.w	81fd4 <_svfprintf_r+0xf60>
   8160a:	781d      	ldrb	r5, [r3, #0]
   8160c:	4619      	mov	r1, r3
   8160e:	2220      	movs	r2, #32
   81610:	e583      	b.n	8111a <_svfprintf_r+0xa6>
   81612:	9907      	ldr	r1, [sp, #28]
   81614:	f041 0120 	orr.w	r1, r1, #32
   81618:	9107      	str	r1, [sp, #28]
   8161a:	781d      	ldrb	r5, [r3, #0]
   8161c:	4619      	mov	r1, r3
   8161e:	e57c      	b.n	8111a <_svfprintf_r+0xa6>
   81620:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   81624:	2100      	movs	r1, #0
   81626:	f813 5b01 	ldrb.w	r5, [r3], #1
   8162a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   8162e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
   81632:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
   81636:	2809      	cmp	r0, #9
   81638:	d9f5      	bls.n	81626 <_svfprintf_r+0x5b2>
   8163a:	910c      	str	r1, [sp, #48]	; 0x30
   8163c:	e56e      	b.n	8111c <_svfprintf_r+0xa8>
   8163e:	930a      	str	r3, [sp, #40]	; 0x28
   81640:	9b07      	ldr	r3, [sp, #28]
   81642:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81646:	f043 0310 	orr.w	r3, r3, #16
   8164a:	9307      	str	r3, [sp, #28]
   8164c:	9b07      	ldr	r3, [sp, #28]
   8164e:	0698      	lsls	r0, r3, #26
   81650:	d49c      	bmi.n	8158c <_svfprintf_r+0x518>
   81652:	9b07      	ldr	r3, [sp, #28]
   81654:	06d9      	lsls	r1, r3, #27
   81656:	f140 84c1 	bpl.w	81fdc <_svfprintf_r+0xf68>
   8165a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   8165c:	4613      	mov	r3, r2
   8165e:	681b      	ldr	r3, [r3, #0]
   81660:	3204      	adds	r2, #4
   81662:	920e      	str	r2, [sp, #56]	; 0x38
   81664:	ea4f 79e3 	mov.w	r9, r3, asr #31
   81668:	461a      	mov	r2, r3
   8166a:	4698      	mov	r8, r3
   8166c:	464b      	mov	r3, r9
   8166e:	2a00      	cmp	r2, #0
   81670:	f173 0300 	sbcs.w	r3, r3, #0
   81674:	da9a      	bge.n	815ac <_svfprintf_r+0x538>
   81676:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
   8167a:	f1d8 0800 	rsbs	r8, r8, #0
   8167e:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
   81682:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
   81686:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   8168a:	2301      	movs	r3, #1
   8168c:	e5dd      	b.n	8124a <_svfprintf_r+0x1d6>
   8168e:	781d      	ldrb	r5, [r3, #0]
   81690:	9907      	ldr	r1, [sp, #28]
   81692:	2d6c      	cmp	r5, #108	; 0x6c
   81694:	f000 8525 	beq.w	820e2 <_svfprintf_r+0x106e>
   81698:	f041 0110 	orr.w	r1, r1, #16
   8169c:	9107      	str	r1, [sp, #28]
   8169e:	4619      	mov	r1, r3
   816a0:	e53b      	b.n	8111a <_svfprintf_r+0xa6>
   816a2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   816a4:	6829      	ldr	r1, [r5, #0]
   816a6:	4608      	mov	r0, r1
   816a8:	910c      	str	r1, [sp, #48]	; 0x30
   816aa:	4629      	mov	r1, r5
   816ac:	2800      	cmp	r0, #0
   816ae:	f101 0104 	add.w	r1, r1, #4
   816b2:	f2c0 851d 	blt.w	820f0 <_svfprintf_r+0x107c>
   816b6:	910e      	str	r1, [sp, #56]	; 0x38
   816b8:	781d      	ldrb	r5, [r3, #0]
   816ba:	4619      	mov	r1, r3
   816bc:	e52d      	b.n	8111a <_svfprintf_r+0xa6>
   816be:	9907      	ldr	r1, [sp, #28]
   816c0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   816c4:	9107      	str	r1, [sp, #28]
   816c6:	781d      	ldrb	r5, [r3, #0]
   816c8:	4619      	mov	r1, r3
   816ca:	e526      	b.n	8111a <_svfprintf_r+0xa6>
   816cc:	9907      	ldr	r1, [sp, #28]
   816ce:	f041 0101 	orr.w	r1, r1, #1
   816d2:	9107      	str	r1, [sp, #28]
   816d4:	781d      	ldrb	r5, [r3, #0]
   816d6:	4619      	mov	r1, r3
   816d8:	e51f      	b.n	8111a <_svfprintf_r+0xa6>
   816da:	9907      	ldr	r1, [sp, #28]
   816dc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
   816e0:	9107      	str	r1, [sp, #28]
   816e2:	781d      	ldrb	r5, [r3, #0]
   816e4:	4619      	mov	r1, r3
   816e6:	e518      	b.n	8111a <_svfprintf_r+0xa6>
   816e8:	930a      	str	r3, [sp, #40]	; 0x28
   816ea:	9b07      	ldr	r3, [sp, #28]
   816ec:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   816f0:	f013 0f08 	tst.w	r3, #8
   816f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   816f6:	46d3      	mov	fp, sl
   816f8:	f103 0907 	add.w	r9, r3, #7
   816fc:	f000 8437 	beq.w	81f6e <_svfprintf_r+0xefa>
   81700:	f029 0307 	bic.w	r3, r9, #7
   81704:	f103 0208 	add.w	r2, r3, #8
   81708:	920e      	str	r2, [sp, #56]	; 0x38
   8170a:	681a      	ldr	r2, [r3, #0]
   8170c:	685b      	ldr	r3, [r3, #4]
   8170e:	9214      	str	r2, [sp, #80]	; 0x50
   81710:	9315      	str	r3, [sp, #84]	; 0x54
   81712:	9915      	ldr	r1, [sp, #84]	; 0x54
   81714:	9814      	ldr	r0, [sp, #80]	; 0x50
   81716:	f003 f8fd 	bl	84914 <__fpclassifyd>
   8171a:	2801      	cmp	r0, #1
   8171c:	9915      	ldr	r1, [sp, #84]	; 0x54
   8171e:	9814      	ldr	r0, [sp, #80]	; 0x50
   81720:	f040 840b 	bne.w	81f3a <_svfprintf_r+0xec6>
   81724:	2200      	movs	r2, #0
   81726:	2300      	movs	r3, #0
   81728:	f003 fe60 	bl	853ec <__aeabi_dcmplt>
   8172c:	2800      	cmp	r0, #0
   8172e:	f040 8639 	bne.w	823a4 <_svfprintf_r+0x1330>
   81732:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   81736:	9b07      	ldr	r3, [sp, #28]
   81738:	4a48      	ldr	r2, [pc, #288]	; (8185c <_svfprintf_r+0x7e8>)
   8173a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   8173e:	9307      	str	r3, [sp, #28]
   81740:	4613      	mov	r3, r2
   81742:	f8df e128 	ldr.w	lr, [pc, #296]	; 8186c <_svfprintf_r+0x7f8>
   81746:	2103      	movs	r1, #3
   81748:	2d47      	cmp	r5, #71	; 0x47
   8174a:	bfd8      	it	le
   8174c:	4673      	movle	r3, lr
   8174e:	2000      	movs	r0, #0
   81750:	9109      	str	r1, [sp, #36]	; 0x24
   81752:	9011      	str	r0, [sp, #68]	; 0x44
   81754:	9310      	str	r3, [sp, #64]	; 0x40
   81756:	910d      	str	r1, [sp, #52]	; 0x34
   81758:	9012      	str	r0, [sp, #72]	; 0x48
   8175a:	e5ab      	b.n	812b4 <_svfprintf_r+0x240>
   8175c:	990e      	ldr	r1, [sp, #56]	; 0x38
   8175e:	9807      	ldr	r0, [sp, #28]
   81760:	930a      	str	r3, [sp, #40]	; 0x28
   81762:	2330      	movs	r3, #48	; 0x30
   81764:	680a      	ldr	r2, [r1, #0]
   81766:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
   8176a:	4b3b      	ldr	r3, [pc, #236]	; (81858 <_svfprintf_r+0x7e4>)
   8176c:	2578      	movs	r5, #120	; 0x78
   8176e:	f040 0002 	orr.w	r0, r0, #2
   81772:	3104      	adds	r1, #4
   81774:	9316      	str	r3, [sp, #88]	; 0x58
   81776:	9007      	str	r0, [sp, #28]
   81778:	910e      	str	r1, [sp, #56]	; 0x38
   8177a:	4690      	mov	r8, r2
   8177c:	f04f 0900 	mov.w	r9, #0
   81780:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
   81784:	2302      	movs	r3, #2
   81786:	e55a      	b.n	8123e <_svfprintf_r+0x1ca>
   81788:	930a      	str	r3, [sp, #40]	; 0x28
   8178a:	9b07      	ldr	r3, [sp, #28]
   8178c:	f043 0310 	orr.w	r3, r3, #16
   81790:	9307      	str	r3, [sp, #28]
   81792:	9b07      	ldr	r3, [sp, #28]
   81794:	f013 0320 	ands.w	r3, r3, #32
   81798:	f47f aec8 	bne.w	8152c <_svfprintf_r+0x4b8>
   8179c:	9a07      	ldr	r2, [sp, #28]
   8179e:	f012 0210 	ands.w	r2, r2, #16
   817a2:	f040 830a 	bne.w	81dba <_svfprintf_r+0xd46>
   817a6:	9b07      	ldr	r3, [sp, #28]
   817a8:	f013 0340 	ands.w	r3, r3, #64	; 0x40
   817ac:	f000 8305 	beq.w	81dba <_svfprintf_r+0xd46>
   817b0:	990e      	ldr	r1, [sp, #56]	; 0x38
   817b2:	4613      	mov	r3, r2
   817b4:	460a      	mov	r2, r1
   817b6:	3204      	adds	r2, #4
   817b8:	f8b1 8000 	ldrh.w	r8, [r1]
   817bc:	f04f 0900 	mov.w	r9, #0
   817c0:	920e      	str	r2, [sp, #56]	; 0x38
   817c2:	e53c      	b.n	8123e <_svfprintf_r+0x1ca>
   817c4:	930a      	str	r3, [sp, #40]	; 0x28
   817c6:	9b07      	ldr	r3, [sp, #28]
   817c8:	f043 0310 	orr.w	r3, r3, #16
   817cc:	9307      	str	r3, [sp, #28]
   817ce:	9b07      	ldr	r3, [sp, #28]
   817d0:	0698      	lsls	r0, r3, #26
   817d2:	f53f ad29 	bmi.w	81228 <_svfprintf_r+0x1b4>
   817d6:	9b07      	ldr	r3, [sp, #28]
   817d8:	06d9      	lsls	r1, r3, #27
   817da:	f100 82f7 	bmi.w	81dcc <_svfprintf_r+0xd58>
   817de:	9b07      	ldr	r3, [sp, #28]
   817e0:	065a      	lsls	r2, r3, #25
   817e2:	f140 82f3 	bpl.w	81dcc <_svfprintf_r+0xd58>
   817e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   817e8:	f04f 0900 	mov.w	r9, #0
   817ec:	f8b2 8000 	ldrh.w	r8, [r2]
   817f0:	3204      	adds	r2, #4
   817f2:	2301      	movs	r3, #1
   817f4:	920e      	str	r2, [sp, #56]	; 0x38
   817f6:	e522      	b.n	8123e <_svfprintf_r+0x1ca>
   817f8:	930a      	str	r3, [sp, #40]	; 0x28
   817fa:	4b19      	ldr	r3, [pc, #100]	; (81860 <_svfprintf_r+0x7ec>)
   817fc:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81800:	9316      	str	r3, [sp, #88]	; 0x58
   81802:	9b07      	ldr	r3, [sp, #28]
   81804:	069b      	lsls	r3, r3, #26
   81806:	f53f aee0 	bmi.w	815ca <_svfprintf_r+0x556>
   8180a:	9b07      	ldr	r3, [sp, #28]
   8180c:	06d8      	lsls	r0, r3, #27
   8180e:	f140 83bb 	bpl.w	81f88 <_svfprintf_r+0xf14>
   81812:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81814:	4613      	mov	r3, r2
   81816:	681b      	ldr	r3, [r3, #0]
   81818:	3204      	adds	r2, #4
   8181a:	4698      	mov	r8, r3
   8181c:	9b07      	ldr	r3, [sp, #28]
   8181e:	920e      	str	r2, [sp, #56]	; 0x38
   81820:	07d9      	lsls	r1, r3, #31
   81822:	f04f 0900 	mov.w	r9, #0
   81826:	f53f aede 	bmi.w	815e6 <_svfprintf_r+0x572>
   8182a:	2302      	movs	r3, #2
   8182c:	e507      	b.n	8123e <_svfprintf_r+0x1ca>
   8182e:	980e      	ldr	r0, [sp, #56]	; 0x38
   81830:	930a      	str	r3, [sp, #40]	; 0x28
   81832:	6802      	ldr	r2, [r0, #0]
   81834:	2300      	movs	r3, #0
   81836:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
   8183a:	4602      	mov	r2, r0
   8183c:	2101      	movs	r1, #1
   8183e:	469c      	mov	ip, r3
   81840:	3204      	adds	r2, #4
   81842:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   81846:	9311      	str	r3, [sp, #68]	; 0x44
   81848:	9312      	str	r3, [sp, #72]	; 0x48
   8184a:	ab26      	add	r3, sp, #152	; 0x98
   8184c:	9109      	str	r1, [sp, #36]	; 0x24
   8184e:	920e      	str	r2, [sp, #56]	; 0x38
   81850:	910d      	str	r1, [sp, #52]	; 0x34
   81852:	9310      	str	r3, [sp, #64]	; 0x40
   81854:	e534      	b.n	812c0 <_svfprintf_r+0x24c>
   81856:	bf00      	nop
   81858:	00085ab8 	.word	0x00085ab8
   8185c:	00085a98 	.word	0x00085a98
   81860:	00085aa4 	.word	0x00085aa4
   81864:	00085a84 	.word	0x00085a84
   81868:	00085a74 	.word	0x00085a74
   8186c:	00085a94 	.word	0x00085a94
   81870:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81872:	930a      	str	r3, [sp, #40]	; 0x28
   81874:	6813      	ldr	r3, [r2, #0]
   81876:	f04f 0b00 	mov.w	fp, #0
   8187a:	9310      	str	r3, [sp, #64]	; 0x40
   8187c:	f88d b06f 	strb.w	fp, [sp, #111]	; 0x6f
   81880:	f102 0904 	add.w	r9, r2, #4
   81884:	2b00      	cmp	r3, #0
   81886:	f000 8558 	beq.w	8233a <_svfprintf_r+0x12c6>
   8188a:	f1ba 0f00 	cmp.w	sl, #0
   8188e:	9810      	ldr	r0, [sp, #64]	; 0x40
   81890:	f2c0 84ea 	blt.w	82268 <_svfprintf_r+0x11f4>
   81894:	4659      	mov	r1, fp
   81896:	4652      	mov	r2, sl
   81898:	f002 fa26 	bl	83ce8 <memchr>
   8189c:	2800      	cmp	r0, #0
   8189e:	f000 8589 	beq.w	823b4 <_svfprintf_r+0x1340>
   818a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   818a4:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
   818a8:	1ac3      	subs	r3, r0, r3
   818aa:	930d      	str	r3, [sp, #52]	; 0x34
   818ac:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   818b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   818b4:	9309      	str	r3, [sp, #36]	; 0x24
   818b6:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
   818ba:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   818be:	e4f9      	b.n	812b4 <_svfprintf_r+0x240>
   818c0:	9907      	ldr	r1, [sp, #28]
   818c2:	f041 0108 	orr.w	r1, r1, #8
   818c6:	9107      	str	r1, [sp, #28]
   818c8:	781d      	ldrb	r5, [r3, #0]
   818ca:	4619      	mov	r1, r3
   818cc:	e425      	b.n	8111a <_svfprintf_r+0xa6>
   818ce:	930a      	str	r3, [sp, #40]	; 0x28
   818d0:	9b07      	ldr	r3, [sp, #28]
   818d2:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   818d6:	069a      	lsls	r2, r3, #26
   818d8:	f140 8365 	bpl.w	81fa6 <_svfprintf_r+0xf32>
   818dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   818de:	4613      	mov	r3, r2
   818e0:	3304      	adds	r3, #4
   818e2:	930e      	str	r3, [sp, #56]	; 0x38
   818e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   818e6:	6811      	ldr	r1, [r2, #0]
   818e8:	ea4f 79e3 	mov.w	r9, r3, asr #31
   818ec:	461a      	mov	r2, r3
   818ee:	4698      	mov	r8, r3
   818f0:	464b      	mov	r3, r9
   818f2:	e9c1 2300 	strd	r2, r3, [r1]
   818f6:	f7ff bbe2 	b.w	810be <_svfprintf_r+0x4a>
   818fa:	930a      	str	r3, [sp, #40]	; 0x28
   818fc:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
   81900:	2d00      	cmp	r5, #0
   81902:	f000 83e2 	beq.w	820ca <_svfprintf_r+0x1056>
   81906:	2300      	movs	r3, #0
   81908:	2201      	movs	r2, #1
   8190a:	469c      	mov	ip, r3
   8190c:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   81910:	9311      	str	r3, [sp, #68]	; 0x44
   81912:	9312      	str	r3, [sp, #72]	; 0x48
   81914:	ab26      	add	r3, sp, #152	; 0x98
   81916:	9209      	str	r2, [sp, #36]	; 0x24
   81918:	f88d 5098 	strb.w	r5, [sp, #152]	; 0x98
   8191c:	920d      	str	r2, [sp, #52]	; 0x34
   8191e:	9310      	str	r3, [sp, #64]	; 0x40
   81920:	e4ce      	b.n	812c0 <_svfprintf_r+0x24c>
   81922:	9808      	ldr	r0, [sp, #32]
   81924:	4631      	mov	r1, r6
   81926:	aa23      	add	r2, sp, #140	; 0x8c
   81928:	f003 f832 	bl	84990 <__ssprint_r>
   8192c:	2800      	cmp	r0, #0
   8192e:	f47f ac67 	bne.w	81200 <_svfprintf_r+0x18c>
   81932:	463c      	mov	r4, r7
   81934:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   81938:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   8193c:	e516      	b.n	8136c <_svfprintf_r+0x2f8>
   8193e:	2b01      	cmp	r3, #1
   81940:	f47f ac95 	bne.w	8126e <_svfprintf_r+0x1fa>
   81944:	f1b9 0f00 	cmp.w	r9, #0
   81948:	bf08      	it	eq
   8194a:	f1b8 0f0a 	cmpeq.w	r8, #10
   8194e:	f080 8206 	bcs.w	81d5e <_svfprintf_r+0xcea>
   81952:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
   81956:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8195a:	f80b 8d41 	strb.w	r8, [fp, #-65]!
   8195e:	ebcb 0307 	rsb	r3, fp, r7
   81962:	930d      	str	r3, [sp, #52]	; 0x34
   81964:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81968:	e49c      	b.n	812a4 <_svfprintf_r+0x230>
   8196a:	2d65      	cmp	r5, #101	; 0x65
   8196c:	f340 80a0 	ble.w	81ab0 <_svfprintf_r+0xa3c>
   81970:	9814      	ldr	r0, [sp, #80]	; 0x50
   81972:	9915      	ldr	r1, [sp, #84]	; 0x54
   81974:	2200      	movs	r2, #0
   81976:	2300      	movs	r3, #0
   81978:	f003 fd2e 	bl	853d8 <__aeabi_dcmpeq>
   8197c:	2800      	cmp	r0, #0
   8197e:	f000 8154 	beq.w	81c2a <_svfprintf_r+0xbb6>
   81982:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81984:	49c1      	ldr	r1, [pc, #772]	; (81c8c <_svfprintf_r+0xc18>)
   81986:	3301      	adds	r3, #1
   81988:	f10b 0b01 	add.w	fp, fp, #1
   8198c:	2201      	movs	r2, #1
   8198e:	2b07      	cmp	r3, #7
   81990:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81994:	9324      	str	r3, [sp, #144]	; 0x90
   81996:	e884 0006 	stmia.w	r4, {r1, r2}
   8199a:	f300 833e 	bgt.w	8201a <_svfprintf_r+0xfa6>
   8199e:	3408      	adds	r4, #8
   819a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   819a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   819a4:	4293      	cmp	r3, r2
   819a6:	db03      	blt.n	819b0 <_svfprintf_r+0x93c>
   819a8:	9b07      	ldr	r3, [sp, #28]
   819aa:	07da      	lsls	r2, r3, #31
   819ac:	f57f ad5c 	bpl.w	81468 <_svfprintf_r+0x3f4>
   819b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
   819b2:	9918      	ldr	r1, [sp, #96]	; 0x60
   819b4:	3301      	adds	r3, #1
   819b6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   819b8:	448b      	add	fp, r1
   819ba:	2b07      	cmp	r3, #7
   819bc:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   819c0:	6022      	str	r2, [r4, #0]
   819c2:	6061      	str	r1, [r4, #4]
   819c4:	9324      	str	r3, [sp, #144]	; 0x90
   819c6:	f300 841a 	bgt.w	821fe <_svfprintf_r+0x118a>
   819ca:	3408      	adds	r4, #8
   819cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   819ce:	1e5d      	subs	r5, r3, #1
   819d0:	2d00      	cmp	r5, #0
   819d2:	f77f ad49 	ble.w	81468 <_svfprintf_r+0x3f4>
   819d6:	2d10      	cmp	r5, #16
   819d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
   819da:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 81c90 <_svfprintf_r+0xc1c>
   819de:	f340 80ef 	ble.w	81bc0 <_svfprintf_r+0xb4c>
   819e2:	f04f 0810 	mov.w	r8, #16
   819e6:	465a      	mov	r2, fp
   819e8:	f8dd a020 	ldr.w	sl, [sp, #32]
   819ec:	e004      	b.n	819f8 <_svfprintf_r+0x984>
   819ee:	3408      	adds	r4, #8
   819f0:	3d10      	subs	r5, #16
   819f2:	2d10      	cmp	r5, #16
   819f4:	f340 80e3 	ble.w	81bbe <_svfprintf_r+0xb4a>
   819f8:	3301      	adds	r3, #1
   819fa:	3210      	adds	r2, #16
   819fc:	2b07      	cmp	r3, #7
   819fe:	9225      	str	r2, [sp, #148]	; 0x94
   81a00:	9324      	str	r3, [sp, #144]	; 0x90
   81a02:	f8c4 9000 	str.w	r9, [r4]
   81a06:	f8c4 8004 	str.w	r8, [r4, #4]
   81a0a:	ddf0      	ble.n	819ee <_svfprintf_r+0x97a>
   81a0c:	4650      	mov	r0, sl
   81a0e:	4631      	mov	r1, r6
   81a10:	aa23      	add	r2, sp, #140	; 0x8c
   81a12:	f002 ffbd 	bl	84990 <__ssprint_r>
   81a16:	2800      	cmp	r0, #0
   81a18:	f47f abf2 	bne.w	81200 <_svfprintf_r+0x18c>
   81a1c:	463c      	mov	r4, r7
   81a1e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   81a20:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81a22:	e7e5      	b.n	819f0 <_svfprintf_r+0x97c>
   81a24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   81a26:	9a09      	ldr	r2, [sp, #36]	; 0x24
   81a28:	ebc2 0a03 	rsb	sl, r2, r3
   81a2c:	f1ba 0f00 	cmp.w	sl, #0
   81a30:	f77f acc4 	ble.w	813bc <_svfprintf_r+0x348>
   81a34:	f1ba 0f10 	cmp.w	sl, #16
   81a38:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81a3a:	f8df 9254 	ldr.w	r9, [pc, #596]	; 81c90 <_svfprintf_r+0xc1c>
   81a3e:	dd2b      	ble.n	81a98 <_svfprintf_r+0xa24>
   81a40:	4649      	mov	r1, r9
   81a42:	465b      	mov	r3, fp
   81a44:	46a9      	mov	r9, r5
   81a46:	f04f 0810 	mov.w	r8, #16
   81a4a:	f8dd b020 	ldr.w	fp, [sp, #32]
   81a4e:	460d      	mov	r5, r1
   81a50:	e006      	b.n	81a60 <_svfprintf_r+0x9ec>
   81a52:	f1aa 0a10 	sub.w	sl, sl, #16
   81a56:	f1ba 0f10 	cmp.w	sl, #16
   81a5a:	f104 0408 	add.w	r4, r4, #8
   81a5e:	dd17      	ble.n	81a90 <_svfprintf_r+0xa1c>
   81a60:	3201      	adds	r2, #1
   81a62:	3310      	adds	r3, #16
   81a64:	2a07      	cmp	r2, #7
   81a66:	9325      	str	r3, [sp, #148]	; 0x94
   81a68:	9224      	str	r2, [sp, #144]	; 0x90
   81a6a:	e884 0120 	stmia.w	r4, {r5, r8}
   81a6e:	ddf0      	ble.n	81a52 <_svfprintf_r+0x9de>
   81a70:	4658      	mov	r0, fp
   81a72:	4631      	mov	r1, r6
   81a74:	aa23      	add	r2, sp, #140	; 0x8c
   81a76:	f002 ff8b 	bl	84990 <__ssprint_r>
   81a7a:	2800      	cmp	r0, #0
   81a7c:	f47f abc0 	bne.w	81200 <_svfprintf_r+0x18c>
   81a80:	f1aa 0a10 	sub.w	sl, sl, #16
   81a84:	f1ba 0f10 	cmp.w	sl, #16
   81a88:	463c      	mov	r4, r7
   81a8a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81a8c:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81a8e:	dce7      	bgt.n	81a60 <_svfprintf_r+0x9ec>
   81a90:	469b      	mov	fp, r3
   81a92:	462b      	mov	r3, r5
   81a94:	464d      	mov	r5, r9
   81a96:	4699      	mov	r9, r3
   81a98:	3201      	adds	r2, #1
   81a9a:	44d3      	add	fp, sl
   81a9c:	2a07      	cmp	r2, #7
   81a9e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81aa2:	9224      	str	r2, [sp, #144]	; 0x90
   81aa4:	e884 0600 	stmia.w	r4, {r9, sl}
   81aa8:	f300 823a 	bgt.w	81f20 <_svfprintf_r+0xeac>
   81aac:	3408      	adds	r4, #8
   81aae:	e485      	b.n	813bc <_svfprintf_r+0x348>
   81ab0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81ab2:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81ab4:	2b01      	cmp	r3, #1
   81ab6:	f340 81fc 	ble.w	81eb2 <_svfprintf_r+0xe3e>
   81aba:	3501      	adds	r5, #1
   81abc:	9910      	ldr	r1, [sp, #64]	; 0x40
   81abe:	f10b 0301 	add.w	r3, fp, #1
   81ac2:	2201      	movs	r2, #1
   81ac4:	2d07      	cmp	r5, #7
   81ac6:	9325      	str	r3, [sp, #148]	; 0x94
   81ac8:	6021      	str	r1, [r4, #0]
   81aca:	9524      	str	r5, [sp, #144]	; 0x90
   81acc:	6062      	str	r2, [r4, #4]
   81ace:	f300 820e 	bgt.w	81eee <_svfprintf_r+0xe7a>
   81ad2:	3408      	adds	r4, #8
   81ad4:	9918      	ldr	r1, [sp, #96]	; 0x60
   81ad6:	3501      	adds	r5, #1
   81ad8:	eb03 0b01 	add.w	fp, r3, r1
   81adc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   81ade:	2d07      	cmp	r5, #7
   81ae0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81ae4:	9524      	str	r5, [sp, #144]	; 0x90
   81ae6:	6023      	str	r3, [r4, #0]
   81ae8:	6061      	str	r1, [r4, #4]
   81aea:	f300 820c 	bgt.w	81f06 <_svfprintf_r+0xe92>
   81aee:	3408      	adds	r4, #8
   81af0:	2300      	movs	r3, #0
   81af2:	9814      	ldr	r0, [sp, #80]	; 0x50
   81af4:	9915      	ldr	r1, [sp, #84]	; 0x54
   81af6:	2200      	movs	r2, #0
   81af8:	f003 fc6e 	bl	853d8 <__aeabi_dcmpeq>
   81afc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81afe:	2800      	cmp	r0, #0
   81b00:	f040 80e3 	bne.w	81cca <_svfprintf_r+0xc56>
   81b04:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81b06:	3b01      	subs	r3, #1
   81b08:	3501      	adds	r5, #1
   81b0a:	3201      	adds	r2, #1
   81b0c:	449b      	add	fp, r3
   81b0e:	2d07      	cmp	r5, #7
   81b10:	6022      	str	r2, [r4, #0]
   81b12:	9524      	str	r5, [sp, #144]	; 0x90
   81b14:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81b18:	6063      	str	r3, [r4, #4]
   81b1a:	f300 8113 	bgt.w	81d44 <_svfprintf_r+0xcd0>
   81b1e:	3408      	adds	r4, #8
   81b20:	9a19      	ldr	r2, [sp, #100]	; 0x64
   81b22:	3501      	adds	r5, #1
   81b24:	4493      	add	fp, r2
   81b26:	ab1f      	add	r3, sp, #124	; 0x7c
   81b28:	2d07      	cmp	r5, #7
   81b2a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81b2e:	9524      	str	r5, [sp, #144]	; 0x90
   81b30:	6062      	str	r2, [r4, #4]
   81b32:	6023      	str	r3, [r4, #0]
   81b34:	f77f ac97 	ble.w	81466 <_svfprintf_r+0x3f2>
   81b38:	9808      	ldr	r0, [sp, #32]
   81b3a:	4631      	mov	r1, r6
   81b3c:	aa23      	add	r2, sp, #140	; 0x8c
   81b3e:	f002 ff27 	bl	84990 <__ssprint_r>
   81b42:	2800      	cmp	r0, #0
   81b44:	f47f ab5c 	bne.w	81200 <_svfprintf_r+0x18c>
   81b48:	463c      	mov	r4, r7
   81b4a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81b4e:	e48b      	b.n	81468 <_svfprintf_r+0x3f4>
   81b50:	2b00      	cmp	r3, #0
   81b52:	d14c      	bne.n	81bee <_svfprintf_r+0xb7a>
   81b54:	9b07      	ldr	r3, [sp, #28]
   81b56:	07d8      	lsls	r0, r3, #31
   81b58:	d549      	bpl.n	81bee <_svfprintf_r+0xb7a>
   81b5a:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
   81b5e:	2330      	movs	r3, #48	; 0x30
   81b60:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   81b64:	ebcb 0307 	rsb	r3, fp, r7
   81b68:	930d      	str	r3, [sp, #52]	; 0x34
   81b6a:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81b6e:	f7ff bb99 	b.w	812a4 <_svfprintf_r+0x230>
   81b72:	9808      	ldr	r0, [sp, #32]
   81b74:	4631      	mov	r1, r6
   81b76:	aa23      	add	r2, sp, #140	; 0x8c
   81b78:	f002 ff0a 	bl	84990 <__ssprint_r>
   81b7c:	2800      	cmp	r0, #0
   81b7e:	f47f ab3f 	bne.w	81200 <_svfprintf_r+0x18c>
   81b82:	463c      	mov	r4, r7
   81b84:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81b88:	e45c      	b.n	81444 <_svfprintf_r+0x3d0>
   81b8a:	9808      	ldr	r0, [sp, #32]
   81b8c:	4631      	mov	r1, r6
   81b8e:	aa23      	add	r2, sp, #140	; 0x8c
   81b90:	f002 fefe 	bl	84990 <__ssprint_r>
   81b94:	2800      	cmp	r0, #0
   81b96:	f47f ab33 	bne.w	81200 <_svfprintf_r+0x18c>
   81b9a:	463c      	mov	r4, r7
   81b9c:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81ba0:	f7ff bbf7 	b.w	81392 <_svfprintf_r+0x31e>
   81ba4:	9808      	ldr	r0, [sp, #32]
   81ba6:	4631      	mov	r1, r6
   81ba8:	aa23      	add	r2, sp, #140	; 0x8c
   81baa:	f002 fef1 	bl	84990 <__ssprint_r>
   81bae:	2800      	cmp	r0, #0
   81bb0:	f47f ab26 	bne.w	81200 <_svfprintf_r+0x18c>
   81bb4:	463c      	mov	r4, r7
   81bb6:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81bba:	f7ff bbfb 	b.w	813b4 <_svfprintf_r+0x340>
   81bbe:	4693      	mov	fp, r2
   81bc0:	3301      	adds	r3, #1
   81bc2:	44ab      	add	fp, r5
   81bc4:	2b07      	cmp	r3, #7
   81bc6:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81bca:	9324      	str	r3, [sp, #144]	; 0x90
   81bcc:	f8c4 9000 	str.w	r9, [r4]
   81bd0:	6065      	str	r5, [r4, #4]
   81bd2:	f77f ac48 	ble.w	81466 <_svfprintf_r+0x3f2>
   81bd6:	9808      	ldr	r0, [sp, #32]
   81bd8:	4631      	mov	r1, r6
   81bda:	aa23      	add	r2, sp, #140	; 0x8c
   81bdc:	f002 fed8 	bl	84990 <__ssprint_r>
   81be0:	2800      	cmp	r0, #0
   81be2:	f47f ab0d 	bne.w	81200 <_svfprintf_r+0x18c>
   81be6:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81bea:	463c      	mov	r4, r7
   81bec:	e43c      	b.n	81468 <_svfprintf_r+0x3f4>
   81bee:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
   81bf2:	9710      	str	r7, [sp, #64]	; 0x40
   81bf4:	f7ff bb56 	b.w	812a4 <_svfprintf_r+0x230>
   81bf8:	46bb      	mov	fp, r7
   81bfa:	9816      	ldr	r0, [sp, #88]	; 0x58
   81bfc:	ea4f 1318 	mov.w	r3, r8, lsr #4
   81c00:	ea43 7309 	orr.w	r3, r3, r9, lsl #28
   81c04:	ea4f 1119 	mov.w	r1, r9, lsr #4
   81c08:	f008 020f 	and.w	r2, r8, #15
   81c0c:	4689      	mov	r9, r1
   81c0e:	4698      	mov	r8, r3
   81c10:	5c83      	ldrb	r3, [r0, r2]
   81c12:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   81c16:	ea58 0309 	orrs.w	r3, r8, r9
   81c1a:	d1ef      	bne.n	81bfc <_svfprintf_r+0xb88>
   81c1c:	465b      	mov	r3, fp
   81c1e:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81c22:	1afb      	subs	r3, r7, r3
   81c24:	930d      	str	r3, [sp, #52]	; 0x34
   81c26:	f7ff bb3d 	b.w	812a4 <_svfprintf_r+0x230>
   81c2a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
   81c2c:	2d00      	cmp	r5, #0
   81c2e:	f340 8200 	ble.w	82032 <_svfprintf_r+0xfbe>
   81c32:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81c34:	9912      	ldr	r1, [sp, #72]	; 0x48
   81c36:	4613      	mov	r3, r2
   81c38:	428a      	cmp	r2, r1
   81c3a:	bfa8      	it	ge
   81c3c:	460b      	movge	r3, r1
   81c3e:	461d      	mov	r5, r3
   81c40:	9910      	ldr	r1, [sp, #64]	; 0x40
   81c42:	2d00      	cmp	r5, #0
   81c44:	eb01 0a02 	add.w	sl, r1, r2
   81c48:	dd0c      	ble.n	81c64 <_svfprintf_r+0xbf0>
   81c4a:	460a      	mov	r2, r1
   81c4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81c4e:	44ab      	add	fp, r5
   81c50:	3301      	adds	r3, #1
   81c52:	2b07      	cmp	r3, #7
   81c54:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81c58:	e884 0024 	stmia.w	r4, {r2, r5}
   81c5c:	9324      	str	r3, [sp, #144]	; 0x90
   81c5e:	f300 8348 	bgt.w	822f2 <_svfprintf_r+0x127e>
   81c62:	3408      	adds	r4, #8
   81c64:	9b12      	ldr	r3, [sp, #72]	; 0x48
   81c66:	2d00      	cmp	r5, #0
   81c68:	bfa8      	it	ge
   81c6a:	1b5b      	subge	r3, r3, r5
   81c6c:	2b00      	cmp	r3, #0
   81c6e:	461d      	mov	r5, r3
   81c70:	f340 80c1 	ble.w	81df6 <_svfprintf_r+0xd82>
   81c74:	2d10      	cmp	r5, #16
   81c76:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81c78:	f8df 9014 	ldr.w	r9, [pc, #20]	; 81c90 <_svfprintf_r+0xc1c>
   81c7c:	f340 81c0 	ble.w	82000 <_svfprintf_r+0xf8c>
   81c80:	465a      	mov	r2, fp
   81c82:	f04f 0810 	mov.w	r8, #16
   81c86:	f8dd b020 	ldr.w	fp, [sp, #32]
   81c8a:	e008      	b.n	81c9e <_svfprintf_r+0xc2a>
   81c8c:	00085ad4 	.word	0x00085ad4
   81c90:	00085a74 	.word	0x00085a74
   81c94:	3408      	adds	r4, #8
   81c96:	3d10      	subs	r5, #16
   81c98:	2d10      	cmp	r5, #16
   81c9a:	f340 81b0 	ble.w	81ffe <_svfprintf_r+0xf8a>
   81c9e:	3301      	adds	r3, #1
   81ca0:	3210      	adds	r2, #16
   81ca2:	2b07      	cmp	r3, #7
   81ca4:	9225      	str	r2, [sp, #148]	; 0x94
   81ca6:	9324      	str	r3, [sp, #144]	; 0x90
   81ca8:	f8c4 9000 	str.w	r9, [r4]
   81cac:	f8c4 8004 	str.w	r8, [r4, #4]
   81cb0:	ddf0      	ble.n	81c94 <_svfprintf_r+0xc20>
   81cb2:	4658      	mov	r0, fp
   81cb4:	4631      	mov	r1, r6
   81cb6:	aa23      	add	r2, sp, #140	; 0x8c
   81cb8:	f002 fe6a 	bl	84990 <__ssprint_r>
   81cbc:	2800      	cmp	r0, #0
   81cbe:	f47f aa9f 	bne.w	81200 <_svfprintf_r+0x18c>
   81cc2:	463c      	mov	r4, r7
   81cc4:	9a25      	ldr	r2, [sp, #148]	; 0x94
   81cc6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81cc8:	e7e5      	b.n	81c96 <_svfprintf_r+0xc22>
   81cca:	f103 38ff 	add.w	r8, r3, #4294967295
   81cce:	f1b8 0f00 	cmp.w	r8, #0
   81cd2:	f77f af25 	ble.w	81b20 <_svfprintf_r+0xaac>
   81cd6:	f1b8 0f10 	cmp.w	r8, #16
   81cda:	f8df 9548 	ldr.w	r9, [pc, #1352]	; 82224 <_svfprintf_r+0x11b0>
   81cde:	dd25      	ble.n	81d2c <_svfprintf_r+0xcb8>
   81ce0:	465b      	mov	r3, fp
   81ce2:	f04f 0a10 	mov.w	sl, #16
   81ce6:	f8dd b020 	ldr.w	fp, [sp, #32]
   81cea:	e006      	b.n	81cfa <_svfprintf_r+0xc86>
   81cec:	f1a8 0810 	sub.w	r8, r8, #16
   81cf0:	f1b8 0f10 	cmp.w	r8, #16
   81cf4:	f104 0408 	add.w	r4, r4, #8
   81cf8:	dd17      	ble.n	81d2a <_svfprintf_r+0xcb6>
   81cfa:	3501      	adds	r5, #1
   81cfc:	3310      	adds	r3, #16
   81cfe:	2d07      	cmp	r5, #7
   81d00:	9325      	str	r3, [sp, #148]	; 0x94
   81d02:	9524      	str	r5, [sp, #144]	; 0x90
   81d04:	e884 0600 	stmia.w	r4, {r9, sl}
   81d08:	ddf0      	ble.n	81cec <_svfprintf_r+0xc78>
   81d0a:	4658      	mov	r0, fp
   81d0c:	4631      	mov	r1, r6
   81d0e:	aa23      	add	r2, sp, #140	; 0x8c
   81d10:	f002 fe3e 	bl	84990 <__ssprint_r>
   81d14:	2800      	cmp	r0, #0
   81d16:	f47f aa73 	bne.w	81200 <_svfprintf_r+0x18c>
   81d1a:	f1a8 0810 	sub.w	r8, r8, #16
   81d1e:	f1b8 0f10 	cmp.w	r8, #16
   81d22:	463c      	mov	r4, r7
   81d24:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81d26:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81d28:	dce7      	bgt.n	81cfa <_svfprintf_r+0xc86>
   81d2a:	469b      	mov	fp, r3
   81d2c:	3501      	adds	r5, #1
   81d2e:	44c3      	add	fp, r8
   81d30:	2d07      	cmp	r5, #7
   81d32:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81d36:	9524      	str	r5, [sp, #144]	; 0x90
   81d38:	f8c4 9000 	str.w	r9, [r4]
   81d3c:	f8c4 8004 	str.w	r8, [r4, #4]
   81d40:	f77f aeed 	ble.w	81b1e <_svfprintf_r+0xaaa>
   81d44:	9808      	ldr	r0, [sp, #32]
   81d46:	4631      	mov	r1, r6
   81d48:	aa23      	add	r2, sp, #140	; 0x8c
   81d4a:	f002 fe21 	bl	84990 <__ssprint_r>
   81d4e:	2800      	cmp	r0, #0
   81d50:	f47f aa56 	bne.w	81200 <_svfprintf_r+0x18c>
   81d54:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81d58:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81d5a:	463c      	mov	r4, r7
   81d5c:	e6e0      	b.n	81b20 <_svfprintf_r+0xaac>
   81d5e:	46bb      	mov	fp, r7
   81d60:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81d64:	4640      	mov	r0, r8
   81d66:	4649      	mov	r1, r9
   81d68:	220a      	movs	r2, #10
   81d6a:	2300      	movs	r3, #0
   81d6c:	f003 fb8e 	bl	8548c <__aeabi_uldivmod>
   81d70:	3230      	adds	r2, #48	; 0x30
   81d72:	4640      	mov	r0, r8
   81d74:	4649      	mov	r1, r9
   81d76:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   81d7a:	2300      	movs	r3, #0
   81d7c:	220a      	movs	r2, #10
   81d7e:	f003 fb85 	bl	8548c <__aeabi_uldivmod>
   81d82:	4680      	mov	r8, r0
   81d84:	4689      	mov	r9, r1
   81d86:	ea58 0309 	orrs.w	r3, r8, r9
   81d8a:	d1eb      	bne.n	81d64 <_svfprintf_r+0xcf0>
   81d8c:	465b      	mov	r3, fp
   81d8e:	1afb      	subs	r3, r7, r3
   81d90:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81d94:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   81d98:	930d      	str	r3, [sp, #52]	; 0x34
   81d9a:	f7ff ba83 	b.w	812a4 <_svfprintf_r+0x230>
   81d9e:	2b30      	cmp	r3, #48	; 0x30
   81da0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   81da2:	f43f af3e 	beq.w	81c22 <_svfprintf_r+0xbae>
   81da6:	3b01      	subs	r3, #1
   81da8:	461a      	mov	r2, r3
   81daa:	9310      	str	r3, [sp, #64]	; 0x40
   81dac:	1aba      	subs	r2, r7, r2
   81dae:	2330      	movs	r3, #48	; 0x30
   81db0:	920d      	str	r2, [sp, #52]	; 0x34
   81db2:	f801 3c01 	strb.w	r3, [r1, #-1]
   81db6:	f7ff ba75 	b.w	812a4 <_svfprintf_r+0x230>
   81dba:	990e      	ldr	r1, [sp, #56]	; 0x38
   81dbc:	f04f 0900 	mov.w	r9, #0
   81dc0:	680a      	ldr	r2, [r1, #0]
   81dc2:	3104      	adds	r1, #4
   81dc4:	910e      	str	r1, [sp, #56]	; 0x38
   81dc6:	4690      	mov	r8, r2
   81dc8:	f7ff ba39 	b.w	8123e <_svfprintf_r+0x1ca>
   81dcc:	990e      	ldr	r1, [sp, #56]	; 0x38
   81dce:	2301      	movs	r3, #1
   81dd0:	680a      	ldr	r2, [r1, #0]
   81dd2:	3104      	adds	r1, #4
   81dd4:	910e      	str	r1, [sp, #56]	; 0x38
   81dd6:	4690      	mov	r8, r2
   81dd8:	f04f 0900 	mov.w	r9, #0
   81ddc:	f7ff ba2f 	b.w	8123e <_svfprintf_r+0x1ca>
   81de0:	9808      	ldr	r0, [sp, #32]
   81de2:	4631      	mov	r1, r6
   81de4:	aa23      	add	r2, sp, #140	; 0x8c
   81de6:	f002 fdd3 	bl	84990 <__ssprint_r>
   81dea:	2800      	cmp	r0, #0
   81dec:	f47f aa08 	bne.w	81200 <_svfprintf_r+0x18c>
   81df0:	463c      	mov	r4, r7
   81df2:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81df6:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81df8:	9912      	ldr	r1, [sp, #72]	; 0x48
   81dfa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   81dfc:	440a      	add	r2, r1
   81dfe:	4690      	mov	r8, r2
   81e00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81e02:	4293      	cmp	r3, r2
   81e04:	db46      	blt.n	81e94 <_svfprintf_r+0xe20>
   81e06:	9a07      	ldr	r2, [sp, #28]
   81e08:	07d0      	lsls	r0, r2, #31
   81e0a:	d443      	bmi.n	81e94 <_svfprintf_r+0xe20>
   81e0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81e0e:	ebc8 050a 	rsb	r5, r8, sl
   81e12:	1ad3      	subs	r3, r2, r3
   81e14:	429d      	cmp	r5, r3
   81e16:	bfa8      	it	ge
   81e18:	461d      	movge	r5, r3
   81e1a:	2d00      	cmp	r5, #0
   81e1c:	dd0c      	ble.n	81e38 <_svfprintf_r+0xdc4>
   81e1e:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81e20:	44ab      	add	fp, r5
   81e22:	3201      	adds	r2, #1
   81e24:	2a07      	cmp	r2, #7
   81e26:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81e2a:	f8c4 8000 	str.w	r8, [r4]
   81e2e:	6065      	str	r5, [r4, #4]
   81e30:	9224      	str	r2, [sp, #144]	; 0x90
   81e32:	f300 8296 	bgt.w	82362 <_svfprintf_r+0x12ee>
   81e36:	3408      	adds	r4, #8
   81e38:	2d00      	cmp	r5, #0
   81e3a:	bfb4      	ite	lt
   81e3c:	461d      	movlt	r5, r3
   81e3e:	1b5d      	subge	r5, r3, r5
   81e40:	2d00      	cmp	r5, #0
   81e42:	f77f ab11 	ble.w	81468 <_svfprintf_r+0x3f4>
   81e46:	2d10      	cmp	r5, #16
   81e48:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81e4a:	f8df 93d8 	ldr.w	r9, [pc, #984]	; 82224 <_svfprintf_r+0x11b0>
   81e4e:	f77f aeb7 	ble.w	81bc0 <_svfprintf_r+0xb4c>
   81e52:	f04f 0810 	mov.w	r8, #16
   81e56:	465a      	mov	r2, fp
   81e58:	f8dd a020 	ldr.w	sl, [sp, #32]
   81e5c:	e004      	b.n	81e68 <_svfprintf_r+0xdf4>
   81e5e:	3408      	adds	r4, #8
   81e60:	3d10      	subs	r5, #16
   81e62:	2d10      	cmp	r5, #16
   81e64:	f77f aeab 	ble.w	81bbe <_svfprintf_r+0xb4a>
   81e68:	3301      	adds	r3, #1
   81e6a:	3210      	adds	r2, #16
   81e6c:	2b07      	cmp	r3, #7
   81e6e:	9225      	str	r2, [sp, #148]	; 0x94
   81e70:	9324      	str	r3, [sp, #144]	; 0x90
   81e72:	f8c4 9000 	str.w	r9, [r4]
   81e76:	f8c4 8004 	str.w	r8, [r4, #4]
   81e7a:	ddf0      	ble.n	81e5e <_svfprintf_r+0xdea>
   81e7c:	4650      	mov	r0, sl
   81e7e:	4631      	mov	r1, r6
   81e80:	aa23      	add	r2, sp, #140	; 0x8c
   81e82:	f002 fd85 	bl	84990 <__ssprint_r>
   81e86:	2800      	cmp	r0, #0
   81e88:	f47f a9ba 	bne.w	81200 <_svfprintf_r+0x18c>
   81e8c:	463c      	mov	r4, r7
   81e8e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   81e90:	9b24      	ldr	r3, [sp, #144]	; 0x90
   81e92:	e7e5      	b.n	81e60 <_svfprintf_r+0xdec>
   81e94:	9a24      	ldr	r2, [sp, #144]	; 0x90
   81e96:	9818      	ldr	r0, [sp, #96]	; 0x60
   81e98:	3201      	adds	r2, #1
   81e9a:	9917      	ldr	r1, [sp, #92]	; 0x5c
   81e9c:	4483      	add	fp, r0
   81e9e:	2a07      	cmp	r2, #7
   81ea0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81ea4:	6021      	str	r1, [r4, #0]
   81ea6:	6060      	str	r0, [r4, #4]
   81ea8:	9224      	str	r2, [sp, #144]	; 0x90
   81eaa:	f300 8239 	bgt.w	82320 <_svfprintf_r+0x12ac>
   81eae:	3408      	adds	r4, #8
   81eb0:	e7ac      	b.n	81e0c <_svfprintf_r+0xd98>
   81eb2:	9b07      	ldr	r3, [sp, #28]
   81eb4:	07d9      	lsls	r1, r3, #31
   81eb6:	f53f ae00 	bmi.w	81aba <_svfprintf_r+0xa46>
   81eba:	3501      	adds	r5, #1
   81ebc:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81ebe:	f10b 0b01 	add.w	fp, fp, #1
   81ec2:	2301      	movs	r3, #1
   81ec4:	2d07      	cmp	r5, #7
   81ec6:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   81eca:	6022      	str	r2, [r4, #0]
   81ecc:	9524      	str	r5, [sp, #144]	; 0x90
   81ece:	6063      	str	r3, [r4, #4]
   81ed0:	f77f ae25 	ble.w	81b1e <_svfprintf_r+0xaaa>
   81ed4:	9808      	ldr	r0, [sp, #32]
   81ed6:	4631      	mov	r1, r6
   81ed8:	aa23      	add	r2, sp, #140	; 0x8c
   81eda:	f002 fd59 	bl	84990 <__ssprint_r>
   81ede:	2800      	cmp	r0, #0
   81ee0:	f47f a98e 	bne.w	81200 <_svfprintf_r+0x18c>
   81ee4:	463c      	mov	r4, r7
   81ee6:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81eea:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81eec:	e618      	b.n	81b20 <_svfprintf_r+0xaac>
   81eee:	9808      	ldr	r0, [sp, #32]
   81ef0:	4631      	mov	r1, r6
   81ef2:	aa23      	add	r2, sp, #140	; 0x8c
   81ef4:	f002 fd4c 	bl	84990 <__ssprint_r>
   81ef8:	2800      	cmp	r0, #0
   81efa:	f47f a981 	bne.w	81200 <_svfprintf_r+0x18c>
   81efe:	463c      	mov	r4, r7
   81f00:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81f02:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81f04:	e5e6      	b.n	81ad4 <_svfprintf_r+0xa60>
   81f06:	9808      	ldr	r0, [sp, #32]
   81f08:	4631      	mov	r1, r6
   81f0a:	aa23      	add	r2, sp, #140	; 0x8c
   81f0c:	f002 fd40 	bl	84990 <__ssprint_r>
   81f10:	2800      	cmp	r0, #0
   81f12:	f47f a975 	bne.w	81200 <_svfprintf_r+0x18c>
   81f16:	463c      	mov	r4, r7
   81f18:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81f1c:	9d24      	ldr	r5, [sp, #144]	; 0x90
   81f1e:	e5e7      	b.n	81af0 <_svfprintf_r+0xa7c>
   81f20:	9808      	ldr	r0, [sp, #32]
   81f22:	4631      	mov	r1, r6
   81f24:	aa23      	add	r2, sp, #140	; 0x8c
   81f26:	f002 fd33 	bl	84990 <__ssprint_r>
   81f2a:	2800      	cmp	r0, #0
   81f2c:	f47f a968 	bne.w	81200 <_svfprintf_r+0x18c>
   81f30:	463c      	mov	r4, r7
   81f32:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   81f36:	f7ff ba41 	b.w	813bc <_svfprintf_r+0x348>
   81f3a:	f002 fceb 	bl	84914 <__fpclassifyd>
   81f3e:	2800      	cmp	r0, #0
   81f40:	f040 80dd 	bne.w	820fe <_svfprintf_r+0x108a>
   81f44:	4ab4      	ldr	r2, [pc, #720]	; (82218 <_svfprintf_r+0x11a4>)
   81f46:	4bb5      	ldr	r3, [pc, #724]	; (8221c <_svfprintf_r+0x11a8>)
   81f48:	4686      	mov	lr, r0
   81f4a:	2d47      	cmp	r5, #71	; 0x47
   81f4c:	bfd8      	it	le
   81f4e:	461a      	movle	r2, r3
   81f50:	9011      	str	r0, [sp, #68]	; 0x44
   81f52:	9807      	ldr	r0, [sp, #28]
   81f54:	2103      	movs	r1, #3
   81f56:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   81f5a:	9109      	str	r1, [sp, #36]	; 0x24
   81f5c:	9007      	str	r0, [sp, #28]
   81f5e:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
   81f62:	9210      	str	r2, [sp, #64]	; 0x40
   81f64:	910d      	str	r1, [sp, #52]	; 0x34
   81f66:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   81f6a:	f7ff b9a3 	b.w	812b4 <_svfprintf_r+0x240>
   81f6e:	f029 0907 	bic.w	r9, r9, #7
   81f72:	f8d9 3000 	ldr.w	r3, [r9]
   81f76:	9314      	str	r3, [sp, #80]	; 0x50
   81f78:	f8d9 3004 	ldr.w	r3, [r9, #4]
   81f7c:	9315      	str	r3, [sp, #84]	; 0x54
   81f7e:	f109 0308 	add.w	r3, r9, #8
   81f82:	930e      	str	r3, [sp, #56]	; 0x38
   81f84:	f7ff bbc5 	b.w	81712 <_svfprintf_r+0x69e>
   81f88:	9b07      	ldr	r3, [sp, #28]
   81f8a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81f8c:	f013 0f40 	tst.w	r3, #64	; 0x40
   81f90:	4613      	mov	r3, r2
   81f92:	f43f ac40 	beq.w	81816 <_svfprintf_r+0x7a2>
   81f96:	3304      	adds	r3, #4
   81f98:	f8b2 8000 	ldrh.w	r8, [r2]
   81f9c:	f04f 0900 	mov.w	r9, #0
   81fa0:	930e      	str	r3, [sp, #56]	; 0x38
   81fa2:	f7ff bb1c 	b.w	815de <_svfprintf_r+0x56a>
   81fa6:	9b07      	ldr	r3, [sp, #28]
   81fa8:	06db      	lsls	r3, r3, #27
   81faa:	d40b      	bmi.n	81fc4 <_svfprintf_r+0xf50>
   81fac:	9b07      	ldr	r3, [sp, #28]
   81fae:	065d      	lsls	r5, r3, #25
   81fb0:	d508      	bpl.n	81fc4 <_svfprintf_r+0xf50>
   81fb2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81fb4:	6813      	ldr	r3, [r2, #0]
   81fb6:	3204      	adds	r2, #4
   81fb8:	920e      	str	r2, [sp, #56]	; 0x38
   81fba:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
   81fbe:	801a      	strh	r2, [r3, #0]
   81fc0:	f7ff b87d 	b.w	810be <_svfprintf_r+0x4a>
   81fc4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81fc6:	6813      	ldr	r3, [r2, #0]
   81fc8:	3204      	adds	r2, #4
   81fca:	920e      	str	r2, [sp, #56]	; 0x38
   81fcc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   81fce:	601a      	str	r2, [r3, #0]
   81fd0:	f7ff b875 	b.w	810be <_svfprintf_r+0x4a>
   81fd4:	4619      	mov	r1, r3
   81fd6:	781d      	ldrb	r5, [r3, #0]
   81fd8:	f7ff b89f 	b.w	8111a <_svfprintf_r+0xa6>
   81fdc:	9b07      	ldr	r3, [sp, #28]
   81fde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   81fe0:	f013 0f40 	tst.w	r3, #64	; 0x40
   81fe4:	4613      	mov	r3, r2
   81fe6:	f43f ab3a 	beq.w	8165e <_svfprintf_r+0x5ea>
   81fea:	f9b2 8000 	ldrsh.w	r8, [r2]
   81fee:	3304      	adds	r3, #4
   81ff0:	ea4f 79e8 	mov.w	r9, r8, asr #31
   81ff4:	930e      	str	r3, [sp, #56]	; 0x38
   81ff6:	4642      	mov	r2, r8
   81ff8:	464b      	mov	r3, r9
   81ffa:	f7ff bad3 	b.w	815a4 <_svfprintf_r+0x530>
   81ffe:	4693      	mov	fp, r2
   82000:	3301      	adds	r3, #1
   82002:	44ab      	add	fp, r5
   82004:	2b07      	cmp	r3, #7
   82006:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   8200a:	9324      	str	r3, [sp, #144]	; 0x90
   8200c:	f8c4 9000 	str.w	r9, [r4]
   82010:	6065      	str	r5, [r4, #4]
   82012:	f73f aee5 	bgt.w	81de0 <_svfprintf_r+0xd6c>
   82016:	3408      	adds	r4, #8
   82018:	e6ed      	b.n	81df6 <_svfprintf_r+0xd82>
   8201a:	9808      	ldr	r0, [sp, #32]
   8201c:	4631      	mov	r1, r6
   8201e:	aa23      	add	r2, sp, #140	; 0x8c
   82020:	f002 fcb6 	bl	84990 <__ssprint_r>
   82024:	2800      	cmp	r0, #0
   82026:	f47f a8eb 	bne.w	81200 <_svfprintf_r+0x18c>
   8202a:	463c      	mov	r4, r7
   8202c:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82030:	e4b6      	b.n	819a0 <_svfprintf_r+0x92c>
   82032:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82034:	497a      	ldr	r1, [pc, #488]	; (82220 <_svfprintf_r+0x11ac>)
   82036:	3301      	adds	r3, #1
   82038:	f10b 0b01 	add.w	fp, fp, #1
   8203c:	2201      	movs	r2, #1
   8203e:	2b07      	cmp	r3, #7
   82040:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   82044:	9324      	str	r3, [sp, #144]	; 0x90
   82046:	e884 0006 	stmia.w	r4, {r1, r2}
   8204a:	f300 80fd 	bgt.w	82248 <_svfprintf_r+0x11d4>
   8204e:	3408      	adds	r4, #8
   82050:	b92d      	cbnz	r5, 8205e <_svfprintf_r+0xfea>
   82052:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82054:	b91b      	cbnz	r3, 8205e <_svfprintf_r+0xfea>
   82056:	9b07      	ldr	r3, [sp, #28]
   82058:	07db      	lsls	r3, r3, #31
   8205a:	f57f aa05 	bpl.w	81468 <_svfprintf_r+0x3f4>
   8205e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82060:	9818      	ldr	r0, [sp, #96]	; 0x60
   82062:	3301      	adds	r3, #1
   82064:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   82066:	eb0b 0100 	add.w	r1, fp, r0
   8206a:	2b07      	cmp	r3, #7
   8206c:	9125      	str	r1, [sp, #148]	; 0x94
   8206e:	6022      	str	r2, [r4, #0]
   82070:	6060      	str	r0, [r4, #4]
   82072:	9324      	str	r3, [sp, #144]	; 0x90
   82074:	f300 81f4 	bgt.w	82460 <_svfprintf_r+0x13ec>
   82078:	f104 0208 	add.w	r2, r4, #8
   8207c:	426d      	negs	r5, r5
   8207e:	2d00      	cmp	r5, #0
   82080:	f340 8107 	ble.w	82292 <_svfprintf_r+0x121e>
   82084:	2d10      	cmp	r5, #16
   82086:	f8df 919c 	ldr.w	r9, [pc, #412]	; 82224 <_svfprintf_r+0x11b0>
   8208a:	f340 813e 	ble.w	8230a <_svfprintf_r+0x1296>
   8208e:	2410      	movs	r4, #16
   82090:	f8dd 8020 	ldr.w	r8, [sp, #32]
   82094:	e004      	b.n	820a0 <_svfprintf_r+0x102c>
   82096:	3208      	adds	r2, #8
   82098:	3d10      	subs	r5, #16
   8209a:	2d10      	cmp	r5, #16
   8209c:	f340 8135 	ble.w	8230a <_svfprintf_r+0x1296>
   820a0:	3301      	adds	r3, #1
   820a2:	3110      	adds	r1, #16
   820a4:	2b07      	cmp	r3, #7
   820a6:	9125      	str	r1, [sp, #148]	; 0x94
   820a8:	9324      	str	r3, [sp, #144]	; 0x90
   820aa:	f8c2 9000 	str.w	r9, [r2]
   820ae:	6054      	str	r4, [r2, #4]
   820b0:	ddf1      	ble.n	82096 <_svfprintf_r+0x1022>
   820b2:	4640      	mov	r0, r8
   820b4:	4631      	mov	r1, r6
   820b6:	aa23      	add	r2, sp, #140	; 0x8c
   820b8:	f002 fc6a 	bl	84990 <__ssprint_r>
   820bc:	2800      	cmp	r0, #0
   820be:	f47f a89f 	bne.w	81200 <_svfprintf_r+0x18c>
   820c2:	463a      	mov	r2, r7
   820c4:	9925      	ldr	r1, [sp, #148]	; 0x94
   820c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   820c8:	e7e6      	b.n	82098 <_svfprintf_r+0x1024>
   820ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
   820cc:	46b1      	mov	r9, r6
   820ce:	2b00      	cmp	r3, #0
   820d0:	f43f a897 	beq.w	81202 <_svfprintf_r+0x18e>
   820d4:	9808      	ldr	r0, [sp, #32]
   820d6:	4631      	mov	r1, r6
   820d8:	aa23      	add	r2, sp, #140	; 0x8c
   820da:	f002 fc59 	bl	84990 <__ssprint_r>
   820de:	f7ff b890 	b.w	81202 <_svfprintf_r+0x18e>
   820e2:	f041 0120 	orr.w	r1, r1, #32
   820e6:	9107      	str	r1, [sp, #28]
   820e8:	785d      	ldrb	r5, [r3, #1]
   820ea:	1c59      	adds	r1, r3, #1
   820ec:	f7ff b815 	b.w	8111a <_svfprintf_r+0xa6>
   820f0:	980c      	ldr	r0, [sp, #48]	; 0x30
   820f2:	910e      	str	r1, [sp, #56]	; 0x38
   820f4:	4240      	negs	r0, r0
   820f6:	900c      	str	r0, [sp, #48]	; 0x30
   820f8:	4619      	mov	r1, r3
   820fa:	f7ff ba0b 	b.w	81514 <_svfprintf_r+0x4a0>
   820fe:	f025 0320 	bic.w	r3, r5, #32
   82102:	f1ba 3fff 	cmp.w	sl, #4294967295
   82106:	930d      	str	r3, [sp, #52]	; 0x34
   82108:	f000 80ab 	beq.w	82262 <_svfprintf_r+0x11ee>
   8210c:	2b47      	cmp	r3, #71	; 0x47
   8210e:	d105      	bne.n	8211c <_svfprintf_r+0x10a8>
   82110:	f1ba 0f00 	cmp.w	sl, #0
   82114:	bf14      	ite	ne
   82116:	46d3      	movne	fp, sl
   82118:	f04f 0b01 	moveq.w	fp, #1
   8211c:	9b07      	ldr	r3, [sp, #28]
   8211e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   82122:	9311      	str	r3, [sp, #68]	; 0x44
   82124:	9b15      	ldr	r3, [sp, #84]	; 0x54
   82126:	f1b3 0a00 	subs.w	sl, r3, #0
   8212a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8212c:	9309      	str	r3, [sp, #36]	; 0x24
   8212e:	bfb7      	itett	lt
   82130:	4653      	movlt	r3, sl
   82132:	2300      	movge	r3, #0
   82134:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
   82138:	232d      	movlt	r3, #45	; 0x2d
   8213a:	2d66      	cmp	r5, #102	; 0x66
   8213c:	930f      	str	r3, [sp, #60]	; 0x3c
   8213e:	f000 80b9 	beq.w	822b4 <_svfprintf_r+0x1240>
   82142:	2d46      	cmp	r5, #70	; 0x46
   82144:	f000 80b6 	beq.w	822b4 <_svfprintf_r+0x1240>
   82148:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8214a:	2002      	movs	r0, #2
   8214c:	2b45      	cmp	r3, #69	; 0x45
   8214e:	bf14      	ite	ne
   82150:	46d9      	movne	r9, fp
   82152:	f10b 0901 	addeq.w	r9, fp, #1
   82156:	a91d      	add	r1, sp, #116	; 0x74
   82158:	e88d 0201 	stmia.w	sp, {r0, r9}
   8215c:	9102      	str	r1, [sp, #8]
   8215e:	a81e      	add	r0, sp, #120	; 0x78
   82160:	a921      	add	r1, sp, #132	; 0x84
   82162:	9003      	str	r0, [sp, #12]
   82164:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82166:	4653      	mov	r3, sl
   82168:	9104      	str	r1, [sp, #16]
   8216a:	9808      	ldr	r0, [sp, #32]
   8216c:	f000 faa4 	bl	826b8 <_dtoa_r>
   82170:	2d67      	cmp	r5, #103	; 0x67
   82172:	9010      	str	r0, [sp, #64]	; 0x40
   82174:	d002      	beq.n	8217c <_svfprintf_r+0x1108>
   82176:	2d47      	cmp	r5, #71	; 0x47
   82178:	f040 80ac 	bne.w	822d4 <_svfprintf_r+0x1260>
   8217c:	9b07      	ldr	r3, [sp, #28]
   8217e:	07db      	lsls	r3, r3, #31
   82180:	f140 8196 	bpl.w	824b0 <_svfprintf_r+0x143c>
   82184:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82186:	eb03 0809 	add.w	r8, r3, r9
   8218a:	9809      	ldr	r0, [sp, #36]	; 0x24
   8218c:	4651      	mov	r1, sl
   8218e:	2200      	movs	r2, #0
   82190:	2300      	movs	r3, #0
   82192:	f003 f921 	bl	853d8 <__aeabi_dcmpeq>
   82196:	2800      	cmp	r0, #0
   82198:	f040 810a 	bne.w	823b0 <_svfprintf_r+0x133c>
   8219c:	9b21      	ldr	r3, [sp, #132]	; 0x84
   8219e:	4598      	cmp	r8, r3
   821a0:	d906      	bls.n	821b0 <_svfprintf_r+0x113c>
   821a2:	2130      	movs	r1, #48	; 0x30
   821a4:	1c5a      	adds	r2, r3, #1
   821a6:	9221      	str	r2, [sp, #132]	; 0x84
   821a8:	7019      	strb	r1, [r3, #0]
   821aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
   821ac:	4598      	cmp	r8, r3
   821ae:	d8f9      	bhi.n	821a4 <_svfprintf_r+0x1130>
   821b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
   821b2:	1a9b      	subs	r3, r3, r2
   821b4:	9313      	str	r3, [sp, #76]	; 0x4c
   821b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   821b8:	2b47      	cmp	r3, #71	; 0x47
   821ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   821bc:	f000 80eb 	beq.w	82396 <_svfprintf_r+0x1322>
   821c0:	2d65      	cmp	r5, #101	; 0x65
   821c2:	f340 8105 	ble.w	823d0 <_svfprintf_r+0x135c>
   821c6:	2d66      	cmp	r5, #102	; 0x66
   821c8:	9312      	str	r3, [sp, #72]	; 0x48
   821ca:	f000 8164 	beq.w	82496 <_svfprintf_r+0x1422>
   821ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   821d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
   821d2:	4293      	cmp	r3, r2
   821d4:	f300 8151 	bgt.w	8247a <_svfprintf_r+0x1406>
   821d8:	9b07      	ldr	r3, [sp, #28]
   821da:	07d9      	lsls	r1, r3, #31
   821dc:	f100 8188 	bmi.w	824f0 <_svfprintf_r+0x147c>
   821e0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   821e4:	920d      	str	r2, [sp, #52]	; 0x34
   821e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   821e8:	2a00      	cmp	r2, #0
   821ea:	f040 80c9 	bne.w	82380 <_svfprintf_r+0x130c>
   821ee:	9309      	str	r3, [sp, #36]	; 0x24
   821f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   821f2:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   821f6:	9307      	str	r3, [sp, #28]
   821f8:	9211      	str	r2, [sp, #68]	; 0x44
   821fa:	f7ff b85b 	b.w	812b4 <_svfprintf_r+0x240>
   821fe:	9808      	ldr	r0, [sp, #32]
   82200:	4631      	mov	r1, r6
   82202:	aa23      	add	r2, sp, #140	; 0x8c
   82204:	f002 fbc4 	bl	84990 <__ssprint_r>
   82208:	2800      	cmp	r0, #0
   8220a:	f47e aff9 	bne.w	81200 <_svfprintf_r+0x18c>
   8220e:	463c      	mov	r4, r7
   82210:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82214:	f7ff bbda 	b.w	819cc <_svfprintf_r+0x958>
   82218:	00085aa0 	.word	0x00085aa0
   8221c:	00085a9c 	.word	0x00085a9c
   82220:	00085ad4 	.word	0x00085ad4
   82224:	00085a74 	.word	0x00085a74
   82228:	9808      	ldr	r0, [sp, #32]
   8222a:	2140      	movs	r1, #64	; 0x40
   8222c:	f001 fad6 	bl	837dc <_malloc_r>
   82230:	f8c9 0000 	str.w	r0, [r9]
   82234:	f8c9 0010 	str.w	r0, [r9, #16]
   82238:	2800      	cmp	r0, #0
   8223a:	f000 8186 	beq.w	8254a <_svfprintf_r+0x14d6>
   8223e:	2340      	movs	r3, #64	; 0x40
   82240:	f8c9 3014 	str.w	r3, [r9, #20]
   82244:	f7fe bf2e 	b.w	810a4 <_svfprintf_r+0x30>
   82248:	9808      	ldr	r0, [sp, #32]
   8224a:	4631      	mov	r1, r6
   8224c:	aa23      	add	r2, sp, #140	; 0x8c
   8224e:	f002 fb9f 	bl	84990 <__ssprint_r>
   82252:	2800      	cmp	r0, #0
   82254:	f47e afd4 	bne.w	81200 <_svfprintf_r+0x18c>
   82258:	463c      	mov	r4, r7
   8225a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
   8225c:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82260:	e6f6      	b.n	82050 <_svfprintf_r+0xfdc>
   82262:	f04f 0b06 	mov.w	fp, #6
   82266:	e759      	b.n	8211c <_svfprintf_r+0x10a8>
   82268:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
   8226c:	f7fe fed4 	bl	81018 <strlen>
   82270:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82274:	900d      	str	r0, [sp, #52]	; 0x34
   82276:	4603      	mov	r3, r0
   82278:	f7ff bb1a 	b.w	818b0 <_svfprintf_r+0x83c>
   8227c:	9808      	ldr	r0, [sp, #32]
   8227e:	4631      	mov	r1, r6
   82280:	aa23      	add	r2, sp, #140	; 0x8c
   82282:	f002 fb85 	bl	84990 <__ssprint_r>
   82286:	2800      	cmp	r0, #0
   82288:	f47e afba 	bne.w	81200 <_svfprintf_r+0x18c>
   8228c:	463a      	mov	r2, r7
   8228e:	9925      	ldr	r1, [sp, #148]	; 0x94
   82290:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82292:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   82294:	3301      	adds	r3, #1
   82296:	eb01 0b04 	add.w	fp, r1, r4
   8229a:	9910      	ldr	r1, [sp, #64]	; 0x40
   8229c:	2b07      	cmp	r3, #7
   8229e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
   822a2:	9324      	str	r3, [sp, #144]	; 0x90
   822a4:	6011      	str	r1, [r2, #0]
   822a6:	6054      	str	r4, [r2, #4]
   822a8:	f73f ac95 	bgt.w	81bd6 <_svfprintf_r+0xb62>
   822ac:	f102 0408 	add.w	r4, r2, #8
   822b0:	f7ff b8da 	b.w	81468 <_svfprintf_r+0x3f4>
   822b4:	2003      	movs	r0, #3
   822b6:	a91d      	add	r1, sp, #116	; 0x74
   822b8:	e88d 0801 	stmia.w	sp, {r0, fp}
   822bc:	9102      	str	r1, [sp, #8]
   822be:	a81e      	add	r0, sp, #120	; 0x78
   822c0:	a921      	add	r1, sp, #132	; 0x84
   822c2:	9003      	str	r0, [sp, #12]
   822c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   822c6:	4653      	mov	r3, sl
   822c8:	9104      	str	r1, [sp, #16]
   822ca:	9808      	ldr	r0, [sp, #32]
   822cc:	f000 f9f4 	bl	826b8 <_dtoa_r>
   822d0:	46d9      	mov	r9, fp
   822d2:	9010      	str	r0, [sp, #64]	; 0x40
   822d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
   822d6:	eb03 0809 	add.w	r8, r3, r9
   822da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   822dc:	2b46      	cmp	r3, #70	; 0x46
   822de:	f47f af54 	bne.w	8218a <_svfprintf_r+0x1116>
   822e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   822e4:	781b      	ldrb	r3, [r3, #0]
   822e6:	2b30      	cmp	r3, #48	; 0x30
   822e8:	f000 80e4 	beq.w	824b4 <_svfprintf_r+0x1440>
   822ec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   822ee:	4498      	add	r8, r3
   822f0:	e74b      	b.n	8218a <_svfprintf_r+0x1116>
   822f2:	9808      	ldr	r0, [sp, #32]
   822f4:	4631      	mov	r1, r6
   822f6:	aa23      	add	r2, sp, #140	; 0x8c
   822f8:	f002 fb4a 	bl	84990 <__ssprint_r>
   822fc:	2800      	cmp	r0, #0
   822fe:	f47e af7f 	bne.w	81200 <_svfprintf_r+0x18c>
   82302:	463c      	mov	r4, r7
   82304:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82308:	e4ac      	b.n	81c64 <_svfprintf_r+0xbf0>
   8230a:	3301      	adds	r3, #1
   8230c:	4429      	add	r1, r5
   8230e:	2b07      	cmp	r3, #7
   82310:	9125      	str	r1, [sp, #148]	; 0x94
   82312:	9324      	str	r3, [sp, #144]	; 0x90
   82314:	f8c2 9000 	str.w	r9, [r2]
   82318:	6055      	str	r5, [r2, #4]
   8231a:	dcaf      	bgt.n	8227c <_svfprintf_r+0x1208>
   8231c:	3208      	adds	r2, #8
   8231e:	e7b8      	b.n	82292 <_svfprintf_r+0x121e>
   82320:	9808      	ldr	r0, [sp, #32]
   82322:	4631      	mov	r1, r6
   82324:	aa23      	add	r2, sp, #140	; 0x8c
   82326:	f002 fb33 	bl	84990 <__ssprint_r>
   8232a:	2800      	cmp	r0, #0
   8232c:	f47e af68 	bne.w	81200 <_svfprintf_r+0x18c>
   82330:	463c      	mov	r4, r7
   82332:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   82334:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   82338:	e568      	b.n	81e0c <_svfprintf_r+0xd98>
   8233a:	4653      	mov	r3, sl
   8233c:	2b06      	cmp	r3, #6
   8233e:	bf28      	it	cs
   82340:	2306      	movcs	r3, #6
   82342:	930d      	str	r3, [sp, #52]	; 0x34
   82344:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82348:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8234c:	9309      	str	r3, [sp, #36]	; 0x24
   8234e:	4b84      	ldr	r3, [pc, #528]	; (82560 <_svfprintf_r+0x14ec>)
   82350:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   82354:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
   82358:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   8235c:	9310      	str	r3, [sp, #64]	; 0x40
   8235e:	f7fe bfa9 	b.w	812b4 <_svfprintf_r+0x240>
   82362:	9808      	ldr	r0, [sp, #32]
   82364:	4631      	mov	r1, r6
   82366:	aa23      	add	r2, sp, #140	; 0x8c
   82368:	f002 fb12 	bl	84990 <__ssprint_r>
   8236c:	2800      	cmp	r0, #0
   8236e:	f47e af47 	bne.w	81200 <_svfprintf_r+0x18c>
   82372:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   82374:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82376:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
   8237a:	1ad3      	subs	r3, r2, r3
   8237c:	463c      	mov	r4, r7
   8237e:	e55b      	b.n	81e38 <_svfprintf_r+0xdc4>
   82380:	9309      	str	r3, [sp, #36]	; 0x24
   82382:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82384:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
   82388:	9307      	str	r3, [sp, #28]
   8238a:	2300      	movs	r3, #0
   8238c:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
   82390:	9311      	str	r3, [sp, #68]	; 0x44
   82392:	f7fe bf92 	b.w	812ba <_svfprintf_r+0x246>
   82396:	1cda      	adds	r2, r3, #3
   82398:	db19      	blt.n	823ce <_svfprintf_r+0x135a>
   8239a:	459b      	cmp	fp, r3
   8239c:	db17      	blt.n	823ce <_svfprintf_r+0x135a>
   8239e:	9312      	str	r3, [sp, #72]	; 0x48
   823a0:	2567      	movs	r5, #103	; 0x67
   823a2:	e714      	b.n	821ce <_svfprintf_r+0x115a>
   823a4:	232d      	movs	r3, #45	; 0x2d
   823a6:	469c      	mov	ip, r3
   823a8:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
   823ac:	f7ff b9c3 	b.w	81736 <_svfprintf_r+0x6c2>
   823b0:	4643      	mov	r3, r8
   823b2:	e6fd      	b.n	821b0 <_svfprintf_r+0x113c>
   823b4:	ea2a 73ea 	bic.w	r3, sl, sl, asr #31
   823b8:	9011      	str	r0, [sp, #68]	; 0x44
   823ba:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
   823be:	9012      	str	r0, [sp, #72]	; 0x48
   823c0:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
   823c4:	9309      	str	r3, [sp, #36]	; 0x24
   823c6:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
   823ca:	f7fe bf73 	b.w	812b4 <_svfprintf_r+0x240>
   823ce:	3d02      	subs	r5, #2
   823d0:	3b01      	subs	r3, #1
   823d2:	2b00      	cmp	r3, #0
   823d4:	931d      	str	r3, [sp, #116]	; 0x74
   823d6:	bfba      	itte	lt
   823d8:	425b      	neglt	r3, r3
   823da:	222d      	movlt	r2, #45	; 0x2d
   823dc:	222b      	movge	r2, #43	; 0x2b
   823de:	2b09      	cmp	r3, #9
   823e0:	f88d 507c 	strb.w	r5, [sp, #124]	; 0x7c
   823e4:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
   823e8:	dd7a      	ble.n	824e0 <_svfprintf_r+0x146c>
   823ea:	f10d 008b 	add.w	r0, sp, #139	; 0x8b
   823ee:	4601      	mov	r1, r0
   823f0:	4a5c      	ldr	r2, [pc, #368]	; (82564 <_svfprintf_r+0x14f0>)
   823f2:	fb82 2e03 	smull	r2, lr, r2, r3
   823f6:	17da      	asrs	r2, r3, #31
   823f8:	ebc2 0eae 	rsb	lr, r2, lr, asr #2
   823fc:	eb0e 028e 	add.w	r2, lr, lr, lsl #2
   82400:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   82404:	4673      	mov	r3, lr
   82406:	3230      	adds	r2, #48	; 0x30
   82408:	2b09      	cmp	r3, #9
   8240a:	f801 2d01 	strb.w	r2, [r1, #-1]!
   8240e:	dcef      	bgt.n	823f0 <_svfprintf_r+0x137c>
   82410:	460a      	mov	r2, r1
   82412:	3330      	adds	r3, #48	; 0x30
   82414:	fa5f fe83 	uxtb.w	lr, r3
   82418:	f802 ed01 	strb.w	lr, [r2, #-1]!
   8241c:	4290      	cmp	r0, r2
   8241e:	f240 809b 	bls.w	82558 <_svfprintf_r+0x14e4>
   82422:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
   82426:	460b      	mov	r3, r1
   82428:	e001      	b.n	8242e <_svfprintf_r+0x13ba>
   8242a:	f813 eb01 	ldrb.w	lr, [r3], #1
   8242e:	4283      	cmp	r3, r0
   82430:	f802 eb01 	strb.w	lr, [r2], #1
   82434:	d1f9      	bne.n	8242a <_svfprintf_r+0x13b6>
   82436:	ab23      	add	r3, sp, #140	; 0x8c
   82438:	1a5b      	subs	r3, r3, r1
   8243a:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
   8243e:	4413      	add	r3, r2
   82440:	aa1f      	add	r2, sp, #124	; 0x7c
   82442:	1a9b      	subs	r3, r3, r2
   82444:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   82446:	9319      	str	r3, [sp, #100]	; 0x64
   82448:	2a01      	cmp	r2, #1
   8244a:	4413      	add	r3, r2
   8244c:	930d      	str	r3, [sp, #52]	; 0x34
   8244e:	dd5e      	ble.n	8250e <_svfprintf_r+0x149a>
   82450:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82452:	2200      	movs	r2, #0
   82454:	3301      	adds	r3, #1
   82456:	930d      	str	r3, [sp, #52]	; 0x34
   82458:	9212      	str	r2, [sp, #72]	; 0x48
   8245a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8245e:	e6c2      	b.n	821e6 <_svfprintf_r+0x1172>
   82460:	9808      	ldr	r0, [sp, #32]
   82462:	4631      	mov	r1, r6
   82464:	aa23      	add	r2, sp, #140	; 0x8c
   82466:	f002 fa93 	bl	84990 <__ssprint_r>
   8246a:	2800      	cmp	r0, #0
   8246c:	f47e aec8 	bne.w	81200 <_svfprintf_r+0x18c>
   82470:	463a      	mov	r2, r7
   82472:	9d1d      	ldr	r5, [sp, #116]	; 0x74
   82474:	9925      	ldr	r1, [sp, #148]	; 0x94
   82476:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82478:	e600      	b.n	8207c <_svfprintf_r+0x1008>
   8247a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8247c:	2b00      	cmp	r3, #0
   8247e:	bfd8      	it	le
   82480:	f1c3 0802 	rsble	r8, r3, #2
   82484:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82486:	bfc8      	it	gt
   82488:	f04f 0801 	movgt.w	r8, #1
   8248c:	4443      	add	r3, r8
   8248e:	930d      	str	r3, [sp, #52]	; 0x34
   82490:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82494:	e6a7      	b.n	821e6 <_svfprintf_r+0x1172>
   82496:	2b00      	cmp	r3, #0
   82498:	dd30      	ble.n	824fc <_svfprintf_r+0x1488>
   8249a:	f1bb 0f00 	cmp.w	fp, #0
   8249e:	d117      	bne.n	824d0 <_svfprintf_r+0x145c>
   824a0:	9b07      	ldr	r3, [sp, #28]
   824a2:	07db      	lsls	r3, r3, #31
   824a4:	d414      	bmi.n	824d0 <_svfprintf_r+0x145c>
   824a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
   824a8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   824ac:	920d      	str	r2, [sp, #52]	; 0x34
   824ae:	e69a      	b.n	821e6 <_svfprintf_r+0x1172>
   824b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
   824b2:	e67d      	b.n	821b0 <_svfprintf_r+0x113c>
   824b4:	9809      	ldr	r0, [sp, #36]	; 0x24
   824b6:	4651      	mov	r1, sl
   824b8:	2200      	movs	r2, #0
   824ba:	2300      	movs	r3, #0
   824bc:	f002 ff8c 	bl	853d8 <__aeabi_dcmpeq>
   824c0:	2800      	cmp	r0, #0
   824c2:	f47f af13 	bne.w	822ec <_svfprintf_r+0x1278>
   824c6:	f1c9 0301 	rsb	r3, r9, #1
   824ca:	931d      	str	r3, [sp, #116]	; 0x74
   824cc:	4498      	add	r8, r3
   824ce:	e65c      	b.n	8218a <_svfprintf_r+0x1116>
   824d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   824d2:	f10b 0801 	add.w	r8, fp, #1
   824d6:	4443      	add	r3, r8
   824d8:	930d      	str	r3, [sp, #52]	; 0x34
   824da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   824de:	e682      	b.n	821e6 <_svfprintf_r+0x1172>
   824e0:	3330      	adds	r3, #48	; 0x30
   824e2:	2230      	movs	r2, #48	; 0x30
   824e4:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
   824e8:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
   824ec:	ab20      	add	r3, sp, #128	; 0x80
   824ee:	e7a7      	b.n	82440 <_svfprintf_r+0x13cc>
   824f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   824f2:	3301      	adds	r3, #1
   824f4:	930d      	str	r3, [sp, #52]	; 0x34
   824f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   824fa:	e674      	b.n	821e6 <_svfprintf_r+0x1172>
   824fc:	f1bb 0f00 	cmp.w	fp, #0
   82500:	d11d      	bne.n	8253e <_svfprintf_r+0x14ca>
   82502:	9b07      	ldr	r3, [sp, #28]
   82504:	07d8      	lsls	r0, r3, #31
   82506:	d41a      	bmi.n	8253e <_svfprintf_r+0x14ca>
   82508:	2301      	movs	r3, #1
   8250a:	930d      	str	r3, [sp, #52]	; 0x34
   8250c:	e66b      	b.n	821e6 <_svfprintf_r+0x1172>
   8250e:	9b07      	ldr	r3, [sp, #28]
   82510:	f013 0301 	ands.w	r3, r3, #1
   82514:	d19c      	bne.n	82450 <_svfprintf_r+0x13dc>
   82516:	9312      	str	r3, [sp, #72]	; 0x48
   82518:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8251a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8251e:	e662      	b.n	821e6 <_svfprintf_r+0x1172>
   82520:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82522:	4628      	mov	r0, r5
   82524:	f8d5 a000 	ldr.w	sl, [r5]
   82528:	3004      	adds	r0, #4
   8252a:	f1ba 0f00 	cmp.w	sl, #0
   8252e:	785d      	ldrb	r5, [r3, #1]
   82530:	900e      	str	r0, [sp, #56]	; 0x38
   82532:	f6be adf2 	bge.w	8111a <_svfprintf_r+0xa6>
   82536:	f04f 3aff 	mov.w	sl, #4294967295
   8253a:	f7fe bdee 	b.w	8111a <_svfprintf_r+0xa6>
   8253e:	f10b 0302 	add.w	r3, fp, #2
   82542:	930d      	str	r3, [sp, #52]	; 0x34
   82544:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82548:	e64d      	b.n	821e6 <_svfprintf_r+0x1172>
   8254a:	9a08      	ldr	r2, [sp, #32]
   8254c:	230c      	movs	r3, #12
   8254e:	6013      	str	r3, [r2, #0]
   82550:	f04f 30ff 	mov.w	r0, #4294967295
   82554:	f7fe be5e 	b.w	81214 <_svfprintf_r+0x1a0>
   82558:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
   8255c:	e770      	b.n	82440 <_svfprintf_r+0x13cc>
   8255e:	bf00      	nop
   82560:	00085acc 	.word	0x00085acc
   82564:	66666667 	.word	0x66666667

00082568 <register_fini>:
   82568:	4b02      	ldr	r3, [pc, #8]	; (82574 <register_fini+0xc>)
   8256a:	b113      	cbz	r3, 82572 <register_fini+0xa>
   8256c:	4802      	ldr	r0, [pc, #8]	; (82578 <register_fini+0x10>)
   8256e:	f000 b805 	b.w	8257c <atexit>
   82572:	4770      	bx	lr
   82574:	00000000 	.word	0x00000000
   82578:	0008355d 	.word	0x0008355d

0008257c <atexit>:
   8257c:	4601      	mov	r1, r0
   8257e:	2000      	movs	r0, #0
   82580:	4602      	mov	r2, r0
   82582:	4603      	mov	r3, r0
   82584:	f002 ba86 	b.w	84a94 <__register_exitproc>

00082588 <quorem>:
   82588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8258c:	6903      	ldr	r3, [r0, #16]
   8258e:	690f      	ldr	r7, [r1, #16]
   82590:	b083      	sub	sp, #12
   82592:	429f      	cmp	r7, r3
   82594:	f300 808b 	bgt.w	826ae <quorem+0x126>
   82598:	3f01      	subs	r7, #1
   8259a:	f101 0614 	add.w	r6, r1, #20
   8259e:	f100 0a14 	add.w	sl, r0, #20
   825a2:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   825a6:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   825aa:	3301      	adds	r3, #1
   825ac:	fbb2 f8f3 	udiv	r8, r2, r3
   825b0:	00bb      	lsls	r3, r7, #2
   825b2:	9300      	str	r3, [sp, #0]
   825b4:	eb06 0903 	add.w	r9, r6, r3
   825b8:	4453      	add	r3, sl
   825ba:	9301      	str	r3, [sp, #4]
   825bc:	f1b8 0f00 	cmp.w	r8, #0
   825c0:	d03d      	beq.n	8263e <quorem+0xb6>
   825c2:	2300      	movs	r3, #0
   825c4:	461c      	mov	r4, r3
   825c6:	46b4      	mov	ip, r6
   825c8:	46d6      	mov	lr, sl
   825ca:	461a      	mov	r2, r3
   825cc:	f85c bb04 	ldr.w	fp, [ip], #4
   825d0:	f8de 5000 	ldr.w	r5, [lr]
   825d4:	fa1f f38b 	uxth.w	r3, fp
   825d8:	ea4f 4b1b 	mov.w	fp, fp, lsr #16
   825dc:	fb03 2208 	mla	r2, r3, r8, r2
   825e0:	fb0b f308 	mul.w	r3, fp, r8
   825e4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   825e8:	b292      	uxth	r2, r2
   825ea:	1aa4      	subs	r4, r4, r2
   825ec:	fa1f fb83 	uxth.w	fp, r3
   825f0:	b2aa      	uxth	r2, r5
   825f2:	4422      	add	r2, r4
   825f4:	ebcb 4415 	rsb	r4, fp, r5, lsr #16
   825f8:	eb04 4422 	add.w	r4, r4, r2, asr #16
   825fc:	b292      	uxth	r2, r2
   825fe:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   82602:	45e1      	cmp	r9, ip
   82604:	f84e 2b04 	str.w	r2, [lr], #4
   82608:	ea4f 4424 	mov.w	r4, r4, asr #16
   8260c:	ea4f 4213 	mov.w	r2, r3, lsr #16
   82610:	d2dc      	bcs.n	825cc <quorem+0x44>
   82612:	9b00      	ldr	r3, [sp, #0]
   82614:	f85a 3003 	ldr.w	r3, [sl, r3]
   82618:	b98b      	cbnz	r3, 8263e <quorem+0xb6>
   8261a:	9c01      	ldr	r4, [sp, #4]
   8261c:	1f23      	subs	r3, r4, #4
   8261e:	459a      	cmp	sl, r3
   82620:	d20c      	bcs.n	8263c <quorem+0xb4>
   82622:	f854 3c04 	ldr.w	r3, [r4, #-4]
   82626:	b94b      	cbnz	r3, 8263c <quorem+0xb4>
   82628:	f1a4 0308 	sub.w	r3, r4, #8
   8262c:	e002      	b.n	82634 <quorem+0xac>
   8262e:	681a      	ldr	r2, [r3, #0]
   82630:	3b04      	subs	r3, #4
   82632:	b91a      	cbnz	r2, 8263c <quorem+0xb4>
   82634:	459a      	cmp	sl, r3
   82636:	f107 37ff 	add.w	r7, r7, #4294967295
   8263a:	d3f8      	bcc.n	8262e <quorem+0xa6>
   8263c:	6107      	str	r7, [r0, #16]
   8263e:	4604      	mov	r4, r0
   82640:	f001 fe8e 	bl	84360 <__mcmp>
   82644:	2800      	cmp	r0, #0
   82646:	db2e      	blt.n	826a6 <quorem+0x11e>
   82648:	2300      	movs	r3, #0
   8264a:	4655      	mov	r5, sl
   8264c:	4619      	mov	r1, r3
   8264e:	f108 0801 	add.w	r8, r8, #1
   82652:	f856 2b04 	ldr.w	r2, [r6], #4
   82656:	682b      	ldr	r3, [r5, #0]
   82658:	b290      	uxth	r0, r2
   8265a:	1a08      	subs	r0, r1, r0
   8265c:	0c12      	lsrs	r2, r2, #16
   8265e:	b299      	uxth	r1, r3
   82660:	ebc2 4313 	rsb	r3, r2, r3, lsr #16
   82664:	1842      	adds	r2, r0, r1
   82666:	eb03 4322 	add.w	r3, r3, r2, asr #16
   8266a:	b292      	uxth	r2, r2
   8266c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   82670:	45b1      	cmp	r9, r6
   82672:	f845 2b04 	str.w	r2, [r5], #4
   82676:	ea4f 4123 	mov.w	r1, r3, asr #16
   8267a:	d2ea      	bcs.n	82652 <quorem+0xca>
   8267c:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   82680:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   82684:	b97a      	cbnz	r2, 826a6 <quorem+0x11e>
   82686:	1f1a      	subs	r2, r3, #4
   82688:	4592      	cmp	sl, r2
   8268a:	d20b      	bcs.n	826a4 <quorem+0x11c>
   8268c:	f853 2c04 	ldr.w	r2, [r3, #-4]
   82690:	b942      	cbnz	r2, 826a4 <quorem+0x11c>
   82692:	3b08      	subs	r3, #8
   82694:	e002      	b.n	8269c <quorem+0x114>
   82696:	681a      	ldr	r2, [r3, #0]
   82698:	3b04      	subs	r3, #4
   8269a:	b91a      	cbnz	r2, 826a4 <quorem+0x11c>
   8269c:	459a      	cmp	sl, r3
   8269e:	f107 37ff 	add.w	r7, r7, #4294967295
   826a2:	d3f8      	bcc.n	82696 <quorem+0x10e>
   826a4:	6127      	str	r7, [r4, #16]
   826a6:	4640      	mov	r0, r8
   826a8:	b003      	add	sp, #12
   826aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   826ae:	2000      	movs	r0, #0
   826b0:	b003      	add	sp, #12
   826b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   826b6:	bf00      	nop

000826b8 <_dtoa_r>:
   826b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   826bc:	6c01      	ldr	r1, [r0, #64]	; 0x40
   826be:	b099      	sub	sp, #100	; 0x64
   826c0:	4604      	mov	r4, r0
   826c2:	e9cd 2302 	strd	r2, r3, [sp, #8]
   826c6:	9d25      	ldr	r5, [sp, #148]	; 0x94
   826c8:	b141      	cbz	r1, 826dc <_dtoa_r+0x24>
   826ca:	6c42      	ldr	r2, [r0, #68]	; 0x44
   826cc:	2301      	movs	r3, #1
   826ce:	4093      	lsls	r3, r2
   826d0:	608b      	str	r3, [r1, #8]
   826d2:	604a      	str	r2, [r1, #4]
   826d4:	f001 fc58 	bl	83f88 <_Bfree>
   826d8:	2300      	movs	r3, #0
   826da:	6423      	str	r3, [r4, #64]	; 0x40
   826dc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   826e0:	2b00      	cmp	r3, #0
   826e2:	4699      	mov	r9, r3
   826e4:	db36      	blt.n	82754 <_dtoa_r+0x9c>
   826e6:	2300      	movs	r3, #0
   826e8:	602b      	str	r3, [r5, #0]
   826ea:	4ba5      	ldr	r3, [pc, #660]	; (82980 <_dtoa_r+0x2c8>)
   826ec:	461a      	mov	r2, r3
   826ee:	ea09 0303 	and.w	r3, r9, r3
   826f2:	4293      	cmp	r3, r2
   826f4:	d017      	beq.n	82726 <_dtoa_r+0x6e>
   826f6:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   826fa:	2200      	movs	r2, #0
   826fc:	2300      	movs	r3, #0
   826fe:	4630      	mov	r0, r6
   82700:	4639      	mov	r1, r7
   82702:	f002 fe69 	bl	853d8 <__aeabi_dcmpeq>
   82706:	4680      	mov	r8, r0
   82708:	2800      	cmp	r0, #0
   8270a:	d02b      	beq.n	82764 <_dtoa_r+0xac>
   8270c:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8270e:	2301      	movs	r3, #1
   82710:	6013      	str	r3, [r2, #0]
   82712:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82714:	2b00      	cmp	r3, #0
   82716:	f000 80cb 	beq.w	828b0 <_dtoa_r+0x1f8>
   8271a:	489a      	ldr	r0, [pc, #616]	; (82984 <_dtoa_r+0x2cc>)
   8271c:	6018      	str	r0, [r3, #0]
   8271e:	3801      	subs	r0, #1
   82720:	b019      	add	sp, #100	; 0x64
   82722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82726:	f242 730f 	movw	r3, #9999	; 0x270f
   8272a:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8272c:	6013      	str	r3, [r2, #0]
   8272e:	9b02      	ldr	r3, [sp, #8]
   82730:	2b00      	cmp	r3, #0
   82732:	f000 80a6 	beq.w	82882 <_dtoa_r+0x1ca>
   82736:	4894      	ldr	r0, [pc, #592]	; (82988 <_dtoa_r+0x2d0>)
   82738:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8273a:	2b00      	cmp	r3, #0
   8273c:	d0f0      	beq.n	82720 <_dtoa_r+0x68>
   8273e:	78c3      	ldrb	r3, [r0, #3]
   82740:	2b00      	cmp	r3, #0
   82742:	f000 80b7 	beq.w	828b4 <_dtoa_r+0x1fc>
   82746:	f100 0308 	add.w	r3, r0, #8
   8274a:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8274c:	6013      	str	r3, [r2, #0]
   8274e:	b019      	add	sp, #100	; 0x64
   82750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82754:	9a03      	ldr	r2, [sp, #12]
   82756:	2301      	movs	r3, #1
   82758:	f022 4900 	bic.w	r9, r2, #2147483648	; 0x80000000
   8275c:	602b      	str	r3, [r5, #0]
   8275e:	f8cd 900c 	str.w	r9, [sp, #12]
   82762:	e7c2      	b.n	826ea <_dtoa_r+0x32>
   82764:	aa17      	add	r2, sp, #92	; 0x5c
   82766:	ab16      	add	r3, sp, #88	; 0x58
   82768:	e88d 000c 	stmia.w	sp, {r2, r3}
   8276c:	4620      	mov	r0, r4
   8276e:	4632      	mov	r2, r6
   82770:	463b      	mov	r3, r7
   82772:	f001 fe8b 	bl	8448c <__d2b>
   82776:	ea5f 5519 	movs.w	r5, r9, lsr #20
   8277a:	4683      	mov	fp, r0
   8277c:	f040 808a 	bne.w	82894 <_dtoa_r+0x1dc>
   82780:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
   82784:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   82786:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   8278a:	4445      	add	r5, r8
   8278c:	429d      	cmp	r5, r3
   8278e:	f2c0 8295 	blt.w	82cbc <_dtoa_r+0x604>
   82792:	4a7e      	ldr	r2, [pc, #504]	; (8298c <_dtoa_r+0x2d4>)
   82794:	f205 4312 	addw	r3, r5, #1042	; 0x412
   82798:	1b52      	subs	r2, r2, r5
   8279a:	fa09 f902 	lsl.w	r9, r9, r2
   8279e:	9a02      	ldr	r2, [sp, #8]
   827a0:	fa22 f003 	lsr.w	r0, r2, r3
   827a4:	ea49 0000 	orr.w	r0, r9, r0
   827a8:	f002 fb38 	bl	84e1c <__aeabi_ui2d>
   827ac:	2301      	movs	r3, #1
   827ae:	3d01      	subs	r5, #1
   827b0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   827b4:	9312      	str	r3, [sp, #72]	; 0x48
   827b6:	2200      	movs	r2, #0
   827b8:	4b75      	ldr	r3, [pc, #468]	; (82990 <_dtoa_r+0x2d8>)
   827ba:	f002 f9f1 	bl	84ba0 <__aeabi_dsub>
   827be:	a36a      	add	r3, pc, #424	; (adr r3, 82968 <_dtoa_r+0x2b0>)
   827c0:	e9d3 2300 	ldrd	r2, r3, [r3]
   827c4:	f002 fba0 	bl	84f08 <__aeabi_dmul>
   827c8:	a369      	add	r3, pc, #420	; (adr r3, 82970 <_dtoa_r+0x2b8>)
   827ca:	e9d3 2300 	ldrd	r2, r3, [r3]
   827ce:	f002 f9e9 	bl	84ba4 <__adddf3>
   827d2:	4606      	mov	r6, r0
   827d4:	4628      	mov	r0, r5
   827d6:	460f      	mov	r7, r1
   827d8:	f002 fb30 	bl	84e3c <__aeabi_i2d>
   827dc:	a366      	add	r3, pc, #408	; (adr r3, 82978 <_dtoa_r+0x2c0>)
   827de:	e9d3 2300 	ldrd	r2, r3, [r3]
   827e2:	f002 fb91 	bl	84f08 <__aeabi_dmul>
   827e6:	4602      	mov	r2, r0
   827e8:	460b      	mov	r3, r1
   827ea:	4630      	mov	r0, r6
   827ec:	4639      	mov	r1, r7
   827ee:	f002 f9d9 	bl	84ba4 <__adddf3>
   827f2:	4606      	mov	r6, r0
   827f4:	460f      	mov	r7, r1
   827f6:	f002 fe21 	bl	8543c <__aeabi_d2iz>
   827fa:	4639      	mov	r1, r7
   827fc:	9005      	str	r0, [sp, #20]
   827fe:	2200      	movs	r2, #0
   82800:	4630      	mov	r0, r6
   82802:	2300      	movs	r3, #0
   82804:	f002 fdf2 	bl	853ec <__aeabi_dcmplt>
   82808:	2800      	cmp	r0, #0
   8280a:	f040 81a4 	bne.w	82b56 <_dtoa_r+0x49e>
   8280e:	9b05      	ldr	r3, [sp, #20]
   82810:	2b16      	cmp	r3, #22
   82812:	f200 819d 	bhi.w	82b50 <_dtoa_r+0x498>
   82816:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   8281a:	9805      	ldr	r0, [sp, #20]
   8281c:	495d      	ldr	r1, [pc, #372]	; (82994 <_dtoa_r+0x2dc>)
   8281e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   82822:	e9d1 0100 	ldrd	r0, r1, [r1]
   82826:	f002 fdff 	bl	85428 <__aeabi_dcmpgt>
   8282a:	2800      	cmp	r0, #0
   8282c:	f000 8250 	beq.w	82cd0 <_dtoa_r+0x618>
   82830:	9b05      	ldr	r3, [sp, #20]
   82832:	3b01      	subs	r3, #1
   82834:	9305      	str	r3, [sp, #20]
   82836:	2300      	movs	r3, #0
   82838:	930c      	str	r3, [sp, #48]	; 0x30
   8283a:	ebc5 0508 	rsb	r5, r5, r8
   8283e:	f1b5 0a01 	subs.w	sl, r5, #1
   82842:	f100 819f 	bmi.w	82b84 <_dtoa_r+0x4cc>
   82846:	2300      	movs	r3, #0
   82848:	9306      	str	r3, [sp, #24]
   8284a:	9b05      	ldr	r3, [sp, #20]
   8284c:	2b00      	cmp	r3, #0
   8284e:	f2c0 8190 	blt.w	82b72 <_dtoa_r+0x4ba>
   82852:	449a      	add	sl, r3
   82854:	930b      	str	r3, [sp, #44]	; 0x2c
   82856:	2300      	movs	r3, #0
   82858:	9309      	str	r3, [sp, #36]	; 0x24
   8285a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8285c:	2b09      	cmp	r3, #9
   8285e:	d82b      	bhi.n	828b8 <_dtoa_r+0x200>
   82860:	2b05      	cmp	r3, #5
   82862:	f340 8677 	ble.w	83554 <_dtoa_r+0xe9c>
   82866:	3b04      	subs	r3, #4
   82868:	9322      	str	r3, [sp, #136]	; 0x88
   8286a:	2500      	movs	r5, #0
   8286c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8286e:	3b02      	subs	r3, #2
   82870:	2b03      	cmp	r3, #3
   82872:	f200 8655 	bhi.w	83520 <_dtoa_r+0xe68>
   82876:	e8df f013 	tbh	[pc, r3, lsl #1]
   8287a:	03cf      	.short	0x03cf
   8287c:	02b003c1 	.word	0x02b003c1
   82880:	066a      	.short	0x066a
   82882:	4b41      	ldr	r3, [pc, #260]	; (82988 <_dtoa_r+0x2d0>)
   82884:	4a44      	ldr	r2, [pc, #272]	; (82998 <_dtoa_r+0x2e0>)
   82886:	f3c9 0013 	ubfx	r0, r9, #0, #20
   8288a:	2800      	cmp	r0, #0
   8288c:	bf14      	ite	ne
   8288e:	4618      	movne	r0, r3
   82890:	4610      	moveq	r0, r2
   82892:	e751      	b.n	82738 <_dtoa_r+0x80>
   82894:	f3c7 0313 	ubfx	r3, r7, #0, #20
   82898:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   8289c:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
   828a0:	4630      	mov	r0, r6
   828a2:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   828a6:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   828aa:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
   828ae:	e782      	b.n	827b6 <_dtoa_r+0xfe>
   828b0:	483a      	ldr	r0, [pc, #232]	; (8299c <_dtoa_r+0x2e4>)
   828b2:	e735      	b.n	82720 <_dtoa_r+0x68>
   828b4:	1cc3      	adds	r3, r0, #3
   828b6:	e748      	b.n	8274a <_dtoa_r+0x92>
   828b8:	2100      	movs	r1, #0
   828ba:	6461      	str	r1, [r4, #68]	; 0x44
   828bc:	4620      	mov	r0, r4
   828be:	9122      	str	r1, [sp, #136]	; 0x88
   828c0:	f001 fb3a 	bl	83f38 <_Balloc>
   828c4:	f04f 33ff 	mov.w	r3, #4294967295
   828c8:	9a22      	ldr	r2, [sp, #136]	; 0x88
   828ca:	9307      	str	r3, [sp, #28]
   828cc:	930d      	str	r3, [sp, #52]	; 0x34
   828ce:	2301      	movs	r3, #1
   828d0:	9008      	str	r0, [sp, #32]
   828d2:	9223      	str	r2, [sp, #140]	; 0x8c
   828d4:	6420      	str	r0, [r4, #64]	; 0x40
   828d6:	930a      	str	r3, [sp, #40]	; 0x28
   828d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   828da:	2b00      	cmp	r3, #0
   828dc:	f2c0 80d0 	blt.w	82a80 <_dtoa_r+0x3c8>
   828e0:	9a05      	ldr	r2, [sp, #20]
   828e2:	2a0e      	cmp	r2, #14
   828e4:	f300 80cc 	bgt.w	82a80 <_dtoa_r+0x3c8>
   828e8:	4b2a      	ldr	r3, [pc, #168]	; (82994 <_dtoa_r+0x2dc>)
   828ea:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   828ee:	e9d3 8900 	ldrd	r8, r9, [r3]
   828f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   828f4:	2b00      	cmp	r3, #0
   828f6:	f2c0 8392 	blt.w	8301e <_dtoa_r+0x966>
   828fa:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   828fe:	4642      	mov	r2, r8
   82900:	464b      	mov	r3, r9
   82902:	4630      	mov	r0, r6
   82904:	4639      	mov	r1, r7
   82906:	f002 fc29 	bl	8515c <__aeabi_ddiv>
   8290a:	f002 fd97 	bl	8543c <__aeabi_d2iz>
   8290e:	4682      	mov	sl, r0
   82910:	f002 fa94 	bl	84e3c <__aeabi_i2d>
   82914:	4642      	mov	r2, r8
   82916:	464b      	mov	r3, r9
   82918:	f002 faf6 	bl	84f08 <__aeabi_dmul>
   8291c:	4602      	mov	r2, r0
   8291e:	460b      	mov	r3, r1
   82920:	4630      	mov	r0, r6
   82922:	4639      	mov	r1, r7
   82924:	f002 f93c 	bl	84ba0 <__aeabi_dsub>
   82928:	9e07      	ldr	r6, [sp, #28]
   8292a:	9f08      	ldr	r7, [sp, #32]
   8292c:	f10a 0530 	add.w	r5, sl, #48	; 0x30
   82930:	2e01      	cmp	r6, #1
   82932:	703d      	strb	r5, [r7, #0]
   82934:	4602      	mov	r2, r0
   82936:	460b      	mov	r3, r1
   82938:	f107 0501 	add.w	r5, r7, #1
   8293c:	d062      	beq.n	82a04 <_dtoa_r+0x34c>
   8293e:	2200      	movs	r2, #0
   82940:	4b17      	ldr	r3, [pc, #92]	; (829a0 <_dtoa_r+0x2e8>)
   82942:	f002 fae1 	bl	84f08 <__aeabi_dmul>
   82946:	2200      	movs	r2, #0
   82948:	2300      	movs	r3, #0
   8294a:	4606      	mov	r6, r0
   8294c:	460f      	mov	r7, r1
   8294e:	f002 fd43 	bl	853d8 <__aeabi_dcmpeq>
   82952:	2800      	cmp	r0, #0
   82954:	f040 8081 	bne.w	82a5a <_dtoa_r+0x3a2>
   82958:	f8cd b008 	str.w	fp, [sp, #8]
   8295c:	f8dd a020 	ldr.w	sl, [sp, #32]
   82960:	f8dd b01c 	ldr.w	fp, [sp, #28]
   82964:	9406      	str	r4, [sp, #24]
   82966:	e02a      	b.n	829be <_dtoa_r+0x306>
   82968:	636f4361 	.word	0x636f4361
   8296c:	3fd287a7 	.word	0x3fd287a7
   82970:	8b60c8b3 	.word	0x8b60c8b3
   82974:	3fc68a28 	.word	0x3fc68a28
   82978:	509f79fb 	.word	0x509f79fb
   8297c:	3fd34413 	.word	0x3fd34413
   82980:	7ff00000 	.word	0x7ff00000
   82984:	00085ad5 	.word	0x00085ad5
   82988:	00085ae4 	.word	0x00085ae4
   8298c:	fffffc0e 	.word	0xfffffc0e
   82990:	3ff80000 	.word	0x3ff80000
   82994:	00085af8 	.word	0x00085af8
   82998:	00085ad8 	.word	0x00085ad8
   8299c:	00085ad4 	.word	0x00085ad4
   829a0:	40240000 	.word	0x40240000
   829a4:	2200      	movs	r2, #0
   829a6:	4bc8      	ldr	r3, [pc, #800]	; (82cc8 <_dtoa_r+0x610>)
   829a8:	f002 faae 	bl	84f08 <__aeabi_dmul>
   829ac:	2200      	movs	r2, #0
   829ae:	2300      	movs	r3, #0
   829b0:	4606      	mov	r6, r0
   829b2:	460f      	mov	r7, r1
   829b4:	f002 fd10 	bl	853d8 <__aeabi_dcmpeq>
   829b8:	2800      	cmp	r0, #0
   829ba:	f040 83e0 	bne.w	8317e <_dtoa_r+0xac6>
   829be:	4642      	mov	r2, r8
   829c0:	464b      	mov	r3, r9
   829c2:	4630      	mov	r0, r6
   829c4:	4639      	mov	r1, r7
   829c6:	f002 fbc9 	bl	8515c <__aeabi_ddiv>
   829ca:	f002 fd37 	bl	8543c <__aeabi_d2iz>
   829ce:	4604      	mov	r4, r0
   829d0:	f002 fa34 	bl	84e3c <__aeabi_i2d>
   829d4:	4642      	mov	r2, r8
   829d6:	464b      	mov	r3, r9
   829d8:	f002 fa96 	bl	84f08 <__aeabi_dmul>
   829dc:	4602      	mov	r2, r0
   829de:	460b      	mov	r3, r1
   829e0:	4630      	mov	r0, r6
   829e2:	4639      	mov	r1, r7
   829e4:	f002 f8dc 	bl	84ba0 <__aeabi_dsub>
   829e8:	f104 0630 	add.w	r6, r4, #48	; 0x30
   829ec:	f805 6b01 	strb.w	r6, [r5], #1
   829f0:	ebca 0605 	rsb	r6, sl, r5
   829f4:	45b3      	cmp	fp, r6
   829f6:	4602      	mov	r2, r0
   829f8:	460b      	mov	r3, r1
   829fa:	d1d3      	bne.n	829a4 <_dtoa_r+0x2ec>
   829fc:	46a2      	mov	sl, r4
   829fe:	f8dd b008 	ldr.w	fp, [sp, #8]
   82a02:	9c06      	ldr	r4, [sp, #24]
   82a04:	4610      	mov	r0, r2
   82a06:	4619      	mov	r1, r3
   82a08:	f002 f8cc 	bl	84ba4 <__adddf3>
   82a0c:	4606      	mov	r6, r0
   82a0e:	460f      	mov	r7, r1
   82a10:	4640      	mov	r0, r8
   82a12:	4649      	mov	r1, r9
   82a14:	4632      	mov	r2, r6
   82a16:	463b      	mov	r3, r7
   82a18:	f002 fce8 	bl	853ec <__aeabi_dcmplt>
   82a1c:	b948      	cbnz	r0, 82a32 <_dtoa_r+0x37a>
   82a1e:	4640      	mov	r0, r8
   82a20:	4649      	mov	r1, r9
   82a22:	4632      	mov	r2, r6
   82a24:	463b      	mov	r3, r7
   82a26:	f002 fcd7 	bl	853d8 <__aeabi_dcmpeq>
   82a2a:	b1b0      	cbz	r0, 82a5a <_dtoa_r+0x3a2>
   82a2c:	f01a 0f01 	tst.w	sl, #1
   82a30:	d013      	beq.n	82a5a <_dtoa_r+0x3a2>
   82a32:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   82a36:	1e6b      	subs	r3, r5, #1
   82a38:	9908      	ldr	r1, [sp, #32]
   82a3a:	e004      	b.n	82a46 <_dtoa_r+0x38e>
   82a3c:	428b      	cmp	r3, r1
   82a3e:	f000 8445 	beq.w	832cc <_dtoa_r+0xc14>
   82a42:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   82a46:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   82a4a:	f103 0501 	add.w	r5, r3, #1
   82a4e:	461a      	mov	r2, r3
   82a50:	d0f4      	beq.n	82a3c <_dtoa_r+0x384>
   82a52:	f108 0301 	add.w	r3, r8, #1
   82a56:	b2db      	uxtb	r3, r3
   82a58:	7013      	strb	r3, [r2, #0]
   82a5a:	4620      	mov	r0, r4
   82a5c:	4659      	mov	r1, fp
   82a5e:	f001 fa93 	bl	83f88 <_Bfree>
   82a62:	2200      	movs	r2, #0
   82a64:	9b05      	ldr	r3, [sp, #20]
   82a66:	702a      	strb	r2, [r5, #0]
   82a68:	9a24      	ldr	r2, [sp, #144]	; 0x90
   82a6a:	3301      	adds	r3, #1
   82a6c:	6013      	str	r3, [r2, #0]
   82a6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a70:	2b00      	cmp	r3, #0
   82a72:	f000 834a 	beq.w	8310a <_dtoa_r+0xa52>
   82a76:	9808      	ldr	r0, [sp, #32]
   82a78:	601d      	str	r5, [r3, #0]
   82a7a:	b019      	add	sp, #100	; 0x64
   82a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82a82:	2a00      	cmp	r2, #0
   82a84:	f000 8084 	beq.w	82b90 <_dtoa_r+0x4d8>
   82a88:	9a22      	ldr	r2, [sp, #136]	; 0x88
   82a8a:	2a01      	cmp	r2, #1
   82a8c:	f340 8309 	ble.w	830a2 <_dtoa_r+0x9ea>
   82a90:	9b07      	ldr	r3, [sp, #28]
   82a92:	1e5f      	subs	r7, r3, #1
   82a94:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82a96:	42bb      	cmp	r3, r7
   82a98:	f2c0 83af 	blt.w	831fa <_dtoa_r+0xb42>
   82a9c:	1bdf      	subs	r7, r3, r7
   82a9e:	9b07      	ldr	r3, [sp, #28]
   82aa0:	2b00      	cmp	r3, #0
   82aa2:	f2c0 84a5 	blt.w	833f0 <_dtoa_r+0xd38>
   82aa6:	9d06      	ldr	r5, [sp, #24]
   82aa8:	9b07      	ldr	r3, [sp, #28]
   82aaa:	9a06      	ldr	r2, [sp, #24]
   82aac:	4620      	mov	r0, r4
   82aae:	441a      	add	r2, r3
   82ab0:	2101      	movs	r1, #1
   82ab2:	9206      	str	r2, [sp, #24]
   82ab4:	449a      	add	sl, r3
   82ab6:	f001 fb01 	bl	840bc <__i2b>
   82aba:	4606      	mov	r6, r0
   82abc:	b165      	cbz	r5, 82ad8 <_dtoa_r+0x420>
   82abe:	f1ba 0f00 	cmp.w	sl, #0
   82ac2:	dd09      	ble.n	82ad8 <_dtoa_r+0x420>
   82ac4:	45aa      	cmp	sl, r5
   82ac6:	4653      	mov	r3, sl
   82ac8:	bfa8      	it	ge
   82aca:	462b      	movge	r3, r5
   82acc:	9a06      	ldr	r2, [sp, #24]
   82ace:	1aed      	subs	r5, r5, r3
   82ad0:	1ad2      	subs	r2, r2, r3
   82ad2:	9206      	str	r2, [sp, #24]
   82ad4:	ebc3 0a0a 	rsb	sl, r3, sl
   82ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82ada:	2b00      	cmp	r3, #0
   82adc:	dd1a      	ble.n	82b14 <_dtoa_r+0x45c>
   82ade:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82ae0:	2b00      	cmp	r3, #0
   82ae2:	f000 8383 	beq.w	831ec <_dtoa_r+0xb34>
   82ae6:	2f00      	cmp	r7, #0
   82ae8:	dd10      	ble.n	82b0c <_dtoa_r+0x454>
   82aea:	4631      	mov	r1, r6
   82aec:	463a      	mov	r2, r7
   82aee:	4620      	mov	r0, r4
   82af0:	f001 fb8e 	bl	84210 <__pow5mult>
   82af4:	4606      	mov	r6, r0
   82af6:	465a      	mov	r2, fp
   82af8:	4631      	mov	r1, r6
   82afa:	4620      	mov	r0, r4
   82afc:	f001 fae8 	bl	840d0 <__multiply>
   82b00:	4680      	mov	r8, r0
   82b02:	4659      	mov	r1, fp
   82b04:	4620      	mov	r0, r4
   82b06:	f001 fa3f 	bl	83f88 <_Bfree>
   82b0a:	46c3      	mov	fp, r8
   82b0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82b0e:	1bda      	subs	r2, r3, r7
   82b10:	f040 82a7 	bne.w	83062 <_dtoa_r+0x9aa>
   82b14:	4620      	mov	r0, r4
   82b16:	2101      	movs	r1, #1
   82b18:	f001 fad0 	bl	840bc <__i2b>
   82b1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82b1e:	4680      	mov	r8, r0
   82b20:	2b00      	cmp	r3, #0
   82b22:	dd39      	ble.n	82b98 <_dtoa_r+0x4e0>
   82b24:	4601      	mov	r1, r0
   82b26:	461a      	mov	r2, r3
   82b28:	4620      	mov	r0, r4
   82b2a:	f001 fb71 	bl	84210 <__pow5mult>
   82b2e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82b30:	4680      	mov	r8, r0
   82b32:	2b01      	cmp	r3, #1
   82b34:	f340 829b 	ble.w	8306e <_dtoa_r+0x9b6>
   82b38:	f04f 0900 	mov.w	r9, #0
   82b3c:	f8d8 3010 	ldr.w	r3, [r8, #16]
   82b40:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   82b44:	6918      	ldr	r0, [r3, #16]
   82b46:	f001 fa6b 	bl	84020 <__hi0bits>
   82b4a:	f1c0 0020 	rsb	r0, r0, #32
   82b4e:	e02d      	b.n	82bac <_dtoa_r+0x4f4>
   82b50:	2301      	movs	r3, #1
   82b52:	930c      	str	r3, [sp, #48]	; 0x30
   82b54:	e671      	b.n	8283a <_dtoa_r+0x182>
   82b56:	9805      	ldr	r0, [sp, #20]
   82b58:	f002 f970 	bl	84e3c <__aeabi_i2d>
   82b5c:	4632      	mov	r2, r6
   82b5e:	463b      	mov	r3, r7
   82b60:	f002 fc3a 	bl	853d8 <__aeabi_dcmpeq>
   82b64:	2800      	cmp	r0, #0
   82b66:	f47f ae52 	bne.w	8280e <_dtoa_r+0x156>
   82b6a:	9b05      	ldr	r3, [sp, #20]
   82b6c:	3b01      	subs	r3, #1
   82b6e:	9305      	str	r3, [sp, #20]
   82b70:	e64d      	b.n	8280e <_dtoa_r+0x156>
   82b72:	9a06      	ldr	r2, [sp, #24]
   82b74:	9b05      	ldr	r3, [sp, #20]
   82b76:	1ad2      	subs	r2, r2, r3
   82b78:	425b      	negs	r3, r3
   82b7a:	9309      	str	r3, [sp, #36]	; 0x24
   82b7c:	2300      	movs	r3, #0
   82b7e:	9206      	str	r2, [sp, #24]
   82b80:	930b      	str	r3, [sp, #44]	; 0x2c
   82b82:	e66a      	b.n	8285a <_dtoa_r+0x1a2>
   82b84:	f1ca 0300 	rsb	r3, sl, #0
   82b88:	9306      	str	r3, [sp, #24]
   82b8a:	f04f 0a00 	mov.w	sl, #0
   82b8e:	e65c      	b.n	8284a <_dtoa_r+0x192>
   82b90:	9f09      	ldr	r7, [sp, #36]	; 0x24
   82b92:	9d06      	ldr	r5, [sp, #24]
   82b94:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   82b96:	e791      	b.n	82abc <_dtoa_r+0x404>
   82b98:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82b9a:	2b01      	cmp	r3, #1
   82b9c:	f340 82b8 	ble.w	83110 <_dtoa_r+0xa58>
   82ba0:	f04f 0900 	mov.w	r9, #0
   82ba4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82ba6:	2b00      	cmp	r3, #0
   82ba8:	d1c8      	bne.n	82b3c <_dtoa_r+0x484>
   82baa:	2001      	movs	r0, #1
   82bac:	4450      	add	r0, sl
   82bae:	f010 001f 	ands.w	r0, r0, #31
   82bb2:	f000 8081 	beq.w	82cb8 <_dtoa_r+0x600>
   82bb6:	f1c0 0320 	rsb	r3, r0, #32
   82bba:	2b04      	cmp	r3, #4
   82bbc:	f340 84c1 	ble.w	83542 <_dtoa_r+0xe8a>
   82bc0:	f1c0 001c 	rsb	r0, r0, #28
   82bc4:	9b06      	ldr	r3, [sp, #24]
   82bc6:	4405      	add	r5, r0
   82bc8:	4403      	add	r3, r0
   82bca:	9306      	str	r3, [sp, #24]
   82bcc:	4482      	add	sl, r0
   82bce:	9b06      	ldr	r3, [sp, #24]
   82bd0:	2b00      	cmp	r3, #0
   82bd2:	dd05      	ble.n	82be0 <_dtoa_r+0x528>
   82bd4:	4659      	mov	r1, fp
   82bd6:	461a      	mov	r2, r3
   82bd8:	4620      	mov	r0, r4
   82bda:	f001 fb69 	bl	842b0 <__lshift>
   82bde:	4683      	mov	fp, r0
   82be0:	f1ba 0f00 	cmp.w	sl, #0
   82be4:	dd05      	ble.n	82bf2 <_dtoa_r+0x53a>
   82be6:	4641      	mov	r1, r8
   82be8:	4652      	mov	r2, sl
   82bea:	4620      	mov	r0, r4
   82bec:	f001 fb60 	bl	842b0 <__lshift>
   82bf0:	4680      	mov	r8, r0
   82bf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82bf4:	2b00      	cmp	r3, #0
   82bf6:	f040 826d 	bne.w	830d4 <_dtoa_r+0xa1c>
   82bfa:	9b07      	ldr	r3, [sp, #28]
   82bfc:	2b00      	cmp	r3, #0
   82bfe:	f340 829b 	ble.w	83138 <_dtoa_r+0xa80>
   82c02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82c04:	2b00      	cmp	r3, #0
   82c06:	d171      	bne.n	82cec <_dtoa_r+0x634>
   82c08:	f8dd 9020 	ldr.w	r9, [sp, #32]
   82c0c:	9f07      	ldr	r7, [sp, #28]
   82c0e:	464d      	mov	r5, r9
   82c10:	e004      	b.n	82c1c <_dtoa_r+0x564>
   82c12:	4659      	mov	r1, fp
   82c14:	4620      	mov	r0, r4
   82c16:	f001 f9c1 	bl	83f9c <__multadd>
   82c1a:	4683      	mov	fp, r0
   82c1c:	4658      	mov	r0, fp
   82c1e:	4641      	mov	r1, r8
   82c20:	f7ff fcb2 	bl	82588 <quorem>
   82c24:	3030      	adds	r0, #48	; 0x30
   82c26:	f805 0b01 	strb.w	r0, [r5], #1
   82c2a:	ebc9 0305 	rsb	r3, r9, r5
   82c2e:	42bb      	cmp	r3, r7
   82c30:	f04f 020a 	mov.w	r2, #10
   82c34:	f04f 0300 	mov.w	r3, #0
   82c38:	dbeb      	blt.n	82c12 <_dtoa_r+0x55a>
   82c3a:	9b08      	ldr	r3, [sp, #32]
   82c3c:	9a07      	ldr	r2, [sp, #28]
   82c3e:	4684      	mov	ip, r0
   82c40:	2a01      	cmp	r2, #1
   82c42:	bfac      	ite	ge
   82c44:	189b      	addge	r3, r3, r2
   82c46:	3301      	addlt	r3, #1
   82c48:	461d      	mov	r5, r3
   82c4a:	f04f 0a00 	mov.w	sl, #0
   82c4e:	4659      	mov	r1, fp
   82c50:	2201      	movs	r2, #1
   82c52:	4620      	mov	r0, r4
   82c54:	f8cd c008 	str.w	ip, [sp, #8]
   82c58:	f001 fb2a 	bl	842b0 <__lshift>
   82c5c:	4641      	mov	r1, r8
   82c5e:	4683      	mov	fp, r0
   82c60:	f001 fb7e 	bl	84360 <__mcmp>
   82c64:	2800      	cmp	r0, #0
   82c66:	f8dd c008 	ldr.w	ip, [sp, #8]
   82c6a:	f340 82fc 	ble.w	83266 <_dtoa_r+0xbae>
   82c6e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   82c72:	1e6b      	subs	r3, r5, #1
   82c74:	9908      	ldr	r1, [sp, #32]
   82c76:	e004      	b.n	82c82 <_dtoa_r+0x5ca>
   82c78:	428b      	cmp	r3, r1
   82c7a:	f000 8279 	beq.w	83170 <_dtoa_r+0xab8>
   82c7e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   82c82:	2a39      	cmp	r2, #57	; 0x39
   82c84:	f103 0501 	add.w	r5, r3, #1
   82c88:	d0f6      	beq.n	82c78 <_dtoa_r+0x5c0>
   82c8a:	3201      	adds	r2, #1
   82c8c:	701a      	strb	r2, [r3, #0]
   82c8e:	4641      	mov	r1, r8
   82c90:	4620      	mov	r0, r4
   82c92:	f001 f979 	bl	83f88 <_Bfree>
   82c96:	2e00      	cmp	r6, #0
   82c98:	f43f aedf 	beq.w	82a5a <_dtoa_r+0x3a2>
   82c9c:	f1ba 0f00 	cmp.w	sl, #0
   82ca0:	d005      	beq.n	82cae <_dtoa_r+0x5f6>
   82ca2:	45b2      	cmp	sl, r6
   82ca4:	d003      	beq.n	82cae <_dtoa_r+0x5f6>
   82ca6:	4651      	mov	r1, sl
   82ca8:	4620      	mov	r0, r4
   82caa:	f001 f96d 	bl	83f88 <_Bfree>
   82cae:	4631      	mov	r1, r6
   82cb0:	4620      	mov	r0, r4
   82cb2:	f001 f969 	bl	83f88 <_Bfree>
   82cb6:	e6d0      	b.n	82a5a <_dtoa_r+0x3a2>
   82cb8:	201c      	movs	r0, #28
   82cba:	e783      	b.n	82bc4 <_dtoa_r+0x50c>
   82cbc:	4b03      	ldr	r3, [pc, #12]	; (82ccc <_dtoa_r+0x614>)
   82cbe:	9a02      	ldr	r2, [sp, #8]
   82cc0:	1b5b      	subs	r3, r3, r5
   82cc2:	fa02 f003 	lsl.w	r0, r2, r3
   82cc6:	e56f      	b.n	827a8 <_dtoa_r+0xf0>
   82cc8:	40240000 	.word	0x40240000
   82ccc:	fffffbee 	.word	0xfffffbee
   82cd0:	900c      	str	r0, [sp, #48]	; 0x30
   82cd2:	e5b2      	b.n	8283a <_dtoa_r+0x182>
   82cd4:	4631      	mov	r1, r6
   82cd6:	2300      	movs	r3, #0
   82cd8:	4620      	mov	r0, r4
   82cda:	220a      	movs	r2, #10
   82cdc:	f001 f95e 	bl	83f9c <__multadd>
   82ce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82ce2:	4606      	mov	r6, r0
   82ce4:	2b00      	cmp	r3, #0
   82ce6:	f340 8415 	ble.w	83514 <_dtoa_r+0xe5c>
   82cea:	9307      	str	r3, [sp, #28]
   82cec:	2d00      	cmp	r5, #0
   82cee:	dd05      	ble.n	82cfc <_dtoa_r+0x644>
   82cf0:	4631      	mov	r1, r6
   82cf2:	462a      	mov	r2, r5
   82cf4:	4620      	mov	r0, r4
   82cf6:	f001 fadb 	bl	842b0 <__lshift>
   82cfa:	4606      	mov	r6, r0
   82cfc:	f1b9 0f00 	cmp.w	r9, #0
   82d00:	f040 82ee 	bne.w	832e0 <_dtoa_r+0xc28>
   82d04:	46b1      	mov	r9, r6
   82d06:	9a08      	ldr	r2, [sp, #32]
   82d08:	9b07      	ldr	r3, [sp, #28]
   82d0a:	4617      	mov	r7, r2
   82d0c:	3b01      	subs	r3, #1
   82d0e:	18d3      	adds	r3, r2, r3
   82d10:	9309      	str	r3, [sp, #36]	; 0x24
   82d12:	9b02      	ldr	r3, [sp, #8]
   82d14:	f003 0301 	and.w	r3, r3, #1
   82d18:	930a      	str	r3, [sp, #40]	; 0x28
   82d1a:	4641      	mov	r1, r8
   82d1c:	4658      	mov	r0, fp
   82d1e:	f7ff fc33 	bl	82588 <quorem>
   82d22:	4631      	mov	r1, r6
   82d24:	4605      	mov	r5, r0
   82d26:	4658      	mov	r0, fp
   82d28:	f001 fb1a 	bl	84360 <__mcmp>
   82d2c:	464a      	mov	r2, r9
   82d2e:	4682      	mov	sl, r0
   82d30:	4641      	mov	r1, r8
   82d32:	4620      	mov	r0, r4
   82d34:	f001 fb38 	bl	843a8 <__mdiff>
   82d38:	68c2      	ldr	r2, [r0, #12]
   82d3a:	4603      	mov	r3, r0
   82d3c:	f105 0c30 	add.w	ip, r5, #48	; 0x30
   82d40:	2a00      	cmp	r2, #0
   82d42:	f040 81bd 	bne.w	830c0 <_dtoa_r+0xa08>
   82d46:	4619      	mov	r1, r3
   82d48:	4658      	mov	r0, fp
   82d4a:	f8cd c01c 	str.w	ip, [sp, #28]
   82d4e:	9306      	str	r3, [sp, #24]
   82d50:	f001 fb06 	bl	84360 <__mcmp>
   82d54:	9b06      	ldr	r3, [sp, #24]
   82d56:	9002      	str	r0, [sp, #8]
   82d58:	4619      	mov	r1, r3
   82d5a:	4620      	mov	r0, r4
   82d5c:	f001 f914 	bl	83f88 <_Bfree>
   82d60:	9a02      	ldr	r2, [sp, #8]
   82d62:	f8dd c01c 	ldr.w	ip, [sp, #28]
   82d66:	b92a      	cbnz	r2, 82d74 <_dtoa_r+0x6bc>
   82d68:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82d6a:	b91b      	cbnz	r3, 82d74 <_dtoa_r+0x6bc>
   82d6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d6e:	2b00      	cmp	r3, #0
   82d70:	f000 83b0 	beq.w	834d4 <_dtoa_r+0xe1c>
   82d74:	f1ba 0f00 	cmp.w	sl, #0
   82d78:	f2c0 8257 	blt.w	8322a <_dtoa_r+0xb72>
   82d7c:	d105      	bne.n	82d8a <_dtoa_r+0x6d2>
   82d7e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   82d80:	b91b      	cbnz	r3, 82d8a <_dtoa_r+0x6d2>
   82d82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d84:	2b00      	cmp	r3, #0
   82d86:	f000 8250 	beq.w	8322a <_dtoa_r+0xb72>
   82d8a:	2a00      	cmp	r2, #0
   82d8c:	f300 82bc 	bgt.w	83308 <_dtoa_r+0xc50>
   82d90:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82d92:	f107 0a01 	add.w	sl, r7, #1
   82d96:	429f      	cmp	r7, r3
   82d98:	f887 c000 	strb.w	ip, [r7]
   82d9c:	4655      	mov	r5, sl
   82d9e:	f000 82bf 	beq.w	83320 <_dtoa_r+0xc68>
   82da2:	4659      	mov	r1, fp
   82da4:	220a      	movs	r2, #10
   82da6:	2300      	movs	r3, #0
   82da8:	4620      	mov	r0, r4
   82daa:	f001 f8f7 	bl	83f9c <__multadd>
   82dae:	454e      	cmp	r6, r9
   82db0:	4683      	mov	fp, r0
   82db2:	4631      	mov	r1, r6
   82db4:	4620      	mov	r0, r4
   82db6:	f04f 020a 	mov.w	r2, #10
   82dba:	f04f 0300 	mov.w	r3, #0
   82dbe:	f000 8179 	beq.w	830b4 <_dtoa_r+0x9fc>
   82dc2:	f001 f8eb 	bl	83f9c <__multadd>
   82dc6:	4649      	mov	r1, r9
   82dc8:	4606      	mov	r6, r0
   82dca:	220a      	movs	r2, #10
   82dcc:	4620      	mov	r0, r4
   82dce:	2300      	movs	r3, #0
   82dd0:	f001 f8e4 	bl	83f9c <__multadd>
   82dd4:	4657      	mov	r7, sl
   82dd6:	4681      	mov	r9, r0
   82dd8:	e79f      	b.n	82d1a <_dtoa_r+0x662>
   82dda:	2301      	movs	r3, #1
   82ddc:	930a      	str	r3, [sp, #40]	; 0x28
   82dde:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82de0:	2b00      	cmp	r3, #0
   82de2:	f340 8219 	ble.w	83218 <_dtoa_r+0xb60>
   82de6:	461f      	mov	r7, r3
   82de8:	461e      	mov	r6, r3
   82dea:	930d      	str	r3, [sp, #52]	; 0x34
   82dec:	9307      	str	r3, [sp, #28]
   82dee:	2100      	movs	r1, #0
   82df0:	2f17      	cmp	r7, #23
   82df2:	6461      	str	r1, [r4, #68]	; 0x44
   82df4:	d90a      	bls.n	82e0c <_dtoa_r+0x754>
   82df6:	2201      	movs	r2, #1
   82df8:	2304      	movs	r3, #4
   82dfa:	005b      	lsls	r3, r3, #1
   82dfc:	f103 0014 	add.w	r0, r3, #20
   82e00:	4287      	cmp	r7, r0
   82e02:	4611      	mov	r1, r2
   82e04:	f102 0201 	add.w	r2, r2, #1
   82e08:	d2f7      	bcs.n	82dfa <_dtoa_r+0x742>
   82e0a:	6461      	str	r1, [r4, #68]	; 0x44
   82e0c:	4620      	mov	r0, r4
   82e0e:	f001 f893 	bl	83f38 <_Balloc>
   82e12:	2e0e      	cmp	r6, #14
   82e14:	9008      	str	r0, [sp, #32]
   82e16:	6420      	str	r0, [r4, #64]	; 0x40
   82e18:	f63f ad5e 	bhi.w	828d8 <_dtoa_r+0x220>
   82e1c:	2d00      	cmp	r5, #0
   82e1e:	f43f ad5b 	beq.w	828d8 <_dtoa_r+0x220>
   82e22:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   82e26:	9905      	ldr	r1, [sp, #20]
   82e28:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   82e2c:	2900      	cmp	r1, #0
   82e2e:	f340 8226 	ble.w	8327e <_dtoa_r+0xbc6>
   82e32:	4bba      	ldr	r3, [pc, #744]	; (8311c <_dtoa_r+0xa64>)
   82e34:	f001 020f 	and.w	r2, r1, #15
   82e38:	110d      	asrs	r5, r1, #4
   82e3a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82e3e:	06e9      	lsls	r1, r5, #27
   82e40:	e9d3 6700 	ldrd	r6, r7, [r3]
   82e44:	f140 81e1 	bpl.w	8320a <_dtoa_r+0xb52>
   82e48:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   82e4c:	4bb4      	ldr	r3, [pc, #720]	; (83120 <_dtoa_r+0xa68>)
   82e4e:	f005 050f 	and.w	r5, r5, #15
   82e52:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   82e56:	f002 f981 	bl	8515c <__aeabi_ddiv>
   82e5a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   82e5e:	f04f 0803 	mov.w	r8, #3
   82e62:	b18d      	cbz	r5, 82e88 <_dtoa_r+0x7d0>
   82e64:	4630      	mov	r0, r6
   82e66:	4639      	mov	r1, r7
   82e68:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 83120 <_dtoa_r+0xa68>
   82e6c:	07ea      	lsls	r2, r5, #31
   82e6e:	d505      	bpl.n	82e7c <_dtoa_r+0x7c4>
   82e70:	e9d9 2300 	ldrd	r2, r3, [r9]
   82e74:	f002 f848 	bl	84f08 <__aeabi_dmul>
   82e78:	f108 0801 	add.w	r8, r8, #1
   82e7c:	106d      	asrs	r5, r5, #1
   82e7e:	f109 0908 	add.w	r9, r9, #8
   82e82:	d1f3      	bne.n	82e6c <_dtoa_r+0x7b4>
   82e84:	4606      	mov	r6, r0
   82e86:	460f      	mov	r7, r1
   82e88:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   82e8c:	4632      	mov	r2, r6
   82e8e:	463b      	mov	r3, r7
   82e90:	f002 f964 	bl	8515c <__aeabi_ddiv>
   82e94:	e9cd 0102 	strd	r0, r1, [sp, #8]
   82e98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82e9a:	b143      	cbz	r3, 82eae <_dtoa_r+0x7f6>
   82e9c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   82ea0:	2200      	movs	r2, #0
   82ea2:	4ba0      	ldr	r3, [pc, #640]	; (83124 <_dtoa_r+0xa6c>)
   82ea4:	f002 faa2 	bl	853ec <__aeabi_dcmplt>
   82ea8:	2800      	cmp	r0, #0
   82eaa:	f040 82b5 	bne.w	83418 <_dtoa_r+0xd60>
   82eae:	4640      	mov	r0, r8
   82eb0:	f001 ffc4 	bl	84e3c <__aeabi_i2d>
   82eb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   82eb8:	f002 f826 	bl	84f08 <__aeabi_dmul>
   82ebc:	4b9a      	ldr	r3, [pc, #616]	; (83128 <_dtoa_r+0xa70>)
   82ebe:	2200      	movs	r2, #0
   82ec0:	f001 fe70 	bl	84ba4 <__adddf3>
   82ec4:	9b07      	ldr	r3, [sp, #28]
   82ec6:	4606      	mov	r6, r0
   82ec8:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   82ecc:	2b00      	cmp	r3, #0
   82ece:	f000 8168 	beq.w	831a2 <_dtoa_r+0xaea>
   82ed2:	9b05      	ldr	r3, [sp, #20]
   82ed4:	f8dd c01c 	ldr.w	ip, [sp, #28]
   82ed8:	9313      	str	r3, [sp, #76]	; 0x4c
   82eda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82edc:	2b00      	cmp	r3, #0
   82ede:	f000 8226 	beq.w	8332e <_dtoa_r+0xc76>
   82ee2:	4b8e      	ldr	r3, [pc, #568]	; (8311c <_dtoa_r+0xa64>)
   82ee4:	2000      	movs	r0, #0
   82ee6:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
   82eea:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   82eee:	498f      	ldr	r1, [pc, #572]	; (8312c <_dtoa_r+0xa74>)
   82ef0:	f8cd c050 	str.w	ip, [sp, #80]	; 0x50
   82ef4:	f002 f932 	bl	8515c <__aeabi_ddiv>
   82ef8:	4632      	mov	r2, r6
   82efa:	463b      	mov	r3, r7
   82efc:	f001 fe50 	bl	84ba0 <__aeabi_dsub>
   82f00:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   82f04:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   82f08:	4639      	mov	r1, r7
   82f0a:	4630      	mov	r0, r6
   82f0c:	f002 fa96 	bl	8543c <__aeabi_d2iz>
   82f10:	4605      	mov	r5, r0
   82f12:	f001 ff93 	bl	84e3c <__aeabi_i2d>
   82f16:	4602      	mov	r2, r0
   82f18:	460b      	mov	r3, r1
   82f1a:	4630      	mov	r0, r6
   82f1c:	4639      	mov	r1, r7
   82f1e:	f001 fe3f 	bl	84ba0 <__aeabi_dsub>
   82f22:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   82f26:	3530      	adds	r5, #48	; 0x30
   82f28:	fa5f f885 	uxtb.w	r8, r5
   82f2c:	9d08      	ldr	r5, [sp, #32]
   82f2e:	4606      	mov	r6, r0
   82f30:	f885 8000 	strb.w	r8, [r5]
   82f34:	460f      	mov	r7, r1
   82f36:	3501      	adds	r5, #1
   82f38:	f002 fa58 	bl	853ec <__aeabi_dcmplt>
   82f3c:	2800      	cmp	r0, #0
   82f3e:	f040 82b9 	bne.w	834b4 <_dtoa_r+0xdfc>
   82f42:	4632      	mov	r2, r6
   82f44:	463b      	mov	r3, r7
   82f46:	2000      	movs	r0, #0
   82f48:	4976      	ldr	r1, [pc, #472]	; (83124 <_dtoa_r+0xa6c>)
   82f4a:	f001 fe29 	bl	84ba0 <__aeabi_dsub>
   82f4e:	4602      	mov	r2, r0
   82f50:	460b      	mov	r3, r1
   82f52:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   82f56:	f002 fa67 	bl	85428 <__aeabi_dcmpgt>
   82f5a:	2800      	cmp	r0, #0
   82f5c:	f040 82b3 	bne.w	834c6 <_dtoa_r+0xe0e>
   82f60:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
   82f64:	f1bc 0f01 	cmp.w	ip, #1
   82f68:	f340 813a 	ble.w	831e0 <_dtoa_r+0xb28>
   82f6c:	9b08      	ldr	r3, [sp, #32]
   82f6e:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   82f72:	f8cd b008 	str.w	fp, [sp, #8]
   82f76:	eb03 090c 	add.w	r9, r3, ip
   82f7a:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   82f7e:	46a0      	mov	r8, r4
   82f80:	e00f      	b.n	82fa2 <_dtoa_r+0x8ea>
   82f82:	4632      	mov	r2, r6
   82f84:	463b      	mov	r3, r7
   82f86:	2000      	movs	r0, #0
   82f88:	4966      	ldr	r1, [pc, #408]	; (83124 <_dtoa_r+0xa6c>)
   82f8a:	f001 fe09 	bl	84ba0 <__aeabi_dsub>
   82f8e:	4652      	mov	r2, sl
   82f90:	465b      	mov	r3, fp
   82f92:	f002 fa2b 	bl	853ec <__aeabi_dcmplt>
   82f96:	2800      	cmp	r0, #0
   82f98:	f040 8290 	bne.w	834bc <_dtoa_r+0xe04>
   82f9c:	454d      	cmp	r5, r9
   82f9e:	f000 811a 	beq.w	831d6 <_dtoa_r+0xb1e>
   82fa2:	4650      	mov	r0, sl
   82fa4:	4659      	mov	r1, fp
   82fa6:	2200      	movs	r2, #0
   82fa8:	4b61      	ldr	r3, [pc, #388]	; (83130 <_dtoa_r+0xa78>)
   82faa:	f001 ffad 	bl	84f08 <__aeabi_dmul>
   82fae:	2200      	movs	r2, #0
   82fb0:	4b5f      	ldr	r3, [pc, #380]	; (83130 <_dtoa_r+0xa78>)
   82fb2:	4682      	mov	sl, r0
   82fb4:	468b      	mov	fp, r1
   82fb6:	4630      	mov	r0, r6
   82fb8:	4639      	mov	r1, r7
   82fba:	f001 ffa5 	bl	84f08 <__aeabi_dmul>
   82fbe:	460f      	mov	r7, r1
   82fc0:	4606      	mov	r6, r0
   82fc2:	f002 fa3b 	bl	8543c <__aeabi_d2iz>
   82fc6:	4604      	mov	r4, r0
   82fc8:	f001 ff38 	bl	84e3c <__aeabi_i2d>
   82fcc:	4602      	mov	r2, r0
   82fce:	460b      	mov	r3, r1
   82fd0:	4630      	mov	r0, r6
   82fd2:	4639      	mov	r1, r7
   82fd4:	f001 fde4 	bl	84ba0 <__aeabi_dsub>
   82fd8:	3430      	adds	r4, #48	; 0x30
   82fda:	b2e4      	uxtb	r4, r4
   82fdc:	f805 4b01 	strb.w	r4, [r5], #1
   82fe0:	4652      	mov	r2, sl
   82fe2:	465b      	mov	r3, fp
   82fe4:	4606      	mov	r6, r0
   82fe6:	460f      	mov	r7, r1
   82fe8:	f002 fa00 	bl	853ec <__aeabi_dcmplt>
   82fec:	2800      	cmp	r0, #0
   82fee:	d0c8      	beq.n	82f82 <_dtoa_r+0x8ca>
   82ff0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82ff2:	f8dd b008 	ldr.w	fp, [sp, #8]
   82ff6:	4644      	mov	r4, r8
   82ff8:	9305      	str	r3, [sp, #20]
   82ffa:	e52e      	b.n	82a5a <_dtoa_r+0x3a2>
   82ffc:	2300      	movs	r3, #0
   82ffe:	930a      	str	r3, [sp, #40]	; 0x28
   83000:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83002:	9a05      	ldr	r2, [sp, #20]
   83004:	4413      	add	r3, r2
   83006:	930d      	str	r3, [sp, #52]	; 0x34
   83008:	3301      	adds	r3, #1
   8300a:	2b00      	cmp	r3, #0
   8300c:	9307      	str	r3, [sp, #28]
   8300e:	f340 810a 	ble.w	83226 <_dtoa_r+0xb6e>
   83012:	9e07      	ldr	r6, [sp, #28]
   83014:	4637      	mov	r7, r6
   83016:	e6ea      	b.n	82dee <_dtoa_r+0x736>
   83018:	2300      	movs	r3, #0
   8301a:	930a      	str	r3, [sp, #40]	; 0x28
   8301c:	e6df      	b.n	82dde <_dtoa_r+0x726>
   8301e:	9b07      	ldr	r3, [sp, #28]
   83020:	2b00      	cmp	r3, #0
   83022:	f73f ac6a 	bgt.w	828fa <_dtoa_r+0x242>
   83026:	f040 8266 	bne.w	834f6 <_dtoa_r+0xe3e>
   8302a:	4640      	mov	r0, r8
   8302c:	2200      	movs	r2, #0
   8302e:	4b41      	ldr	r3, [pc, #260]	; (83134 <_dtoa_r+0xa7c>)
   83030:	4649      	mov	r1, r9
   83032:	f001 ff69 	bl	84f08 <__aeabi_dmul>
   83036:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   8303a:	f002 f9eb 	bl	85414 <__aeabi_dcmpge>
   8303e:	f8dd 801c 	ldr.w	r8, [sp, #28]
   83042:	4646      	mov	r6, r8
   83044:	2800      	cmp	r0, #0
   83046:	f000 808b 	beq.w	83160 <_dtoa_r+0xaa8>
   8304a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8304c:	9d08      	ldr	r5, [sp, #32]
   8304e:	43db      	mvns	r3, r3
   83050:	9305      	str	r3, [sp, #20]
   83052:	4641      	mov	r1, r8
   83054:	4620      	mov	r0, r4
   83056:	f000 ff97 	bl	83f88 <_Bfree>
   8305a:	2e00      	cmp	r6, #0
   8305c:	f47f ae27 	bne.w	82cae <_dtoa_r+0x5f6>
   83060:	e4fb      	b.n	82a5a <_dtoa_r+0x3a2>
   83062:	4659      	mov	r1, fp
   83064:	4620      	mov	r0, r4
   83066:	f001 f8d3 	bl	84210 <__pow5mult>
   8306a:	4683      	mov	fp, r0
   8306c:	e552      	b.n	82b14 <_dtoa_r+0x45c>
   8306e:	9b02      	ldr	r3, [sp, #8]
   83070:	2b00      	cmp	r3, #0
   83072:	f47f ad61 	bne.w	82b38 <_dtoa_r+0x480>
   83076:	9b03      	ldr	r3, [sp, #12]
   83078:	f3c3 0313 	ubfx	r3, r3, #0, #20
   8307c:	2b00      	cmp	r3, #0
   8307e:	f47f ad8f 	bne.w	82ba0 <_dtoa_r+0x4e8>
   83082:	9b03      	ldr	r3, [sp, #12]
   83084:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
   83088:	0d3f      	lsrs	r7, r7, #20
   8308a:	053f      	lsls	r7, r7, #20
   8308c:	2f00      	cmp	r7, #0
   8308e:	f000 821e 	beq.w	834ce <_dtoa_r+0xe16>
   83092:	9b06      	ldr	r3, [sp, #24]
   83094:	f10a 0a01 	add.w	sl, sl, #1
   83098:	3301      	adds	r3, #1
   8309a:	9306      	str	r3, [sp, #24]
   8309c:	f04f 0901 	mov.w	r9, #1
   830a0:	e580      	b.n	82ba4 <_dtoa_r+0x4ec>
   830a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
   830a4:	2a00      	cmp	r2, #0
   830a6:	f000 81a9 	beq.w	833fc <_dtoa_r+0xd44>
   830aa:	f203 4333 	addw	r3, r3, #1075	; 0x433
   830ae:	9f09      	ldr	r7, [sp, #36]	; 0x24
   830b0:	9d06      	ldr	r5, [sp, #24]
   830b2:	e4fa      	b.n	82aaa <_dtoa_r+0x3f2>
   830b4:	f000 ff72 	bl	83f9c <__multadd>
   830b8:	4657      	mov	r7, sl
   830ba:	4606      	mov	r6, r0
   830bc:	4681      	mov	r9, r0
   830be:	e62c      	b.n	82d1a <_dtoa_r+0x662>
   830c0:	4601      	mov	r1, r0
   830c2:	4620      	mov	r0, r4
   830c4:	f8cd c008 	str.w	ip, [sp, #8]
   830c8:	f000 ff5e 	bl	83f88 <_Bfree>
   830cc:	2201      	movs	r2, #1
   830ce:	f8dd c008 	ldr.w	ip, [sp, #8]
   830d2:	e64f      	b.n	82d74 <_dtoa_r+0x6bc>
   830d4:	4658      	mov	r0, fp
   830d6:	4641      	mov	r1, r8
   830d8:	f001 f942 	bl	84360 <__mcmp>
   830dc:	2800      	cmp	r0, #0
   830de:	f6bf ad8c 	bge.w	82bfa <_dtoa_r+0x542>
   830e2:	9f05      	ldr	r7, [sp, #20]
   830e4:	4659      	mov	r1, fp
   830e6:	2300      	movs	r3, #0
   830e8:	4620      	mov	r0, r4
   830ea:	220a      	movs	r2, #10
   830ec:	3f01      	subs	r7, #1
   830ee:	9705      	str	r7, [sp, #20]
   830f0:	f000 ff54 	bl	83f9c <__multadd>
   830f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   830f6:	4683      	mov	fp, r0
   830f8:	2b00      	cmp	r3, #0
   830fa:	f47f adeb 	bne.w	82cd4 <_dtoa_r+0x61c>
   830fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83100:	2b00      	cmp	r3, #0
   83102:	f340 81fc 	ble.w	834fe <_dtoa_r+0xe46>
   83106:	9307      	str	r3, [sp, #28]
   83108:	e57e      	b.n	82c08 <_dtoa_r+0x550>
   8310a:	9808      	ldr	r0, [sp, #32]
   8310c:	f7ff bb08 	b.w	82720 <_dtoa_r+0x68>
   83110:	9b02      	ldr	r3, [sp, #8]
   83112:	2b00      	cmp	r3, #0
   83114:	f47f ad44 	bne.w	82ba0 <_dtoa_r+0x4e8>
   83118:	e7ad      	b.n	83076 <_dtoa_r+0x9be>
   8311a:	bf00      	nop
   8311c:	00085af8 	.word	0x00085af8
   83120:	00085bd0 	.word	0x00085bd0
   83124:	3ff00000 	.word	0x3ff00000
   83128:	401c0000 	.word	0x401c0000
   8312c:	3fe00000 	.word	0x3fe00000
   83130:	40240000 	.word	0x40240000
   83134:	40140000 	.word	0x40140000
   83138:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8313a:	2b02      	cmp	r3, #2
   8313c:	f77f ad61 	ble.w	82c02 <_dtoa_r+0x54a>
   83140:	9b07      	ldr	r3, [sp, #28]
   83142:	2b00      	cmp	r3, #0
   83144:	d181      	bne.n	8304a <_dtoa_r+0x992>
   83146:	4641      	mov	r1, r8
   83148:	2205      	movs	r2, #5
   8314a:	4620      	mov	r0, r4
   8314c:	f000 ff26 	bl	83f9c <__multadd>
   83150:	4680      	mov	r8, r0
   83152:	4658      	mov	r0, fp
   83154:	4641      	mov	r1, r8
   83156:	f001 f903 	bl	84360 <__mcmp>
   8315a:	2800      	cmp	r0, #0
   8315c:	f77f af75 	ble.w	8304a <_dtoa_r+0x992>
   83160:	9a05      	ldr	r2, [sp, #20]
   83162:	9908      	ldr	r1, [sp, #32]
   83164:	2331      	movs	r3, #49	; 0x31
   83166:	3201      	adds	r2, #1
   83168:	9205      	str	r2, [sp, #20]
   8316a:	700b      	strb	r3, [r1, #0]
   8316c:	1c4d      	adds	r5, r1, #1
   8316e:	e770      	b.n	83052 <_dtoa_r+0x99a>
   83170:	9a05      	ldr	r2, [sp, #20]
   83172:	2331      	movs	r3, #49	; 0x31
   83174:	3201      	adds	r2, #1
   83176:	9205      	str	r2, [sp, #20]
   83178:	9a08      	ldr	r2, [sp, #32]
   8317a:	7013      	strb	r3, [r2, #0]
   8317c:	e587      	b.n	82c8e <_dtoa_r+0x5d6>
   8317e:	f8dd b008 	ldr.w	fp, [sp, #8]
   83182:	9c06      	ldr	r4, [sp, #24]
   83184:	e469      	b.n	82a5a <_dtoa_r+0x3a2>
   83186:	4640      	mov	r0, r8
   83188:	f001 fe58 	bl	84e3c <__aeabi_i2d>
   8318c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83190:	f001 feba 	bl	84f08 <__aeabi_dmul>
   83194:	2200      	movs	r2, #0
   83196:	4bbe      	ldr	r3, [pc, #760]	; (83490 <_dtoa_r+0xdd8>)
   83198:	f001 fd04 	bl	84ba4 <__adddf3>
   8319c:	4606      	mov	r6, r0
   8319e:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   831a2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   831a6:	2200      	movs	r2, #0
   831a8:	4bba      	ldr	r3, [pc, #744]	; (83494 <_dtoa_r+0xddc>)
   831aa:	f001 fcf9 	bl	84ba0 <__aeabi_dsub>
   831ae:	4632      	mov	r2, r6
   831b0:	463b      	mov	r3, r7
   831b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   831b6:	f002 f937 	bl	85428 <__aeabi_dcmpgt>
   831ba:	4680      	mov	r8, r0
   831bc:	2800      	cmp	r0, #0
   831be:	f040 80b2 	bne.w	83326 <_dtoa_r+0xc6e>
   831c2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   831c6:	4632      	mov	r2, r6
   831c8:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   831cc:	f002 f90e 	bl	853ec <__aeabi_dcmplt>
   831d0:	b130      	cbz	r0, 831e0 <_dtoa_r+0xb28>
   831d2:	4646      	mov	r6, r8
   831d4:	e739      	b.n	8304a <_dtoa_r+0x992>
   831d6:	4644      	mov	r4, r8
   831d8:	f8dd a050 	ldr.w	sl, [sp, #80]	; 0x50
   831dc:	f8dd b008 	ldr.w	fp, [sp, #8]
   831e0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   831e4:	e9cd 2302 	strd	r2, r3, [sp, #8]
   831e8:	f7ff bb76 	b.w	828d8 <_dtoa_r+0x220>
   831ec:	4659      	mov	r1, fp
   831ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
   831f0:	4620      	mov	r0, r4
   831f2:	f001 f80d 	bl	84210 <__pow5mult>
   831f6:	4683      	mov	fp, r0
   831f8:	e48c      	b.n	82b14 <_dtoa_r+0x45c>
   831fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   831fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   831fe:	1afb      	subs	r3, r7, r3
   83200:	441a      	add	r2, r3
   83202:	9709      	str	r7, [sp, #36]	; 0x24
   83204:	920b      	str	r2, [sp, #44]	; 0x2c
   83206:	2700      	movs	r7, #0
   83208:	e449      	b.n	82a9e <_dtoa_r+0x3e6>
   8320a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   8320e:	f04f 0802 	mov.w	r8, #2
   83212:	e9cd 2302 	strd	r2, r3, [sp, #8]
   83216:	e624      	b.n	82e62 <_dtoa_r+0x7aa>
   83218:	2601      	movs	r6, #1
   8321a:	9623      	str	r6, [sp, #140]	; 0x8c
   8321c:	960d      	str	r6, [sp, #52]	; 0x34
   8321e:	9607      	str	r6, [sp, #28]
   83220:	2100      	movs	r1, #0
   83222:	6461      	str	r1, [r4, #68]	; 0x44
   83224:	e5f2      	b.n	82e0c <_dtoa_r+0x754>
   83226:	461e      	mov	r6, r3
   83228:	e7fa      	b.n	83220 <_dtoa_r+0xb68>
   8322a:	2a00      	cmp	r2, #0
   8322c:	dd15      	ble.n	8325a <_dtoa_r+0xba2>
   8322e:	4659      	mov	r1, fp
   83230:	2201      	movs	r2, #1
   83232:	4620      	mov	r0, r4
   83234:	f8cd c008 	str.w	ip, [sp, #8]
   83238:	f001 f83a 	bl	842b0 <__lshift>
   8323c:	4641      	mov	r1, r8
   8323e:	4683      	mov	fp, r0
   83240:	f001 f88e 	bl	84360 <__mcmp>
   83244:	2800      	cmp	r0, #0
   83246:	f8dd c008 	ldr.w	ip, [sp, #8]
   8324a:	f340 814d 	ble.w	834e8 <_dtoa_r+0xe30>
   8324e:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   83252:	f000 8109 	beq.w	83468 <_dtoa_r+0xdb0>
   83256:	f10c 0c01 	add.w	ip, ip, #1
   8325a:	46b2      	mov	sl, r6
   8325c:	f887 c000 	strb.w	ip, [r7]
   83260:	1c7d      	adds	r5, r7, #1
   83262:	464e      	mov	r6, r9
   83264:	e513      	b.n	82c8e <_dtoa_r+0x5d6>
   83266:	d104      	bne.n	83272 <_dtoa_r+0xbba>
   83268:	f01c 0f01 	tst.w	ip, #1
   8326c:	d001      	beq.n	83272 <_dtoa_r+0xbba>
   8326e:	e4fe      	b.n	82c6e <_dtoa_r+0x5b6>
   83270:	4615      	mov	r5, r2
   83272:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83276:	1e6a      	subs	r2, r5, #1
   83278:	2b30      	cmp	r3, #48	; 0x30
   8327a:	d0f9      	beq.n	83270 <_dtoa_r+0xbb8>
   8327c:	e507      	b.n	82c8e <_dtoa_r+0x5d6>
   8327e:	9b05      	ldr	r3, [sp, #20]
   83280:	425d      	negs	r5, r3
   83282:	2d00      	cmp	r5, #0
   83284:	f000 80c1 	beq.w	8340a <_dtoa_r+0xd52>
   83288:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   8328c:	4b82      	ldr	r3, [pc, #520]	; (83498 <_dtoa_r+0xde0>)
   8328e:	f005 020f 	and.w	r2, r5, #15
   83292:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83296:	e9d3 2300 	ldrd	r2, r3, [r3]
   8329a:	f001 fe35 	bl	84f08 <__aeabi_dmul>
   8329e:	112d      	asrs	r5, r5, #4
   832a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
   832a4:	f000 8130 	beq.w	83508 <_dtoa_r+0xe50>
   832a8:	4e7c      	ldr	r6, [pc, #496]	; (8349c <_dtoa_r+0xde4>)
   832aa:	f04f 0802 	mov.w	r8, #2
   832ae:	07eb      	lsls	r3, r5, #31
   832b0:	d505      	bpl.n	832be <_dtoa_r+0xc06>
   832b2:	e9d6 2300 	ldrd	r2, r3, [r6]
   832b6:	f001 fe27 	bl	84f08 <__aeabi_dmul>
   832ba:	f108 0801 	add.w	r8, r8, #1
   832be:	106d      	asrs	r5, r5, #1
   832c0:	f106 0608 	add.w	r6, r6, #8
   832c4:	d1f3      	bne.n	832ae <_dtoa_r+0xbf6>
   832c6:	e9cd 0102 	strd	r0, r1, [sp, #8]
   832ca:	e5e5      	b.n	82e98 <_dtoa_r+0x7e0>
   832cc:	9a05      	ldr	r2, [sp, #20]
   832ce:	2330      	movs	r3, #48	; 0x30
   832d0:	3201      	adds	r2, #1
   832d2:	9205      	str	r2, [sp, #20]
   832d4:	9a08      	ldr	r2, [sp, #32]
   832d6:	7013      	strb	r3, [r2, #0]
   832d8:	2331      	movs	r3, #49	; 0x31
   832da:	7013      	strb	r3, [r2, #0]
   832dc:	f7ff bbbd 	b.w	82a5a <_dtoa_r+0x3a2>
   832e0:	6871      	ldr	r1, [r6, #4]
   832e2:	4620      	mov	r0, r4
   832e4:	f000 fe28 	bl	83f38 <_Balloc>
   832e8:	4605      	mov	r5, r0
   832ea:	6933      	ldr	r3, [r6, #16]
   832ec:	f106 010c 	add.w	r1, r6, #12
   832f0:	1c9a      	adds	r2, r3, #2
   832f2:	0092      	lsls	r2, r2, #2
   832f4:	300c      	adds	r0, #12
   832f6:	f000 fd41 	bl	83d7c <memcpy>
   832fa:	4620      	mov	r0, r4
   832fc:	4629      	mov	r1, r5
   832fe:	2201      	movs	r2, #1
   83300:	f000 ffd6 	bl	842b0 <__lshift>
   83304:	4681      	mov	r9, r0
   83306:	e4fe      	b.n	82d06 <_dtoa_r+0x64e>
   83308:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   8330c:	f000 80ac 	beq.w	83468 <_dtoa_r+0xdb0>
   83310:	f10c 0c01 	add.w	ip, ip, #1
   83314:	46b2      	mov	sl, r6
   83316:	f887 c000 	strb.w	ip, [r7]
   8331a:	1c7d      	adds	r5, r7, #1
   8331c:	464e      	mov	r6, r9
   8331e:	e4b6      	b.n	82c8e <_dtoa_r+0x5d6>
   83320:	46b2      	mov	sl, r6
   83322:	464e      	mov	r6, r9
   83324:	e493      	b.n	82c4e <_dtoa_r+0x596>
   83326:	f04f 0800 	mov.w	r8, #0
   8332a:	4646      	mov	r6, r8
   8332c:	e718      	b.n	83160 <_dtoa_r+0xaa8>
   8332e:	495a      	ldr	r1, [pc, #360]	; (83498 <_dtoa_r+0xde0>)
   83330:	f10c 33ff 	add.w	r3, ip, #4294967295
   83334:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   83338:	4632      	mov	r2, r6
   8333a:	e9d1 0100 	ldrd	r0, r1, [r1]
   8333e:	9314      	str	r3, [sp, #80]	; 0x50
   83340:	463b      	mov	r3, r7
   83342:	f8cd c054 	str.w	ip, [sp, #84]	; 0x54
   83346:	f001 fddf 	bl	84f08 <__aeabi_dmul>
   8334a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   8334e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   83352:	4639      	mov	r1, r7
   83354:	4630      	mov	r0, r6
   83356:	f002 f871 	bl	8543c <__aeabi_d2iz>
   8335a:	4605      	mov	r5, r0
   8335c:	f001 fd6e 	bl	84e3c <__aeabi_i2d>
   83360:	4602      	mov	r2, r0
   83362:	460b      	mov	r3, r1
   83364:	4630      	mov	r0, r6
   83366:	4639      	mov	r1, r7
   83368:	f001 fc1a 	bl	84ba0 <__aeabi_dsub>
   8336c:	f8dd c054 	ldr.w	ip, [sp, #84]	; 0x54
   83370:	9a08      	ldr	r2, [sp, #32]
   83372:	3530      	adds	r5, #48	; 0x30
   83374:	f1bc 0f01 	cmp.w	ip, #1
   83378:	7015      	strb	r5, [r2, #0]
   8337a:	4606      	mov	r6, r0
   8337c:	460f      	mov	r7, r1
   8337e:	f102 0501 	add.w	r5, r2, #1
   83382:	d023      	beq.n	833cc <_dtoa_r+0xd14>
   83384:	9b08      	ldr	r3, [sp, #32]
   83386:	f8cd a008 	str.w	sl, [sp, #8]
   8338a:	4463      	add	r3, ip
   8338c:	465e      	mov	r6, fp
   8338e:	469a      	mov	sl, r3
   83390:	46ab      	mov	fp, r5
   83392:	2200      	movs	r2, #0
   83394:	4b42      	ldr	r3, [pc, #264]	; (834a0 <_dtoa_r+0xde8>)
   83396:	f001 fdb7 	bl	84f08 <__aeabi_dmul>
   8339a:	4689      	mov	r9, r1
   8339c:	4680      	mov	r8, r0
   8339e:	f002 f84d 	bl	8543c <__aeabi_d2iz>
   833a2:	4607      	mov	r7, r0
   833a4:	f001 fd4a 	bl	84e3c <__aeabi_i2d>
   833a8:	3730      	adds	r7, #48	; 0x30
   833aa:	4602      	mov	r2, r0
   833ac:	460b      	mov	r3, r1
   833ae:	4640      	mov	r0, r8
   833b0:	4649      	mov	r1, r9
   833b2:	f001 fbf5 	bl	84ba0 <__aeabi_dsub>
   833b6:	f80b 7b01 	strb.w	r7, [fp], #1
   833ba:	45d3      	cmp	fp, sl
   833bc:	d1e9      	bne.n	83392 <_dtoa_r+0xcda>
   833be:	46b3      	mov	fp, r6
   833c0:	460f      	mov	r7, r1
   833c2:	4606      	mov	r6, r0
   833c4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   833c6:	f8dd a008 	ldr.w	sl, [sp, #8]
   833ca:	441d      	add	r5, r3
   833cc:	2200      	movs	r2, #0
   833ce:	4b35      	ldr	r3, [pc, #212]	; (834a4 <_dtoa_r+0xdec>)
   833d0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   833d4:	f001 fbe6 	bl	84ba4 <__adddf3>
   833d8:	4632      	mov	r2, r6
   833da:	463b      	mov	r3, r7
   833dc:	f002 f806 	bl	853ec <__aeabi_dcmplt>
   833e0:	2800      	cmp	r0, #0
   833e2:	d048      	beq.n	83476 <_dtoa_r+0xdbe>
   833e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   833e6:	9305      	str	r3, [sp, #20]
   833e8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   833ec:	f7ff bb23 	b.w	82a36 <_dtoa_r+0x37e>
   833f0:	9b06      	ldr	r3, [sp, #24]
   833f2:	9a07      	ldr	r2, [sp, #28]
   833f4:	1a9d      	subs	r5, r3, r2
   833f6:	2300      	movs	r3, #0
   833f8:	f7ff bb57 	b.w	82aaa <_dtoa_r+0x3f2>
   833fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
   833fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
   83400:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   83404:	9d06      	ldr	r5, [sp, #24]
   83406:	f7ff bb50 	b.w	82aaa <_dtoa_r+0x3f2>
   8340a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   8340e:	f04f 0802 	mov.w	r8, #2
   83412:	e9cd 2302 	strd	r2, r3, [sp, #8]
   83416:	e53f      	b.n	82e98 <_dtoa_r+0x7e0>
   83418:	9b07      	ldr	r3, [sp, #28]
   8341a:	2b00      	cmp	r3, #0
   8341c:	f43f aeb3 	beq.w	83186 <_dtoa_r+0xace>
   83420:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   83422:	2d00      	cmp	r5, #0
   83424:	f77f aedc 	ble.w	831e0 <_dtoa_r+0xb28>
   83428:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8342c:	2200      	movs	r2, #0
   8342e:	4b1c      	ldr	r3, [pc, #112]	; (834a0 <_dtoa_r+0xde8>)
   83430:	f001 fd6a 	bl	84f08 <__aeabi_dmul>
   83434:	4606      	mov	r6, r0
   83436:	460f      	mov	r7, r1
   83438:	f108 0001 	add.w	r0, r8, #1
   8343c:	e9cd 6702 	strd	r6, r7, [sp, #8]
   83440:	f001 fcfc 	bl	84e3c <__aeabi_i2d>
   83444:	4602      	mov	r2, r0
   83446:	460b      	mov	r3, r1
   83448:	4630      	mov	r0, r6
   8344a:	4639      	mov	r1, r7
   8344c:	f001 fd5c 	bl	84f08 <__aeabi_dmul>
   83450:	4b0f      	ldr	r3, [pc, #60]	; (83490 <_dtoa_r+0xdd8>)
   83452:	2200      	movs	r2, #0
   83454:	f001 fba6 	bl	84ba4 <__adddf3>
   83458:	9b05      	ldr	r3, [sp, #20]
   8345a:	4606      	mov	r6, r0
   8345c:	3b01      	subs	r3, #1
   8345e:	9313      	str	r3, [sp, #76]	; 0x4c
   83460:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   83464:	46ac      	mov	ip, r5
   83466:	e538      	b.n	82eda <_dtoa_r+0x822>
   83468:	2239      	movs	r2, #57	; 0x39
   8346a:	46b2      	mov	sl, r6
   8346c:	703a      	strb	r2, [r7, #0]
   8346e:	464e      	mov	r6, r9
   83470:	1c7d      	adds	r5, r7, #1
   83472:	f7ff bbfe 	b.w	82c72 <_dtoa_r+0x5ba>
   83476:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   8347a:	2000      	movs	r0, #0
   8347c:	4909      	ldr	r1, [pc, #36]	; (834a4 <_dtoa_r+0xdec>)
   8347e:	f001 fb8f 	bl	84ba0 <__aeabi_dsub>
   83482:	4632      	mov	r2, r6
   83484:	463b      	mov	r3, r7
   83486:	f001 ffcf 	bl	85428 <__aeabi_dcmpgt>
   8348a:	b970      	cbnz	r0, 834aa <_dtoa_r+0xdf2>
   8348c:	e6a8      	b.n	831e0 <_dtoa_r+0xb28>
   8348e:	bf00      	nop
   83490:	401c0000 	.word	0x401c0000
   83494:	40140000 	.word	0x40140000
   83498:	00085af8 	.word	0x00085af8
   8349c:	00085bd0 	.word	0x00085bd0
   834a0:	40240000 	.word	0x40240000
   834a4:	3fe00000 	.word	0x3fe00000
   834a8:	4615      	mov	r5, r2
   834aa:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   834ae:	1e6a      	subs	r2, r5, #1
   834b0:	2b30      	cmp	r3, #48	; 0x30
   834b2:	d0f9      	beq.n	834a8 <_dtoa_r+0xdf0>
   834b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   834b6:	9305      	str	r3, [sp, #20]
   834b8:	f7ff bacf 	b.w	82a5a <_dtoa_r+0x3a2>
   834bc:	4643      	mov	r3, r8
   834be:	46a0      	mov	r8, r4
   834c0:	461c      	mov	r4, r3
   834c2:	f8dd b008 	ldr.w	fp, [sp, #8]
   834c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   834c8:	9305      	str	r3, [sp, #20]
   834ca:	f7ff bab4 	b.w	82a36 <_dtoa_r+0x37e>
   834ce:	46b9      	mov	r9, r7
   834d0:	f7ff bb68 	b.w	82ba4 <_dtoa_r+0x4ec>
   834d4:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   834d8:	d0c6      	beq.n	83468 <_dtoa_r+0xdb0>
   834da:	f1ba 0f00 	cmp.w	sl, #0
   834de:	f77f aebc 	ble.w	8325a <_dtoa_r+0xba2>
   834e2:	f105 0c31 	add.w	ip, r5, #49	; 0x31
   834e6:	e6b8      	b.n	8325a <_dtoa_r+0xba2>
   834e8:	f47f aeb7 	bne.w	8325a <_dtoa_r+0xba2>
   834ec:	f01c 0f01 	tst.w	ip, #1
   834f0:	f43f aeb3 	beq.w	8325a <_dtoa_r+0xba2>
   834f4:	e6ab      	b.n	8324e <_dtoa_r+0xb96>
   834f6:	f04f 0800 	mov.w	r8, #0
   834fa:	4646      	mov	r6, r8
   834fc:	e5a5      	b.n	8304a <_dtoa_r+0x992>
   834fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
   83500:	2b02      	cmp	r3, #2
   83502:	dc04      	bgt.n	8350e <_dtoa_r+0xe56>
   83504:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83506:	e5fe      	b.n	83106 <_dtoa_r+0xa4e>
   83508:	f04f 0802 	mov.w	r8, #2
   8350c:	e4c4      	b.n	82e98 <_dtoa_r+0x7e0>
   8350e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83510:	9307      	str	r3, [sp, #28]
   83512:	e615      	b.n	83140 <_dtoa_r+0xa88>
   83514:	9b22      	ldr	r3, [sp, #136]	; 0x88
   83516:	2b02      	cmp	r3, #2
   83518:	dcf9      	bgt.n	8350e <_dtoa_r+0xe56>
   8351a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8351c:	f7ff bbe5 	b.w	82cea <_dtoa_r+0x632>
   83520:	2500      	movs	r5, #0
   83522:	6465      	str	r5, [r4, #68]	; 0x44
   83524:	4629      	mov	r1, r5
   83526:	4620      	mov	r0, r4
   83528:	f000 fd06 	bl	83f38 <_Balloc>
   8352c:	f04f 33ff 	mov.w	r3, #4294967295
   83530:	9307      	str	r3, [sp, #28]
   83532:	930d      	str	r3, [sp, #52]	; 0x34
   83534:	2301      	movs	r3, #1
   83536:	9008      	str	r0, [sp, #32]
   83538:	9523      	str	r5, [sp, #140]	; 0x8c
   8353a:	6420      	str	r0, [r4, #64]	; 0x40
   8353c:	930a      	str	r3, [sp, #40]	; 0x28
   8353e:	f7ff b9cb 	b.w	828d8 <_dtoa_r+0x220>
   83542:	f43f ab44 	beq.w	82bce <_dtoa_r+0x516>
   83546:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   8354a:	f7ff bb3b 	b.w	82bc4 <_dtoa_r+0x50c>
   8354e:	2301      	movs	r3, #1
   83550:	930a      	str	r3, [sp, #40]	; 0x28
   83552:	e555      	b.n	83000 <_dtoa_r+0x948>
   83554:	2501      	movs	r5, #1
   83556:	f7ff b989 	b.w	8286c <_dtoa_r+0x1b4>
   8355a:	bf00      	nop

0008355c <__libc_fini_array>:
   8355c:	b538      	push	{r3, r4, r5, lr}
   8355e:	4b08      	ldr	r3, [pc, #32]	; (83580 <__libc_fini_array+0x24>)
   83560:	4d08      	ldr	r5, [pc, #32]	; (83584 <__libc_fini_array+0x28>)
   83562:	1aed      	subs	r5, r5, r3
   83564:	10ac      	asrs	r4, r5, #2
   83566:	bf18      	it	ne
   83568:	18ed      	addne	r5, r5, r3
   8356a:	d005      	beq.n	83578 <__libc_fini_array+0x1c>
   8356c:	3c01      	subs	r4, #1
   8356e:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   83572:	4798      	blx	r3
   83574:	2c00      	cmp	r4, #0
   83576:	d1f9      	bne.n	8356c <__libc_fini_array+0x10>
   83578:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8357c:	f002 bb46 	b.w	85c0c <_fini>
   83580:	00085c18 	.word	0x00085c18
   83584:	00085c1c 	.word	0x00085c1c

00083588 <_malloc_trim_r>:
   83588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8358a:	460c      	mov	r4, r1
   8358c:	4f22      	ldr	r7, [pc, #136]	; (83618 <_malloc_trim_r+0x90>)
   8358e:	4606      	mov	r6, r0
   83590:	f000 fcce 	bl	83f30 <__malloc_lock>
   83594:	68bb      	ldr	r3, [r7, #8]
   83596:	685d      	ldr	r5, [r3, #4]
   83598:	f025 0503 	bic.w	r5, r5, #3
   8359c:	1b29      	subs	r1, r5, r4
   8359e:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   835a2:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   835a6:	f021 010f 	bic.w	r1, r1, #15
   835aa:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   835ae:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   835b2:	db07      	blt.n	835c4 <_malloc_trim_r+0x3c>
   835b4:	4630      	mov	r0, r6
   835b6:	2100      	movs	r1, #0
   835b8:	f001 f9d8 	bl	8496c <_sbrk_r>
   835bc:	68bb      	ldr	r3, [r7, #8]
   835be:	442b      	add	r3, r5
   835c0:	4298      	cmp	r0, r3
   835c2:	d004      	beq.n	835ce <_malloc_trim_r+0x46>
   835c4:	4630      	mov	r0, r6
   835c6:	f000 fcb5 	bl	83f34 <__malloc_unlock>
   835ca:	2000      	movs	r0, #0
   835cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   835ce:	4630      	mov	r0, r6
   835d0:	4261      	negs	r1, r4
   835d2:	f001 f9cb 	bl	8496c <_sbrk_r>
   835d6:	3001      	adds	r0, #1
   835d8:	d00d      	beq.n	835f6 <_malloc_trim_r+0x6e>
   835da:	4b10      	ldr	r3, [pc, #64]	; (8361c <_malloc_trim_r+0x94>)
   835dc:	68ba      	ldr	r2, [r7, #8]
   835de:	6819      	ldr	r1, [r3, #0]
   835e0:	1b2d      	subs	r5, r5, r4
   835e2:	f045 0501 	orr.w	r5, r5, #1
   835e6:	4630      	mov	r0, r6
   835e8:	1b09      	subs	r1, r1, r4
   835ea:	6055      	str	r5, [r2, #4]
   835ec:	6019      	str	r1, [r3, #0]
   835ee:	f000 fca1 	bl	83f34 <__malloc_unlock>
   835f2:	2001      	movs	r0, #1
   835f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   835f6:	4630      	mov	r0, r6
   835f8:	2100      	movs	r1, #0
   835fa:	f001 f9b7 	bl	8496c <_sbrk_r>
   835fe:	68ba      	ldr	r2, [r7, #8]
   83600:	1a83      	subs	r3, r0, r2
   83602:	2b0f      	cmp	r3, #15
   83604:	ddde      	ble.n	835c4 <_malloc_trim_r+0x3c>
   83606:	4c06      	ldr	r4, [pc, #24]	; (83620 <_malloc_trim_r+0x98>)
   83608:	4904      	ldr	r1, [pc, #16]	; (8361c <_malloc_trim_r+0x94>)
   8360a:	6824      	ldr	r4, [r4, #0]
   8360c:	f043 0301 	orr.w	r3, r3, #1
   83610:	1b00      	subs	r0, r0, r4
   83612:	6053      	str	r3, [r2, #4]
   83614:	6008      	str	r0, [r1, #0]
   83616:	e7d5      	b.n	835c4 <_malloc_trim_r+0x3c>
   83618:	200705dc 	.word	0x200705dc
   8361c:	20070ab0 	.word	0x20070ab0
   83620:	200709e8 	.word	0x200709e8

00083624 <_free_r>:
   83624:	2900      	cmp	r1, #0
   83626:	d04e      	beq.n	836c6 <_free_r+0xa2>
   83628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8362c:	460c      	mov	r4, r1
   8362e:	4680      	mov	r8, r0
   83630:	f000 fc7e 	bl	83f30 <__malloc_lock>
   83634:	f854 7c04 	ldr.w	r7, [r4, #-4]
   83638:	4962      	ldr	r1, [pc, #392]	; (837c4 <_free_r+0x1a0>)
   8363a:	f1a4 0508 	sub.w	r5, r4, #8
   8363e:	f027 0201 	bic.w	r2, r7, #1
   83642:	18ab      	adds	r3, r5, r2
   83644:	688e      	ldr	r6, [r1, #8]
   83646:	6858      	ldr	r0, [r3, #4]
   83648:	429e      	cmp	r6, r3
   8364a:	f020 0003 	bic.w	r0, r0, #3
   8364e:	d05a      	beq.n	83706 <_free_r+0xe2>
   83650:	07fe      	lsls	r6, r7, #31
   83652:	6058      	str	r0, [r3, #4]
   83654:	d40b      	bmi.n	8366e <_free_r+0x4a>
   83656:	f854 7c08 	ldr.w	r7, [r4, #-8]
   8365a:	f101 0e08 	add.w	lr, r1, #8
   8365e:	1bed      	subs	r5, r5, r7
   83660:	68ac      	ldr	r4, [r5, #8]
   83662:	443a      	add	r2, r7
   83664:	4574      	cmp	r4, lr
   83666:	d067      	beq.n	83738 <_free_r+0x114>
   83668:	68ef      	ldr	r7, [r5, #12]
   8366a:	60e7      	str	r7, [r4, #12]
   8366c:	60bc      	str	r4, [r7, #8]
   8366e:	181c      	adds	r4, r3, r0
   83670:	6864      	ldr	r4, [r4, #4]
   83672:	07e4      	lsls	r4, r4, #31
   83674:	d40c      	bmi.n	83690 <_free_r+0x6c>
   83676:	4f54      	ldr	r7, [pc, #336]	; (837c8 <_free_r+0x1a4>)
   83678:	689c      	ldr	r4, [r3, #8]
   8367a:	4402      	add	r2, r0
   8367c:	42bc      	cmp	r4, r7
   8367e:	d07c      	beq.n	8377a <_free_r+0x156>
   83680:	68d8      	ldr	r0, [r3, #12]
   83682:	f042 0301 	orr.w	r3, r2, #1
   83686:	60e0      	str	r0, [r4, #12]
   83688:	6084      	str	r4, [r0, #8]
   8368a:	606b      	str	r3, [r5, #4]
   8368c:	50aa      	str	r2, [r5, r2]
   8368e:	e003      	b.n	83698 <_free_r+0x74>
   83690:	f042 0301 	orr.w	r3, r2, #1
   83694:	606b      	str	r3, [r5, #4]
   83696:	50aa      	str	r2, [r5, r2]
   83698:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   8369c:	d214      	bcs.n	836c8 <_free_r+0xa4>
   8369e:	08d2      	lsrs	r2, r2, #3
   836a0:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
   836a4:	2401      	movs	r4, #1
   836a6:	6848      	ldr	r0, [r1, #4]
   836a8:	1092      	asrs	r2, r2, #2
   836aa:	fa04 f202 	lsl.w	r2, r4, r2
   836ae:	689c      	ldr	r4, [r3, #8]
   836b0:	4310      	orrs	r0, r2
   836b2:	60ac      	str	r4, [r5, #8]
   836b4:	60eb      	str	r3, [r5, #12]
   836b6:	6048      	str	r0, [r1, #4]
   836b8:	609d      	str	r5, [r3, #8]
   836ba:	60e5      	str	r5, [r4, #12]
   836bc:	4640      	mov	r0, r8
   836be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   836c2:	f000 bc37 	b.w	83f34 <__malloc_unlock>
   836c6:	4770      	bx	lr
   836c8:	0a53      	lsrs	r3, r2, #9
   836ca:	2b04      	cmp	r3, #4
   836cc:	d847      	bhi.n	8375e <_free_r+0x13a>
   836ce:	0993      	lsrs	r3, r2, #6
   836d0:	f103 0438 	add.w	r4, r3, #56	; 0x38
   836d4:	0060      	lsls	r0, r4, #1
   836d6:	eb01 0080 	add.w	r0, r1, r0, lsl #2
   836da:	6883      	ldr	r3, [r0, #8]
   836dc:	4939      	ldr	r1, [pc, #228]	; (837c4 <_free_r+0x1a0>)
   836de:	4283      	cmp	r3, r0
   836e0:	d043      	beq.n	8376a <_free_r+0x146>
   836e2:	6859      	ldr	r1, [r3, #4]
   836e4:	f021 0103 	bic.w	r1, r1, #3
   836e8:	4291      	cmp	r1, r2
   836ea:	d902      	bls.n	836f2 <_free_r+0xce>
   836ec:	689b      	ldr	r3, [r3, #8]
   836ee:	4298      	cmp	r0, r3
   836f0:	d1f7      	bne.n	836e2 <_free_r+0xbe>
   836f2:	68da      	ldr	r2, [r3, #12]
   836f4:	60ea      	str	r2, [r5, #12]
   836f6:	60ab      	str	r3, [r5, #8]
   836f8:	4640      	mov	r0, r8
   836fa:	6095      	str	r5, [r2, #8]
   836fc:	60dd      	str	r5, [r3, #12]
   836fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83702:	f000 bc17 	b.w	83f34 <__malloc_unlock>
   83706:	07ff      	lsls	r7, r7, #31
   83708:	4402      	add	r2, r0
   8370a:	d407      	bmi.n	8371c <_free_r+0xf8>
   8370c:	f854 4c08 	ldr.w	r4, [r4, #-8]
   83710:	1b2d      	subs	r5, r5, r4
   83712:	68eb      	ldr	r3, [r5, #12]
   83714:	68a8      	ldr	r0, [r5, #8]
   83716:	4422      	add	r2, r4
   83718:	60c3      	str	r3, [r0, #12]
   8371a:	6098      	str	r0, [r3, #8]
   8371c:	4b2b      	ldr	r3, [pc, #172]	; (837cc <_free_r+0x1a8>)
   8371e:	f042 0001 	orr.w	r0, r2, #1
   83722:	681b      	ldr	r3, [r3, #0]
   83724:	6068      	str	r0, [r5, #4]
   83726:	429a      	cmp	r2, r3
   83728:	608d      	str	r5, [r1, #8]
   8372a:	d3c7      	bcc.n	836bc <_free_r+0x98>
   8372c:	4b28      	ldr	r3, [pc, #160]	; (837d0 <_free_r+0x1ac>)
   8372e:	4640      	mov	r0, r8
   83730:	6819      	ldr	r1, [r3, #0]
   83732:	f7ff ff29 	bl	83588 <_malloc_trim_r>
   83736:	e7c1      	b.n	836bc <_free_r+0x98>
   83738:	1819      	adds	r1, r3, r0
   8373a:	6849      	ldr	r1, [r1, #4]
   8373c:	07c9      	lsls	r1, r1, #31
   8373e:	d409      	bmi.n	83754 <_free_r+0x130>
   83740:	68d9      	ldr	r1, [r3, #12]
   83742:	4402      	add	r2, r0
   83744:	689b      	ldr	r3, [r3, #8]
   83746:	f042 0001 	orr.w	r0, r2, #1
   8374a:	60d9      	str	r1, [r3, #12]
   8374c:	608b      	str	r3, [r1, #8]
   8374e:	6068      	str	r0, [r5, #4]
   83750:	50aa      	str	r2, [r5, r2]
   83752:	e7b3      	b.n	836bc <_free_r+0x98>
   83754:	f042 0301 	orr.w	r3, r2, #1
   83758:	606b      	str	r3, [r5, #4]
   8375a:	50aa      	str	r2, [r5, r2]
   8375c:	e7ae      	b.n	836bc <_free_r+0x98>
   8375e:	2b14      	cmp	r3, #20
   83760:	d814      	bhi.n	8378c <_free_r+0x168>
   83762:	f103 045b 	add.w	r4, r3, #91	; 0x5b
   83766:	0060      	lsls	r0, r4, #1
   83768:	e7b5      	b.n	836d6 <_free_r+0xb2>
   8376a:	684a      	ldr	r2, [r1, #4]
   8376c:	10a4      	asrs	r4, r4, #2
   8376e:	2001      	movs	r0, #1
   83770:	40a0      	lsls	r0, r4
   83772:	4302      	orrs	r2, r0
   83774:	604a      	str	r2, [r1, #4]
   83776:	461a      	mov	r2, r3
   83778:	e7bc      	b.n	836f4 <_free_r+0xd0>
   8377a:	f042 0301 	orr.w	r3, r2, #1
   8377e:	614d      	str	r5, [r1, #20]
   83780:	610d      	str	r5, [r1, #16]
   83782:	60ec      	str	r4, [r5, #12]
   83784:	60ac      	str	r4, [r5, #8]
   83786:	606b      	str	r3, [r5, #4]
   83788:	50aa      	str	r2, [r5, r2]
   8378a:	e797      	b.n	836bc <_free_r+0x98>
   8378c:	2b54      	cmp	r3, #84	; 0x54
   8378e:	d804      	bhi.n	8379a <_free_r+0x176>
   83790:	0b13      	lsrs	r3, r2, #12
   83792:	f103 046e 	add.w	r4, r3, #110	; 0x6e
   83796:	0060      	lsls	r0, r4, #1
   83798:	e79d      	b.n	836d6 <_free_r+0xb2>
   8379a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   8379e:	d804      	bhi.n	837aa <_free_r+0x186>
   837a0:	0bd3      	lsrs	r3, r2, #15
   837a2:	f103 0477 	add.w	r4, r3, #119	; 0x77
   837a6:	0060      	lsls	r0, r4, #1
   837a8:	e795      	b.n	836d6 <_free_r+0xb2>
   837aa:	f240 5054 	movw	r0, #1364	; 0x554
   837ae:	4283      	cmp	r3, r0
   837b0:	d804      	bhi.n	837bc <_free_r+0x198>
   837b2:	0c93      	lsrs	r3, r2, #18
   837b4:	f103 047c 	add.w	r4, r3, #124	; 0x7c
   837b8:	0060      	lsls	r0, r4, #1
   837ba:	e78c      	b.n	836d6 <_free_r+0xb2>
   837bc:	20fc      	movs	r0, #252	; 0xfc
   837be:	247e      	movs	r4, #126	; 0x7e
   837c0:	e789      	b.n	836d6 <_free_r+0xb2>
   837c2:	bf00      	nop
   837c4:	200705dc 	.word	0x200705dc
   837c8:	200705e4 	.word	0x200705e4
   837cc:	200709e4 	.word	0x200709e4
   837d0:	20070aac 	.word	0x20070aac

000837d4 <_localeconv_r>:
   837d4:	4800      	ldr	r0, [pc, #0]	; (837d8 <_localeconv_r+0x4>)
   837d6:	4770      	bx	lr
   837d8:	200705a4 	.word	0x200705a4

000837dc <_malloc_r>:
   837dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   837e0:	f101 050b 	add.w	r5, r1, #11
   837e4:	2d16      	cmp	r5, #22
   837e6:	b083      	sub	sp, #12
   837e8:	4606      	mov	r6, r0
   837ea:	d927      	bls.n	8383c <_malloc_r+0x60>
   837ec:	f035 0507 	bics.w	r5, r5, #7
   837f0:	f100 80b6 	bmi.w	83960 <_malloc_r+0x184>
   837f4:	42a9      	cmp	r1, r5
   837f6:	f200 80b3 	bhi.w	83960 <_malloc_r+0x184>
   837fa:	f000 fb99 	bl	83f30 <__malloc_lock>
   837fe:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   83802:	d222      	bcs.n	8384a <_malloc_r+0x6e>
   83804:	4fbc      	ldr	r7, [pc, #752]	; (83af8 <_malloc_r+0x31c>)
   83806:	08e8      	lsrs	r0, r5, #3
   83808:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
   8380c:	68dc      	ldr	r4, [r3, #12]
   8380e:	429c      	cmp	r4, r3
   83810:	f000 81bc 	beq.w	83b8c <_malloc_r+0x3b0>
   83814:	6863      	ldr	r3, [r4, #4]
   83816:	68e1      	ldr	r1, [r4, #12]
   83818:	f023 0303 	bic.w	r3, r3, #3
   8381c:	4423      	add	r3, r4
   8381e:	685a      	ldr	r2, [r3, #4]
   83820:	68a5      	ldr	r5, [r4, #8]
   83822:	f042 0201 	orr.w	r2, r2, #1
   83826:	60e9      	str	r1, [r5, #12]
   83828:	4630      	mov	r0, r6
   8382a:	608d      	str	r5, [r1, #8]
   8382c:	605a      	str	r2, [r3, #4]
   8382e:	f000 fb81 	bl	83f34 <__malloc_unlock>
   83832:	3408      	adds	r4, #8
   83834:	4620      	mov	r0, r4
   83836:	b003      	add	sp, #12
   83838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8383c:	2910      	cmp	r1, #16
   8383e:	f200 808f 	bhi.w	83960 <_malloc_r+0x184>
   83842:	f000 fb75 	bl	83f30 <__malloc_lock>
   83846:	2510      	movs	r5, #16
   83848:	e7dc      	b.n	83804 <_malloc_r+0x28>
   8384a:	0a68      	lsrs	r0, r5, #9
   8384c:	f000 808f 	beq.w	8396e <_malloc_r+0x192>
   83850:	2804      	cmp	r0, #4
   83852:	f200 8147 	bhi.w	83ae4 <_malloc_r+0x308>
   83856:	09a8      	lsrs	r0, r5, #6
   83858:	3038      	adds	r0, #56	; 0x38
   8385a:	0041      	lsls	r1, r0, #1
   8385c:	4fa6      	ldr	r7, [pc, #664]	; (83af8 <_malloc_r+0x31c>)
   8385e:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   83862:	68cc      	ldr	r4, [r1, #12]
   83864:	42a1      	cmp	r1, r4
   83866:	d106      	bne.n	83876 <_malloc_r+0x9a>
   83868:	e00c      	b.n	83884 <_malloc_r+0xa8>
   8386a:	2a00      	cmp	r2, #0
   8386c:	f280 8082 	bge.w	83974 <_malloc_r+0x198>
   83870:	68e4      	ldr	r4, [r4, #12]
   83872:	42a1      	cmp	r1, r4
   83874:	d006      	beq.n	83884 <_malloc_r+0xa8>
   83876:	6863      	ldr	r3, [r4, #4]
   83878:	f023 0303 	bic.w	r3, r3, #3
   8387c:	1b5a      	subs	r2, r3, r5
   8387e:	2a0f      	cmp	r2, #15
   83880:	ddf3      	ble.n	8386a <_malloc_r+0x8e>
   83882:	3801      	subs	r0, #1
   83884:	3001      	adds	r0, #1
   83886:	499c      	ldr	r1, [pc, #624]	; (83af8 <_malloc_r+0x31c>)
   83888:	693c      	ldr	r4, [r7, #16]
   8388a:	f101 0e08 	add.w	lr, r1, #8
   8388e:	4574      	cmp	r4, lr
   83890:	f000 8171 	beq.w	83b76 <_malloc_r+0x39a>
   83894:	6863      	ldr	r3, [r4, #4]
   83896:	f023 0303 	bic.w	r3, r3, #3
   8389a:	1b5a      	subs	r2, r3, r5
   8389c:	2a0f      	cmp	r2, #15
   8389e:	f300 8157 	bgt.w	83b50 <_malloc_r+0x374>
   838a2:	2a00      	cmp	r2, #0
   838a4:	f8c1 e014 	str.w	lr, [r1, #20]
   838a8:	f8c1 e010 	str.w	lr, [r1, #16]
   838ac:	da66      	bge.n	8397c <_malloc_r+0x1a0>
   838ae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   838b2:	f080 812d 	bcs.w	83b10 <_malloc_r+0x334>
   838b6:	08db      	lsrs	r3, r3, #3
   838b8:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
   838bc:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   838c0:	684a      	ldr	r2, [r1, #4]
   838c2:	2301      	movs	r3, #1
   838c4:	fa03 f30c 	lsl.w	r3, r3, ip
   838c8:	f8d8 c008 	ldr.w	ip, [r8, #8]
   838cc:	4313      	orrs	r3, r2
   838ce:	f8c4 c008 	str.w	ip, [r4, #8]
   838d2:	f8c4 800c 	str.w	r8, [r4, #12]
   838d6:	604b      	str	r3, [r1, #4]
   838d8:	f8c8 4008 	str.w	r4, [r8, #8]
   838dc:	f8cc 400c 	str.w	r4, [ip, #12]
   838e0:	1082      	asrs	r2, r0, #2
   838e2:	2401      	movs	r4, #1
   838e4:	4094      	lsls	r4, r2
   838e6:	429c      	cmp	r4, r3
   838e8:	d855      	bhi.n	83996 <_malloc_r+0x1ba>
   838ea:	4223      	tst	r3, r4
   838ec:	d106      	bne.n	838fc <_malloc_r+0x120>
   838ee:	f020 0003 	bic.w	r0, r0, #3
   838f2:	0064      	lsls	r4, r4, #1
   838f4:	4223      	tst	r3, r4
   838f6:	f100 0004 	add.w	r0, r0, #4
   838fa:	d0fa      	beq.n	838f2 <_malloc_r+0x116>
   838fc:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
   83900:	46c4      	mov	ip, r8
   83902:	4681      	mov	r9, r0
   83904:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83908:	459c      	cmp	ip, r3
   8390a:	d107      	bne.n	8391c <_malloc_r+0x140>
   8390c:	e135      	b.n	83b7a <_malloc_r+0x39e>
   8390e:	2900      	cmp	r1, #0
   83910:	f280 8145 	bge.w	83b9e <_malloc_r+0x3c2>
   83914:	68db      	ldr	r3, [r3, #12]
   83916:	459c      	cmp	ip, r3
   83918:	f000 812f 	beq.w	83b7a <_malloc_r+0x39e>
   8391c:	685a      	ldr	r2, [r3, #4]
   8391e:	f022 0203 	bic.w	r2, r2, #3
   83922:	1b51      	subs	r1, r2, r5
   83924:	290f      	cmp	r1, #15
   83926:	ddf2      	ble.n	8390e <_malloc_r+0x132>
   83928:	461c      	mov	r4, r3
   8392a:	68da      	ldr	r2, [r3, #12]
   8392c:	f854 cf08 	ldr.w	ip, [r4, #8]!
   83930:	f045 0901 	orr.w	r9, r5, #1
   83934:	f041 0801 	orr.w	r8, r1, #1
   83938:	441d      	add	r5, r3
   8393a:	f8c3 9004 	str.w	r9, [r3, #4]
   8393e:	4630      	mov	r0, r6
   83940:	f8cc 200c 	str.w	r2, [ip, #12]
   83944:	f8c2 c008 	str.w	ip, [r2, #8]
   83948:	617d      	str	r5, [r7, #20]
   8394a:	613d      	str	r5, [r7, #16]
   8394c:	f8c5 e00c 	str.w	lr, [r5, #12]
   83950:	f8c5 e008 	str.w	lr, [r5, #8]
   83954:	f8c5 8004 	str.w	r8, [r5, #4]
   83958:	5069      	str	r1, [r5, r1]
   8395a:	f000 faeb 	bl	83f34 <__malloc_unlock>
   8395e:	e769      	b.n	83834 <_malloc_r+0x58>
   83960:	2400      	movs	r4, #0
   83962:	4620      	mov	r0, r4
   83964:	230c      	movs	r3, #12
   83966:	6033      	str	r3, [r6, #0]
   83968:	b003      	add	sp, #12
   8396a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8396e:	217e      	movs	r1, #126	; 0x7e
   83970:	203f      	movs	r0, #63	; 0x3f
   83972:	e773      	b.n	8385c <_malloc_r+0x80>
   83974:	4423      	add	r3, r4
   83976:	685a      	ldr	r2, [r3, #4]
   83978:	68e1      	ldr	r1, [r4, #12]
   8397a:	e751      	b.n	83820 <_malloc_r+0x44>
   8397c:	4423      	add	r3, r4
   8397e:	685a      	ldr	r2, [r3, #4]
   83980:	4630      	mov	r0, r6
   83982:	f042 0201 	orr.w	r2, r2, #1
   83986:	605a      	str	r2, [r3, #4]
   83988:	3408      	adds	r4, #8
   8398a:	f000 fad3 	bl	83f34 <__malloc_unlock>
   8398e:	4620      	mov	r0, r4
   83990:	b003      	add	sp, #12
   83992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83996:	68bc      	ldr	r4, [r7, #8]
   83998:	6863      	ldr	r3, [r4, #4]
   8399a:	f023 0803 	bic.w	r8, r3, #3
   8399e:	4545      	cmp	r5, r8
   839a0:	d804      	bhi.n	839ac <_malloc_r+0x1d0>
   839a2:	ebc5 0308 	rsb	r3, r5, r8
   839a6:	2b0f      	cmp	r3, #15
   839a8:	f300 808c 	bgt.w	83ac4 <_malloc_r+0x2e8>
   839ac:	4b53      	ldr	r3, [pc, #332]	; (83afc <_malloc_r+0x320>)
   839ae:	f8df a15c 	ldr.w	sl, [pc, #348]	; 83b0c <_malloc_r+0x330>
   839b2:	681a      	ldr	r2, [r3, #0]
   839b4:	f8da 3000 	ldr.w	r3, [sl]
   839b8:	442a      	add	r2, r5
   839ba:	3301      	adds	r3, #1
   839bc:	eb04 0b08 	add.w	fp, r4, r8
   839c0:	f000 8151 	beq.w	83c66 <_malloc_r+0x48a>
   839c4:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
   839c8:	320f      	adds	r2, #15
   839ca:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
   839ce:	f022 020f 	bic.w	r2, r2, #15
   839d2:	4611      	mov	r1, r2
   839d4:	4630      	mov	r0, r6
   839d6:	9201      	str	r2, [sp, #4]
   839d8:	f000 ffc8 	bl	8496c <_sbrk_r>
   839dc:	f1b0 3fff 	cmp.w	r0, #4294967295
   839e0:	4681      	mov	r9, r0
   839e2:	9a01      	ldr	r2, [sp, #4]
   839e4:	f000 8148 	beq.w	83c78 <_malloc_r+0x49c>
   839e8:	4583      	cmp	fp, r0
   839ea:	f200 80ef 	bhi.w	83bcc <_malloc_r+0x3f0>
   839ee:	4b44      	ldr	r3, [pc, #272]	; (83b00 <_malloc_r+0x324>)
   839f0:	45cb      	cmp	fp, r9
   839f2:	6819      	ldr	r1, [r3, #0]
   839f4:	4411      	add	r1, r2
   839f6:	6019      	str	r1, [r3, #0]
   839f8:	f000 8143 	beq.w	83c82 <_malloc_r+0x4a6>
   839fc:	f8da 0000 	ldr.w	r0, [sl]
   83a00:	f8df e108 	ldr.w	lr, [pc, #264]	; 83b0c <_malloc_r+0x330>
   83a04:	3001      	adds	r0, #1
   83a06:	bf1b      	ittet	ne
   83a08:	ebcb 0b09 	rsbne	fp, fp, r9
   83a0c:	4459      	addne	r1, fp
   83a0e:	f8ce 9000 	streq.w	r9, [lr]
   83a12:	6019      	strne	r1, [r3, #0]
   83a14:	f019 0107 	ands.w	r1, r9, #7
   83a18:	f000 8108 	beq.w	83c2c <_malloc_r+0x450>
   83a1c:	f1c1 0008 	rsb	r0, r1, #8
   83a20:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   83a24:	4481      	add	r9, r0
   83a26:	3108      	adds	r1, #8
   83a28:	444a      	add	r2, r9
   83a2a:	f3c2 020b 	ubfx	r2, r2, #0, #12
   83a2e:	ebc2 0a01 	rsb	sl, r2, r1
   83a32:	4651      	mov	r1, sl
   83a34:	4630      	mov	r0, r6
   83a36:	9301      	str	r3, [sp, #4]
   83a38:	f000 ff98 	bl	8496c <_sbrk_r>
   83a3c:	1c43      	adds	r3, r0, #1
   83a3e:	9b01      	ldr	r3, [sp, #4]
   83a40:	f000 812d 	beq.w	83c9e <_malloc_r+0x4c2>
   83a44:	ebc9 0200 	rsb	r2, r9, r0
   83a48:	4452      	add	r2, sl
   83a4a:	f042 0201 	orr.w	r2, r2, #1
   83a4e:	6819      	ldr	r1, [r3, #0]
   83a50:	42bc      	cmp	r4, r7
   83a52:	4451      	add	r1, sl
   83a54:	f8c7 9008 	str.w	r9, [r7, #8]
   83a58:	6019      	str	r1, [r3, #0]
   83a5a:	f8c9 2004 	str.w	r2, [r9, #4]
   83a5e:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 83b00 <_malloc_r+0x324>
   83a62:	d016      	beq.n	83a92 <_malloc_r+0x2b6>
   83a64:	f1b8 0f0f 	cmp.w	r8, #15
   83a68:	f240 80ef 	bls.w	83c4a <_malloc_r+0x46e>
   83a6c:	6862      	ldr	r2, [r4, #4]
   83a6e:	f1a8 030c 	sub.w	r3, r8, #12
   83a72:	f023 0307 	bic.w	r3, r3, #7
   83a76:	f002 0201 	and.w	r2, r2, #1
   83a7a:	18e0      	adds	r0, r4, r3
   83a7c:	f04f 0e05 	mov.w	lr, #5
   83a80:	431a      	orrs	r2, r3
   83a82:	2b0f      	cmp	r3, #15
   83a84:	6062      	str	r2, [r4, #4]
   83a86:	f8c0 e004 	str.w	lr, [r0, #4]
   83a8a:	f8c0 e008 	str.w	lr, [r0, #8]
   83a8e:	f200 810a 	bhi.w	83ca6 <_malloc_r+0x4ca>
   83a92:	4b1c      	ldr	r3, [pc, #112]	; (83b04 <_malloc_r+0x328>)
   83a94:	68bc      	ldr	r4, [r7, #8]
   83a96:	681a      	ldr	r2, [r3, #0]
   83a98:	4291      	cmp	r1, r2
   83a9a:	bf88      	it	hi
   83a9c:	6019      	strhi	r1, [r3, #0]
   83a9e:	4b1a      	ldr	r3, [pc, #104]	; (83b08 <_malloc_r+0x32c>)
   83aa0:	681a      	ldr	r2, [r3, #0]
   83aa2:	4291      	cmp	r1, r2
   83aa4:	6862      	ldr	r2, [r4, #4]
   83aa6:	bf88      	it	hi
   83aa8:	6019      	strhi	r1, [r3, #0]
   83aaa:	f022 0203 	bic.w	r2, r2, #3
   83aae:	4295      	cmp	r5, r2
   83ab0:	eba2 0305 	sub.w	r3, r2, r5
   83ab4:	d801      	bhi.n	83aba <_malloc_r+0x2de>
   83ab6:	2b0f      	cmp	r3, #15
   83ab8:	dc04      	bgt.n	83ac4 <_malloc_r+0x2e8>
   83aba:	4630      	mov	r0, r6
   83abc:	f000 fa3a 	bl	83f34 <__malloc_unlock>
   83ac0:	2400      	movs	r4, #0
   83ac2:	e6b7      	b.n	83834 <_malloc_r+0x58>
   83ac4:	f045 0201 	orr.w	r2, r5, #1
   83ac8:	f043 0301 	orr.w	r3, r3, #1
   83acc:	4425      	add	r5, r4
   83ace:	6062      	str	r2, [r4, #4]
   83ad0:	4630      	mov	r0, r6
   83ad2:	60bd      	str	r5, [r7, #8]
   83ad4:	3408      	adds	r4, #8
   83ad6:	606b      	str	r3, [r5, #4]
   83ad8:	f000 fa2c 	bl	83f34 <__malloc_unlock>
   83adc:	4620      	mov	r0, r4
   83ade:	b003      	add	sp, #12
   83ae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ae4:	2814      	cmp	r0, #20
   83ae6:	d969      	bls.n	83bbc <_malloc_r+0x3e0>
   83ae8:	2854      	cmp	r0, #84	; 0x54
   83aea:	f200 8098 	bhi.w	83c1e <_malloc_r+0x442>
   83aee:	0b28      	lsrs	r0, r5, #12
   83af0:	306e      	adds	r0, #110	; 0x6e
   83af2:	0041      	lsls	r1, r0, #1
   83af4:	e6b2      	b.n	8385c <_malloc_r+0x80>
   83af6:	bf00      	nop
   83af8:	200705dc 	.word	0x200705dc
   83afc:	20070aac 	.word	0x20070aac
   83b00:	20070ab0 	.word	0x20070ab0
   83b04:	20070aa8 	.word	0x20070aa8
   83b08:	20070aa4 	.word	0x20070aa4
   83b0c:	200709e8 	.word	0x200709e8
   83b10:	0a5a      	lsrs	r2, r3, #9
   83b12:	2a04      	cmp	r2, #4
   83b14:	d955      	bls.n	83bc2 <_malloc_r+0x3e6>
   83b16:	2a14      	cmp	r2, #20
   83b18:	f200 80a7 	bhi.w	83c6a <_malloc_r+0x48e>
   83b1c:	325b      	adds	r2, #91	; 0x5b
   83b1e:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83b22:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
   83b26:	f8dc 1008 	ldr.w	r1, [ip, #8]
   83b2a:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 83ce4 <_malloc_r+0x508>
   83b2e:	4561      	cmp	r1, ip
   83b30:	d07f      	beq.n	83c32 <_malloc_r+0x456>
   83b32:	684a      	ldr	r2, [r1, #4]
   83b34:	f022 0203 	bic.w	r2, r2, #3
   83b38:	4293      	cmp	r3, r2
   83b3a:	d202      	bcs.n	83b42 <_malloc_r+0x366>
   83b3c:	6889      	ldr	r1, [r1, #8]
   83b3e:	458c      	cmp	ip, r1
   83b40:	d1f7      	bne.n	83b32 <_malloc_r+0x356>
   83b42:	68ca      	ldr	r2, [r1, #12]
   83b44:	687b      	ldr	r3, [r7, #4]
   83b46:	60e2      	str	r2, [r4, #12]
   83b48:	60a1      	str	r1, [r4, #8]
   83b4a:	6094      	str	r4, [r2, #8]
   83b4c:	60cc      	str	r4, [r1, #12]
   83b4e:	e6c7      	b.n	838e0 <_malloc_r+0x104>
   83b50:	f045 0701 	orr.w	r7, r5, #1
   83b54:	f042 0301 	orr.w	r3, r2, #1
   83b58:	4425      	add	r5, r4
   83b5a:	6067      	str	r7, [r4, #4]
   83b5c:	4630      	mov	r0, r6
   83b5e:	614d      	str	r5, [r1, #20]
   83b60:	610d      	str	r5, [r1, #16]
   83b62:	f8c5 e00c 	str.w	lr, [r5, #12]
   83b66:	f8c5 e008 	str.w	lr, [r5, #8]
   83b6a:	606b      	str	r3, [r5, #4]
   83b6c:	50aa      	str	r2, [r5, r2]
   83b6e:	3408      	adds	r4, #8
   83b70:	f000 f9e0 	bl	83f34 <__malloc_unlock>
   83b74:	e65e      	b.n	83834 <_malloc_r+0x58>
   83b76:	684b      	ldr	r3, [r1, #4]
   83b78:	e6b2      	b.n	838e0 <_malloc_r+0x104>
   83b7a:	f109 0901 	add.w	r9, r9, #1
   83b7e:	f019 0f03 	tst.w	r9, #3
   83b82:	f10c 0c08 	add.w	ip, ip, #8
   83b86:	f47f aebd 	bne.w	83904 <_malloc_r+0x128>
   83b8a:	e02c      	b.n	83be6 <_malloc_r+0x40a>
   83b8c:	f104 0308 	add.w	r3, r4, #8
   83b90:	6964      	ldr	r4, [r4, #20]
   83b92:	42a3      	cmp	r3, r4
   83b94:	bf08      	it	eq
   83b96:	3002      	addeq	r0, #2
   83b98:	f43f ae75 	beq.w	83886 <_malloc_r+0xaa>
   83b9c:	e63a      	b.n	83814 <_malloc_r+0x38>
   83b9e:	461c      	mov	r4, r3
   83ba0:	441a      	add	r2, r3
   83ba2:	6851      	ldr	r1, [r2, #4]
   83ba4:	68db      	ldr	r3, [r3, #12]
   83ba6:	f854 5f08 	ldr.w	r5, [r4, #8]!
   83baa:	f041 0101 	orr.w	r1, r1, #1
   83bae:	6051      	str	r1, [r2, #4]
   83bb0:	4630      	mov	r0, r6
   83bb2:	60eb      	str	r3, [r5, #12]
   83bb4:	609d      	str	r5, [r3, #8]
   83bb6:	f000 f9bd 	bl	83f34 <__malloc_unlock>
   83bba:	e63b      	b.n	83834 <_malloc_r+0x58>
   83bbc:	305b      	adds	r0, #91	; 0x5b
   83bbe:	0041      	lsls	r1, r0, #1
   83bc0:	e64c      	b.n	8385c <_malloc_r+0x80>
   83bc2:	099a      	lsrs	r2, r3, #6
   83bc4:	3238      	adds	r2, #56	; 0x38
   83bc6:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83bca:	e7aa      	b.n	83b22 <_malloc_r+0x346>
   83bcc:	42bc      	cmp	r4, r7
   83bce:	4b45      	ldr	r3, [pc, #276]	; (83ce4 <_malloc_r+0x508>)
   83bd0:	f43f af0d 	beq.w	839ee <_malloc_r+0x212>
   83bd4:	689c      	ldr	r4, [r3, #8]
   83bd6:	6862      	ldr	r2, [r4, #4]
   83bd8:	f022 0203 	bic.w	r2, r2, #3
   83bdc:	e767      	b.n	83aae <_malloc_r+0x2d2>
   83bde:	f8d8 8000 	ldr.w	r8, [r8]
   83be2:	4598      	cmp	r8, r3
   83be4:	d17c      	bne.n	83ce0 <_malloc_r+0x504>
   83be6:	f010 0f03 	tst.w	r0, #3
   83bea:	f1a8 0308 	sub.w	r3, r8, #8
   83bee:	f100 30ff 	add.w	r0, r0, #4294967295
   83bf2:	d1f4      	bne.n	83bde <_malloc_r+0x402>
   83bf4:	687b      	ldr	r3, [r7, #4]
   83bf6:	ea23 0304 	bic.w	r3, r3, r4
   83bfa:	607b      	str	r3, [r7, #4]
   83bfc:	0064      	lsls	r4, r4, #1
   83bfe:	429c      	cmp	r4, r3
   83c00:	f63f aec9 	bhi.w	83996 <_malloc_r+0x1ba>
   83c04:	2c00      	cmp	r4, #0
   83c06:	f43f aec6 	beq.w	83996 <_malloc_r+0x1ba>
   83c0a:	4223      	tst	r3, r4
   83c0c:	4648      	mov	r0, r9
   83c0e:	f47f ae75 	bne.w	838fc <_malloc_r+0x120>
   83c12:	0064      	lsls	r4, r4, #1
   83c14:	4223      	tst	r3, r4
   83c16:	f100 0004 	add.w	r0, r0, #4
   83c1a:	d0fa      	beq.n	83c12 <_malloc_r+0x436>
   83c1c:	e66e      	b.n	838fc <_malloc_r+0x120>
   83c1e:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
   83c22:	d818      	bhi.n	83c56 <_malloc_r+0x47a>
   83c24:	0be8      	lsrs	r0, r5, #15
   83c26:	3077      	adds	r0, #119	; 0x77
   83c28:	0041      	lsls	r1, r0, #1
   83c2a:	e617      	b.n	8385c <_malloc_r+0x80>
   83c2c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   83c30:	e6fa      	b.n	83a28 <_malloc_r+0x24c>
   83c32:	f8d8 3004 	ldr.w	r3, [r8, #4]
   83c36:	1092      	asrs	r2, r2, #2
   83c38:	f04f 0c01 	mov.w	ip, #1
   83c3c:	fa0c f202 	lsl.w	r2, ip, r2
   83c40:	4313      	orrs	r3, r2
   83c42:	f8c8 3004 	str.w	r3, [r8, #4]
   83c46:	460a      	mov	r2, r1
   83c48:	e77d      	b.n	83b46 <_malloc_r+0x36a>
   83c4a:	2301      	movs	r3, #1
   83c4c:	f8c9 3004 	str.w	r3, [r9, #4]
   83c50:	464c      	mov	r4, r9
   83c52:	2200      	movs	r2, #0
   83c54:	e72b      	b.n	83aae <_malloc_r+0x2d2>
   83c56:	f240 5354 	movw	r3, #1364	; 0x554
   83c5a:	4298      	cmp	r0, r3
   83c5c:	d81c      	bhi.n	83c98 <_malloc_r+0x4bc>
   83c5e:	0ca8      	lsrs	r0, r5, #18
   83c60:	307c      	adds	r0, #124	; 0x7c
   83c62:	0041      	lsls	r1, r0, #1
   83c64:	e5fa      	b.n	8385c <_malloc_r+0x80>
   83c66:	3210      	adds	r2, #16
   83c68:	e6b3      	b.n	839d2 <_malloc_r+0x1f6>
   83c6a:	2a54      	cmp	r2, #84	; 0x54
   83c6c:	d823      	bhi.n	83cb6 <_malloc_r+0x4da>
   83c6e:	0b1a      	lsrs	r2, r3, #12
   83c70:	326e      	adds	r2, #110	; 0x6e
   83c72:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83c76:	e754      	b.n	83b22 <_malloc_r+0x346>
   83c78:	68bc      	ldr	r4, [r7, #8]
   83c7a:	6862      	ldr	r2, [r4, #4]
   83c7c:	f022 0203 	bic.w	r2, r2, #3
   83c80:	e715      	b.n	83aae <_malloc_r+0x2d2>
   83c82:	f3cb 000b 	ubfx	r0, fp, #0, #12
   83c86:	2800      	cmp	r0, #0
   83c88:	f47f aeb8 	bne.w	839fc <_malloc_r+0x220>
   83c8c:	4442      	add	r2, r8
   83c8e:	68bb      	ldr	r3, [r7, #8]
   83c90:	f042 0201 	orr.w	r2, r2, #1
   83c94:	605a      	str	r2, [r3, #4]
   83c96:	e6fc      	b.n	83a92 <_malloc_r+0x2b6>
   83c98:	21fc      	movs	r1, #252	; 0xfc
   83c9a:	207e      	movs	r0, #126	; 0x7e
   83c9c:	e5de      	b.n	8385c <_malloc_r+0x80>
   83c9e:	2201      	movs	r2, #1
   83ca0:	f04f 0a00 	mov.w	sl, #0
   83ca4:	e6d3      	b.n	83a4e <_malloc_r+0x272>
   83ca6:	f104 0108 	add.w	r1, r4, #8
   83caa:	4630      	mov	r0, r6
   83cac:	f7ff fcba 	bl	83624 <_free_r>
   83cb0:	f8da 1000 	ldr.w	r1, [sl]
   83cb4:	e6ed      	b.n	83a92 <_malloc_r+0x2b6>
   83cb6:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   83cba:	d804      	bhi.n	83cc6 <_malloc_r+0x4ea>
   83cbc:	0bda      	lsrs	r2, r3, #15
   83cbe:	3277      	adds	r2, #119	; 0x77
   83cc0:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83cc4:	e72d      	b.n	83b22 <_malloc_r+0x346>
   83cc6:	f240 5154 	movw	r1, #1364	; 0x554
   83cca:	428a      	cmp	r2, r1
   83ccc:	d804      	bhi.n	83cd8 <_malloc_r+0x4fc>
   83cce:	0c9a      	lsrs	r2, r3, #18
   83cd0:	327c      	adds	r2, #124	; 0x7c
   83cd2:	ea4f 0c42 	mov.w	ip, r2, lsl #1
   83cd6:	e724      	b.n	83b22 <_malloc_r+0x346>
   83cd8:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
   83cdc:	227e      	movs	r2, #126	; 0x7e
   83cde:	e720      	b.n	83b22 <_malloc_r+0x346>
   83ce0:	687b      	ldr	r3, [r7, #4]
   83ce2:	e78b      	b.n	83bfc <_malloc_r+0x420>
   83ce4:	200705dc 	.word	0x200705dc

00083ce8 <memchr>:
   83ce8:	0783      	lsls	r3, r0, #30
   83cea:	b470      	push	{r4, r5, r6}
   83cec:	b2c9      	uxtb	r1, r1
   83cee:	d040      	beq.n	83d72 <memchr+0x8a>
   83cf0:	1e54      	subs	r4, r2, #1
   83cf2:	2a00      	cmp	r2, #0
   83cf4:	d03f      	beq.n	83d76 <memchr+0x8e>
   83cf6:	7803      	ldrb	r3, [r0, #0]
   83cf8:	428b      	cmp	r3, r1
   83cfa:	bf18      	it	ne
   83cfc:	1c43      	addne	r3, r0, #1
   83cfe:	d105      	bne.n	83d0c <memchr+0x24>
   83d00:	e01c      	b.n	83d3c <memchr+0x54>
   83d02:	b1ec      	cbz	r4, 83d40 <memchr+0x58>
   83d04:	7802      	ldrb	r2, [r0, #0]
   83d06:	3c01      	subs	r4, #1
   83d08:	428a      	cmp	r2, r1
   83d0a:	d017      	beq.n	83d3c <memchr+0x54>
   83d0c:	f013 0f03 	tst.w	r3, #3
   83d10:	4618      	mov	r0, r3
   83d12:	f103 0301 	add.w	r3, r3, #1
   83d16:	d1f4      	bne.n	83d02 <memchr+0x1a>
   83d18:	2c03      	cmp	r4, #3
   83d1a:	d814      	bhi.n	83d46 <memchr+0x5e>
   83d1c:	b184      	cbz	r4, 83d40 <memchr+0x58>
   83d1e:	7803      	ldrb	r3, [r0, #0]
   83d20:	428b      	cmp	r3, r1
   83d22:	d00b      	beq.n	83d3c <memchr+0x54>
   83d24:	1905      	adds	r5, r0, r4
   83d26:	1c43      	adds	r3, r0, #1
   83d28:	e002      	b.n	83d30 <memchr+0x48>
   83d2a:	7802      	ldrb	r2, [r0, #0]
   83d2c:	428a      	cmp	r2, r1
   83d2e:	d005      	beq.n	83d3c <memchr+0x54>
   83d30:	42ab      	cmp	r3, r5
   83d32:	4618      	mov	r0, r3
   83d34:	f103 0301 	add.w	r3, r3, #1
   83d38:	d1f7      	bne.n	83d2a <memchr+0x42>
   83d3a:	2000      	movs	r0, #0
   83d3c:	bc70      	pop	{r4, r5, r6}
   83d3e:	4770      	bx	lr
   83d40:	4620      	mov	r0, r4
   83d42:	bc70      	pop	{r4, r5, r6}
   83d44:	4770      	bx	lr
   83d46:	4602      	mov	r2, r0
   83d48:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   83d4c:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   83d50:	6813      	ldr	r3, [r2, #0]
   83d52:	4610      	mov	r0, r2
   83d54:	4073      	eors	r3, r6
   83d56:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
   83d5a:	ea25 0303 	bic.w	r3, r5, r3
   83d5e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   83d62:	f102 0204 	add.w	r2, r2, #4
   83d66:	d1d9      	bne.n	83d1c <memchr+0x34>
   83d68:	3c04      	subs	r4, #4
   83d6a:	2c03      	cmp	r4, #3
   83d6c:	4610      	mov	r0, r2
   83d6e:	d8ef      	bhi.n	83d50 <memchr+0x68>
   83d70:	e7d4      	b.n	83d1c <memchr+0x34>
   83d72:	4614      	mov	r4, r2
   83d74:	e7d0      	b.n	83d18 <memchr+0x30>
   83d76:	4610      	mov	r0, r2
   83d78:	e7e0      	b.n	83d3c <memchr+0x54>
   83d7a:	bf00      	nop

00083d7c <memcpy>:
   83d7c:	4684      	mov	ip, r0
   83d7e:	ea41 0300 	orr.w	r3, r1, r0
   83d82:	f013 0303 	ands.w	r3, r3, #3
   83d86:	d149      	bne.n	83e1c <memcpy+0xa0>
   83d88:	3a40      	subs	r2, #64	; 0x40
   83d8a:	d323      	bcc.n	83dd4 <memcpy+0x58>
   83d8c:	680b      	ldr	r3, [r1, #0]
   83d8e:	6003      	str	r3, [r0, #0]
   83d90:	684b      	ldr	r3, [r1, #4]
   83d92:	6043      	str	r3, [r0, #4]
   83d94:	688b      	ldr	r3, [r1, #8]
   83d96:	6083      	str	r3, [r0, #8]
   83d98:	68cb      	ldr	r3, [r1, #12]
   83d9a:	60c3      	str	r3, [r0, #12]
   83d9c:	690b      	ldr	r3, [r1, #16]
   83d9e:	6103      	str	r3, [r0, #16]
   83da0:	694b      	ldr	r3, [r1, #20]
   83da2:	6143      	str	r3, [r0, #20]
   83da4:	698b      	ldr	r3, [r1, #24]
   83da6:	6183      	str	r3, [r0, #24]
   83da8:	69cb      	ldr	r3, [r1, #28]
   83daa:	61c3      	str	r3, [r0, #28]
   83dac:	6a0b      	ldr	r3, [r1, #32]
   83dae:	6203      	str	r3, [r0, #32]
   83db0:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83db2:	6243      	str	r3, [r0, #36]	; 0x24
   83db4:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83db6:	6283      	str	r3, [r0, #40]	; 0x28
   83db8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83dba:	62c3      	str	r3, [r0, #44]	; 0x2c
   83dbc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83dbe:	6303      	str	r3, [r0, #48]	; 0x30
   83dc0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83dc2:	6343      	str	r3, [r0, #52]	; 0x34
   83dc4:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83dc6:	6383      	str	r3, [r0, #56]	; 0x38
   83dc8:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83dca:	63c3      	str	r3, [r0, #60]	; 0x3c
   83dcc:	3040      	adds	r0, #64	; 0x40
   83dce:	3140      	adds	r1, #64	; 0x40
   83dd0:	3a40      	subs	r2, #64	; 0x40
   83dd2:	d2db      	bcs.n	83d8c <memcpy+0x10>
   83dd4:	3230      	adds	r2, #48	; 0x30
   83dd6:	d30b      	bcc.n	83df0 <memcpy+0x74>
   83dd8:	680b      	ldr	r3, [r1, #0]
   83dda:	6003      	str	r3, [r0, #0]
   83ddc:	684b      	ldr	r3, [r1, #4]
   83dde:	6043      	str	r3, [r0, #4]
   83de0:	688b      	ldr	r3, [r1, #8]
   83de2:	6083      	str	r3, [r0, #8]
   83de4:	68cb      	ldr	r3, [r1, #12]
   83de6:	60c3      	str	r3, [r0, #12]
   83de8:	3010      	adds	r0, #16
   83dea:	3110      	adds	r1, #16
   83dec:	3a10      	subs	r2, #16
   83dee:	d2f3      	bcs.n	83dd8 <memcpy+0x5c>
   83df0:	320c      	adds	r2, #12
   83df2:	d305      	bcc.n	83e00 <memcpy+0x84>
   83df4:	f851 3b04 	ldr.w	r3, [r1], #4
   83df8:	f840 3b04 	str.w	r3, [r0], #4
   83dfc:	3a04      	subs	r2, #4
   83dfe:	d2f9      	bcs.n	83df4 <memcpy+0x78>
   83e00:	3204      	adds	r2, #4
   83e02:	d008      	beq.n	83e16 <memcpy+0x9a>
   83e04:	07d2      	lsls	r2, r2, #31
   83e06:	bf1c      	itt	ne
   83e08:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83e0c:	f800 3b01 	strbne.w	r3, [r0], #1
   83e10:	d301      	bcc.n	83e16 <memcpy+0x9a>
   83e12:	880b      	ldrh	r3, [r1, #0]
   83e14:	8003      	strh	r3, [r0, #0]
   83e16:	4660      	mov	r0, ip
   83e18:	4770      	bx	lr
   83e1a:	bf00      	nop
   83e1c:	2a08      	cmp	r2, #8
   83e1e:	d313      	bcc.n	83e48 <memcpy+0xcc>
   83e20:	078b      	lsls	r3, r1, #30
   83e22:	d0b1      	beq.n	83d88 <memcpy+0xc>
   83e24:	f010 0303 	ands.w	r3, r0, #3
   83e28:	d0ae      	beq.n	83d88 <memcpy+0xc>
   83e2a:	f1c3 0304 	rsb	r3, r3, #4
   83e2e:	1ad2      	subs	r2, r2, r3
   83e30:	07db      	lsls	r3, r3, #31
   83e32:	bf1c      	itt	ne
   83e34:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83e38:	f800 3b01 	strbne.w	r3, [r0], #1
   83e3c:	d3a4      	bcc.n	83d88 <memcpy+0xc>
   83e3e:	f831 3b02 	ldrh.w	r3, [r1], #2
   83e42:	f820 3b02 	strh.w	r3, [r0], #2
   83e46:	e79f      	b.n	83d88 <memcpy+0xc>
   83e48:	3a04      	subs	r2, #4
   83e4a:	d3d9      	bcc.n	83e00 <memcpy+0x84>
   83e4c:	3a01      	subs	r2, #1
   83e4e:	f811 3b01 	ldrb.w	r3, [r1], #1
   83e52:	f800 3b01 	strb.w	r3, [r0], #1
   83e56:	d2f9      	bcs.n	83e4c <memcpy+0xd0>
   83e58:	780b      	ldrb	r3, [r1, #0]
   83e5a:	7003      	strb	r3, [r0, #0]
   83e5c:	784b      	ldrb	r3, [r1, #1]
   83e5e:	7043      	strb	r3, [r0, #1]
   83e60:	788b      	ldrb	r3, [r1, #2]
   83e62:	7083      	strb	r3, [r0, #2]
   83e64:	4660      	mov	r0, ip
   83e66:	4770      	bx	lr

00083e68 <memmove>:
   83e68:	4288      	cmp	r0, r1
   83e6a:	b5f0      	push	{r4, r5, r6, r7, lr}
   83e6c:	d90d      	bls.n	83e8a <memmove+0x22>
   83e6e:	188b      	adds	r3, r1, r2
   83e70:	4298      	cmp	r0, r3
   83e72:	d20a      	bcs.n	83e8a <memmove+0x22>
   83e74:	1881      	adds	r1, r0, r2
   83e76:	2a00      	cmp	r2, #0
   83e78:	d054      	beq.n	83f24 <memmove+0xbc>
   83e7a:	1a9a      	subs	r2, r3, r2
   83e7c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   83e80:	4293      	cmp	r3, r2
   83e82:	f801 4d01 	strb.w	r4, [r1, #-1]!
   83e86:	d1f9      	bne.n	83e7c <memmove+0x14>
   83e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83e8a:	2a0f      	cmp	r2, #15
   83e8c:	d948      	bls.n	83f20 <memmove+0xb8>
   83e8e:	ea40 0301 	orr.w	r3, r0, r1
   83e92:	079b      	lsls	r3, r3, #30
   83e94:	d147      	bne.n	83f26 <memmove+0xbe>
   83e96:	4615      	mov	r5, r2
   83e98:	f100 0410 	add.w	r4, r0, #16
   83e9c:	f101 0310 	add.w	r3, r1, #16
   83ea0:	f853 6c10 	ldr.w	r6, [r3, #-16]
   83ea4:	3d10      	subs	r5, #16
   83ea6:	f844 6c10 	str.w	r6, [r4, #-16]
   83eaa:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   83eae:	2d0f      	cmp	r5, #15
   83eb0:	f844 6c0c 	str.w	r6, [r4, #-12]
   83eb4:	f853 6c08 	ldr.w	r6, [r3, #-8]
   83eb8:	f104 0410 	add.w	r4, r4, #16
   83ebc:	f844 6c18 	str.w	r6, [r4, #-24]
   83ec0:	f853 6c04 	ldr.w	r6, [r3, #-4]
   83ec4:	f103 0310 	add.w	r3, r3, #16
   83ec8:	f844 6c14 	str.w	r6, [r4, #-20]
   83ecc:	d8e8      	bhi.n	83ea0 <memmove+0x38>
   83ece:	f1a2 0310 	sub.w	r3, r2, #16
   83ed2:	f023 030f 	bic.w	r3, r3, #15
   83ed6:	f002 0e0f 	and.w	lr, r2, #15
   83eda:	3310      	adds	r3, #16
   83edc:	f1be 0f03 	cmp.w	lr, #3
   83ee0:	4419      	add	r1, r3
   83ee2:	4403      	add	r3, r0
   83ee4:	d921      	bls.n	83f2a <memmove+0xc2>
   83ee6:	460e      	mov	r6, r1
   83ee8:	4674      	mov	r4, lr
   83eea:	1f1d      	subs	r5, r3, #4
   83eec:	f856 7b04 	ldr.w	r7, [r6], #4
   83ef0:	3c04      	subs	r4, #4
   83ef2:	2c03      	cmp	r4, #3
   83ef4:	f845 7f04 	str.w	r7, [r5, #4]!
   83ef8:	d8f8      	bhi.n	83eec <memmove+0x84>
   83efa:	f1ae 0404 	sub.w	r4, lr, #4
   83efe:	f024 0403 	bic.w	r4, r4, #3
   83f02:	3404      	adds	r4, #4
   83f04:	4423      	add	r3, r4
   83f06:	4421      	add	r1, r4
   83f08:	f002 0203 	and.w	r2, r2, #3
   83f0c:	b152      	cbz	r2, 83f24 <memmove+0xbc>
   83f0e:	3b01      	subs	r3, #1
   83f10:	440a      	add	r2, r1
   83f12:	f811 4b01 	ldrb.w	r4, [r1], #1
   83f16:	4291      	cmp	r1, r2
   83f18:	f803 4f01 	strb.w	r4, [r3, #1]!
   83f1c:	d1f9      	bne.n	83f12 <memmove+0xaa>
   83f1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83f20:	4603      	mov	r3, r0
   83f22:	e7f3      	b.n	83f0c <memmove+0xa4>
   83f24:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83f26:	4603      	mov	r3, r0
   83f28:	e7f1      	b.n	83f0e <memmove+0xa6>
   83f2a:	4672      	mov	r2, lr
   83f2c:	e7ee      	b.n	83f0c <memmove+0xa4>
   83f2e:	bf00      	nop

00083f30 <__malloc_lock>:
   83f30:	4770      	bx	lr
   83f32:	bf00      	nop

00083f34 <__malloc_unlock>:
   83f34:	4770      	bx	lr
   83f36:	bf00      	nop

00083f38 <_Balloc>:
   83f38:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   83f3a:	b570      	push	{r4, r5, r6, lr}
   83f3c:	4605      	mov	r5, r0
   83f3e:	460c      	mov	r4, r1
   83f40:	b152      	cbz	r2, 83f58 <_Balloc+0x20>
   83f42:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
   83f46:	b18b      	cbz	r3, 83f6c <_Balloc+0x34>
   83f48:	6819      	ldr	r1, [r3, #0]
   83f4a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   83f4e:	2200      	movs	r2, #0
   83f50:	4618      	mov	r0, r3
   83f52:	611a      	str	r2, [r3, #16]
   83f54:	60da      	str	r2, [r3, #12]
   83f56:	bd70      	pop	{r4, r5, r6, pc}
   83f58:	2221      	movs	r2, #33	; 0x21
   83f5a:	2104      	movs	r1, #4
   83f5c:	f000 fdec 	bl	84b38 <_calloc_r>
   83f60:	64e8      	str	r0, [r5, #76]	; 0x4c
   83f62:	4602      	mov	r2, r0
   83f64:	2800      	cmp	r0, #0
   83f66:	d1ec      	bne.n	83f42 <_Balloc+0xa>
   83f68:	2000      	movs	r0, #0
   83f6a:	bd70      	pop	{r4, r5, r6, pc}
   83f6c:	2101      	movs	r1, #1
   83f6e:	fa01 f604 	lsl.w	r6, r1, r4
   83f72:	1d72      	adds	r2, r6, #5
   83f74:	4628      	mov	r0, r5
   83f76:	0092      	lsls	r2, r2, #2
   83f78:	f000 fdde 	bl	84b38 <_calloc_r>
   83f7c:	4603      	mov	r3, r0
   83f7e:	2800      	cmp	r0, #0
   83f80:	d0f2      	beq.n	83f68 <_Balloc+0x30>
   83f82:	6044      	str	r4, [r0, #4]
   83f84:	6086      	str	r6, [r0, #8]
   83f86:	e7e2      	b.n	83f4e <_Balloc+0x16>

00083f88 <_Bfree>:
   83f88:	b131      	cbz	r1, 83f98 <_Bfree+0x10>
   83f8a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   83f8c:	684a      	ldr	r2, [r1, #4]
   83f8e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   83f92:	6008      	str	r0, [r1, #0]
   83f94:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   83f98:	4770      	bx	lr
   83f9a:	bf00      	nop

00083f9c <__multadd>:
   83f9c:	b5f0      	push	{r4, r5, r6, r7, lr}
   83f9e:	460c      	mov	r4, r1
   83fa0:	4605      	mov	r5, r0
   83fa2:	690e      	ldr	r6, [r1, #16]
   83fa4:	b083      	sub	sp, #12
   83fa6:	f101 0e14 	add.w	lr, r1, #20
   83faa:	2700      	movs	r7, #0
   83fac:	f8de 1000 	ldr.w	r1, [lr]
   83fb0:	3701      	adds	r7, #1
   83fb2:	b288      	uxth	r0, r1
   83fb4:	0c09      	lsrs	r1, r1, #16
   83fb6:	fb02 3300 	mla	r3, r2, r0, r3
   83fba:	fb02 f101 	mul.w	r1, r2, r1
   83fbe:	b298      	uxth	r0, r3
   83fc0:	eb01 4313 	add.w	r3, r1, r3, lsr #16
   83fc4:	eb00 4103 	add.w	r1, r0, r3, lsl #16
   83fc8:	42be      	cmp	r6, r7
   83fca:	f84e 1b04 	str.w	r1, [lr], #4
   83fce:	ea4f 4313 	mov.w	r3, r3, lsr #16
   83fd2:	dceb      	bgt.n	83fac <__multadd+0x10>
   83fd4:	b13b      	cbz	r3, 83fe6 <__multadd+0x4a>
   83fd6:	68a2      	ldr	r2, [r4, #8]
   83fd8:	4296      	cmp	r6, r2
   83fda:	da07      	bge.n	83fec <__multadd+0x50>
   83fdc:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   83fe0:	3601      	adds	r6, #1
   83fe2:	6153      	str	r3, [r2, #20]
   83fe4:	6126      	str	r6, [r4, #16]
   83fe6:	4620      	mov	r0, r4
   83fe8:	b003      	add	sp, #12
   83fea:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83fec:	6861      	ldr	r1, [r4, #4]
   83fee:	4628      	mov	r0, r5
   83ff0:	3101      	adds	r1, #1
   83ff2:	9301      	str	r3, [sp, #4]
   83ff4:	f7ff ffa0 	bl	83f38 <_Balloc>
   83ff8:	4607      	mov	r7, r0
   83ffa:	6922      	ldr	r2, [r4, #16]
   83ffc:	f104 010c 	add.w	r1, r4, #12
   84000:	3202      	adds	r2, #2
   84002:	0092      	lsls	r2, r2, #2
   84004:	300c      	adds	r0, #12
   84006:	f7ff feb9 	bl	83d7c <memcpy>
   8400a:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   8400c:	6861      	ldr	r1, [r4, #4]
   8400e:	9b01      	ldr	r3, [sp, #4]
   84010:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84014:	6020      	str	r0, [r4, #0]
   84016:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   8401a:	463c      	mov	r4, r7
   8401c:	e7de      	b.n	83fdc <__multadd+0x40>
   8401e:	bf00      	nop

00084020 <__hi0bits>:
   84020:	0c03      	lsrs	r3, r0, #16
   84022:	041b      	lsls	r3, r3, #16
   84024:	b9b3      	cbnz	r3, 84054 <__hi0bits+0x34>
   84026:	0400      	lsls	r0, r0, #16
   84028:	2310      	movs	r3, #16
   8402a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   8402e:	bf04      	itt	eq
   84030:	0200      	lsleq	r0, r0, #8
   84032:	3308      	addeq	r3, #8
   84034:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   84038:	bf04      	itt	eq
   8403a:	0100      	lsleq	r0, r0, #4
   8403c:	3304      	addeq	r3, #4
   8403e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   84042:	bf04      	itt	eq
   84044:	0080      	lsleq	r0, r0, #2
   84046:	3302      	addeq	r3, #2
   84048:	2800      	cmp	r0, #0
   8404a:	db07      	blt.n	8405c <__hi0bits+0x3c>
   8404c:	0042      	lsls	r2, r0, #1
   8404e:	d403      	bmi.n	84058 <__hi0bits+0x38>
   84050:	2020      	movs	r0, #32
   84052:	4770      	bx	lr
   84054:	2300      	movs	r3, #0
   84056:	e7e8      	b.n	8402a <__hi0bits+0xa>
   84058:	1c58      	adds	r0, r3, #1
   8405a:	4770      	bx	lr
   8405c:	4618      	mov	r0, r3
   8405e:	4770      	bx	lr

00084060 <__lo0bits>:
   84060:	6803      	ldr	r3, [r0, #0]
   84062:	f013 0207 	ands.w	r2, r3, #7
   84066:	d007      	beq.n	84078 <__lo0bits+0x18>
   84068:	07d9      	lsls	r1, r3, #31
   8406a:	d420      	bmi.n	840ae <__lo0bits+0x4e>
   8406c:	079a      	lsls	r2, r3, #30
   8406e:	d420      	bmi.n	840b2 <__lo0bits+0x52>
   84070:	089b      	lsrs	r3, r3, #2
   84072:	6003      	str	r3, [r0, #0]
   84074:	2002      	movs	r0, #2
   84076:	4770      	bx	lr
   84078:	b299      	uxth	r1, r3
   8407a:	b909      	cbnz	r1, 84080 <__lo0bits+0x20>
   8407c:	0c1b      	lsrs	r3, r3, #16
   8407e:	2210      	movs	r2, #16
   84080:	f013 0fff 	tst.w	r3, #255	; 0xff
   84084:	bf04      	itt	eq
   84086:	0a1b      	lsreq	r3, r3, #8
   84088:	3208      	addeq	r2, #8
   8408a:	0719      	lsls	r1, r3, #28
   8408c:	bf04      	itt	eq
   8408e:	091b      	lsreq	r3, r3, #4
   84090:	3204      	addeq	r2, #4
   84092:	0799      	lsls	r1, r3, #30
   84094:	bf04      	itt	eq
   84096:	089b      	lsreq	r3, r3, #2
   84098:	3202      	addeq	r2, #2
   8409a:	07d9      	lsls	r1, r3, #31
   8409c:	d404      	bmi.n	840a8 <__lo0bits+0x48>
   8409e:	085b      	lsrs	r3, r3, #1
   840a0:	d101      	bne.n	840a6 <__lo0bits+0x46>
   840a2:	2020      	movs	r0, #32
   840a4:	4770      	bx	lr
   840a6:	3201      	adds	r2, #1
   840a8:	6003      	str	r3, [r0, #0]
   840aa:	4610      	mov	r0, r2
   840ac:	4770      	bx	lr
   840ae:	2000      	movs	r0, #0
   840b0:	4770      	bx	lr
   840b2:	085b      	lsrs	r3, r3, #1
   840b4:	6003      	str	r3, [r0, #0]
   840b6:	2001      	movs	r0, #1
   840b8:	4770      	bx	lr
   840ba:	bf00      	nop

000840bc <__i2b>:
   840bc:	b510      	push	{r4, lr}
   840be:	460c      	mov	r4, r1
   840c0:	2101      	movs	r1, #1
   840c2:	f7ff ff39 	bl	83f38 <_Balloc>
   840c6:	2201      	movs	r2, #1
   840c8:	6144      	str	r4, [r0, #20]
   840ca:	6102      	str	r2, [r0, #16]
   840cc:	bd10      	pop	{r4, pc}
   840ce:	bf00      	nop

000840d0 <__multiply>:
   840d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   840d4:	690e      	ldr	r6, [r1, #16]
   840d6:	6915      	ldr	r5, [r2, #16]
   840d8:	b085      	sub	sp, #20
   840da:	42ae      	cmp	r6, r5
   840dc:	460c      	mov	r4, r1
   840de:	4691      	mov	r9, r2
   840e0:	f2c0 8092 	blt.w	84208 <__multiply+0x138>
   840e4:	462b      	mov	r3, r5
   840e6:	4635      	mov	r5, r6
   840e8:	461e      	mov	r6, r3
   840ea:	68a3      	ldr	r3, [r4, #8]
   840ec:	eb05 0806 	add.w	r8, r5, r6
   840f0:	6861      	ldr	r1, [r4, #4]
   840f2:	4598      	cmp	r8, r3
   840f4:	bfc8      	it	gt
   840f6:	3101      	addgt	r1, #1
   840f8:	f7ff ff1e 	bl	83f38 <_Balloc>
   840fc:	f100 0a14 	add.w	sl, r0, #20
   84100:	eb0a 0b88 	add.w	fp, sl, r8, lsl #2
   84104:	45da      	cmp	sl, fp
   84106:	9001      	str	r0, [sp, #4]
   84108:	d205      	bcs.n	84116 <__multiply+0x46>
   8410a:	4653      	mov	r3, sl
   8410c:	2100      	movs	r1, #0
   8410e:	f843 1b04 	str.w	r1, [r3], #4
   84112:	459b      	cmp	fp, r3
   84114:	d8fb      	bhi.n	8410e <__multiply+0x3e>
   84116:	f109 0914 	add.w	r9, r9, #20
   8411a:	eb09 0386 	add.w	r3, r9, r6, lsl #2
   8411e:	f104 0214 	add.w	r2, r4, #20
   84122:	4599      	cmp	r9, r3
   84124:	eb02 0c85 	add.w	ip, r2, r5, lsl #2
   84128:	d259      	bcs.n	841de <__multiply+0x10e>
   8412a:	f8cd b008 	str.w	fp, [sp, #8]
   8412e:	f8cd 800c 	str.w	r8, [sp, #12]
   84132:	469b      	mov	fp, r3
   84134:	4690      	mov	r8, r2
   84136:	f859 7b04 	ldr.w	r7, [r9], #4
   8413a:	fa1f fe87 	uxth.w	lr, r7
   8413e:	f1be 0f00 	cmp.w	lr, #0
   84142:	d01f      	beq.n	84184 <__multiply+0xb4>
   84144:	4647      	mov	r7, r8
   84146:	4656      	mov	r6, sl
   84148:	2100      	movs	r1, #0
   8414a:	e000      	b.n	8414e <__multiply+0x7e>
   8414c:	4606      	mov	r6, r0
   8414e:	4630      	mov	r0, r6
   84150:	f857 5b04 	ldr.w	r5, [r7], #4
   84154:	6834      	ldr	r4, [r6, #0]
   84156:	b2ab      	uxth	r3, r5
   84158:	b2a2      	uxth	r2, r4
   8415a:	fb0e 2203 	mla	r2, lr, r3, r2
   8415e:	0c2d      	lsrs	r5, r5, #16
   84160:	0c24      	lsrs	r4, r4, #16
   84162:	fb0e 4405 	mla	r4, lr, r5, r4
   84166:	1853      	adds	r3, r2, r1
   84168:	eb04 4113 	add.w	r1, r4, r3, lsr #16
   8416c:	b29a      	uxth	r2, r3
   8416e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   84172:	45bc      	cmp	ip, r7
   84174:	ea4f 4111 	mov.w	r1, r1, lsr #16
   84178:	f840 2b04 	str.w	r2, [r0], #4
   8417c:	d8e6      	bhi.n	8414c <__multiply+0x7c>
   8417e:	6071      	str	r1, [r6, #4]
   84180:	f859 7c04 	ldr.w	r7, [r9, #-4]
   84184:	0c3f      	lsrs	r7, r7, #16
   84186:	d022      	beq.n	841ce <__multiply+0xfe>
   84188:	f8da 3000 	ldr.w	r3, [sl]
   8418c:	2200      	movs	r2, #0
   8418e:	4655      	mov	r5, sl
   84190:	461e      	mov	r6, r3
   84192:	4640      	mov	r0, r8
   84194:	4696      	mov	lr, r2
   84196:	e000      	b.n	8419a <__multiply+0xca>
   84198:	4625      	mov	r5, r4
   8419a:	462c      	mov	r4, r5
   8419c:	8802      	ldrh	r2, [r0, #0]
   8419e:	0c36      	lsrs	r6, r6, #16
   841a0:	fb07 6602 	mla	r6, r7, r2, r6
   841a4:	b299      	uxth	r1, r3
   841a6:	eb06 020e 	add.w	r2, r6, lr
   841aa:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   841ae:	f844 3b04 	str.w	r3, [r4], #4
   841b2:	f850 1b04 	ldr.w	r1, [r0], #4
   841b6:	686e      	ldr	r6, [r5, #4]
   841b8:	0c09      	lsrs	r1, r1, #16
   841ba:	b2b3      	uxth	r3, r6
   841bc:	fb07 3101 	mla	r1, r7, r1, r3
   841c0:	4584      	cmp	ip, r0
   841c2:	eb01 4312 	add.w	r3, r1, r2, lsr #16
   841c6:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   841ca:	d8e5      	bhi.n	84198 <__multiply+0xc8>
   841cc:	606b      	str	r3, [r5, #4]
   841ce:	45cb      	cmp	fp, r9
   841d0:	f10a 0a04 	add.w	sl, sl, #4
   841d4:	d8af      	bhi.n	84136 <__multiply+0x66>
   841d6:	f8dd b008 	ldr.w	fp, [sp, #8]
   841da:	f8dd 800c 	ldr.w	r8, [sp, #12]
   841de:	f1b8 0f00 	cmp.w	r8, #0
   841e2:	dd0b      	ble.n	841fc <__multiply+0x12c>
   841e4:	f85b 3c04 	ldr.w	r3, [fp, #-4]
   841e8:	f1ab 0b04 	sub.w	fp, fp, #4
   841ec:	b11b      	cbz	r3, 841f6 <__multiply+0x126>
   841ee:	e005      	b.n	841fc <__multiply+0x12c>
   841f0:	f85b 3d04 	ldr.w	r3, [fp, #-4]!
   841f4:	b913      	cbnz	r3, 841fc <__multiply+0x12c>
   841f6:	f1b8 0801 	subs.w	r8, r8, #1
   841fa:	d1f9      	bne.n	841f0 <__multiply+0x120>
   841fc:	9801      	ldr	r0, [sp, #4]
   841fe:	f8c0 8010 	str.w	r8, [r0, #16]
   84202:	b005      	add	sp, #20
   84204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84208:	4614      	mov	r4, r2
   8420a:	4689      	mov	r9, r1
   8420c:	e76d      	b.n	840ea <__multiply+0x1a>
   8420e:	bf00      	nop

00084210 <__pow5mult>:
   84210:	f012 0303 	ands.w	r3, r2, #3
   84214:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84218:	4614      	mov	r4, r2
   8421a:	4607      	mov	r7, r0
   8421c:	460e      	mov	r6, r1
   8421e:	d12d      	bne.n	8427c <__pow5mult+0x6c>
   84220:	10a4      	asrs	r4, r4, #2
   84222:	d01c      	beq.n	8425e <__pow5mult+0x4e>
   84224:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   84226:	b395      	cbz	r5, 8428e <__pow5mult+0x7e>
   84228:	07e3      	lsls	r3, r4, #31
   8422a:	f04f 0800 	mov.w	r8, #0
   8422e:	d406      	bmi.n	8423e <__pow5mult+0x2e>
   84230:	1064      	asrs	r4, r4, #1
   84232:	d014      	beq.n	8425e <__pow5mult+0x4e>
   84234:	6828      	ldr	r0, [r5, #0]
   84236:	b1a8      	cbz	r0, 84264 <__pow5mult+0x54>
   84238:	4605      	mov	r5, r0
   8423a:	07e3      	lsls	r3, r4, #31
   8423c:	d5f8      	bpl.n	84230 <__pow5mult+0x20>
   8423e:	4638      	mov	r0, r7
   84240:	4631      	mov	r1, r6
   84242:	462a      	mov	r2, r5
   84244:	f7ff ff44 	bl	840d0 <__multiply>
   84248:	b1b6      	cbz	r6, 84278 <__pow5mult+0x68>
   8424a:	6872      	ldr	r2, [r6, #4]
   8424c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   8424e:	1064      	asrs	r4, r4, #1
   84250:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84254:	6031      	str	r1, [r6, #0]
   84256:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   8425a:	4606      	mov	r6, r0
   8425c:	d1ea      	bne.n	84234 <__pow5mult+0x24>
   8425e:	4630      	mov	r0, r6
   84260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   84264:	4629      	mov	r1, r5
   84266:	462a      	mov	r2, r5
   84268:	4638      	mov	r0, r7
   8426a:	f7ff ff31 	bl	840d0 <__multiply>
   8426e:	6028      	str	r0, [r5, #0]
   84270:	f8c0 8000 	str.w	r8, [r0]
   84274:	4605      	mov	r5, r0
   84276:	e7e0      	b.n	8423a <__pow5mult+0x2a>
   84278:	4606      	mov	r6, r0
   8427a:	e7d9      	b.n	84230 <__pow5mult+0x20>
   8427c:	4a0b      	ldr	r2, [pc, #44]	; (842ac <__pow5mult+0x9c>)
   8427e:	3b01      	subs	r3, #1
   84280:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   84284:	2300      	movs	r3, #0
   84286:	f7ff fe89 	bl	83f9c <__multadd>
   8428a:	4606      	mov	r6, r0
   8428c:	e7c8      	b.n	84220 <__pow5mult+0x10>
   8428e:	2101      	movs	r1, #1
   84290:	4638      	mov	r0, r7
   84292:	f7ff fe51 	bl	83f38 <_Balloc>
   84296:	f240 2171 	movw	r1, #625	; 0x271
   8429a:	2201      	movs	r2, #1
   8429c:	2300      	movs	r3, #0
   8429e:	6141      	str	r1, [r0, #20]
   842a0:	6102      	str	r2, [r0, #16]
   842a2:	4605      	mov	r5, r0
   842a4:	64b8      	str	r0, [r7, #72]	; 0x48
   842a6:	6003      	str	r3, [r0, #0]
   842a8:	e7be      	b.n	84228 <__pow5mult+0x18>
   842aa:	bf00      	nop
   842ac:	00085bc0 	.word	0x00085bc0

000842b0 <__lshift>:
   842b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   842b4:	690f      	ldr	r7, [r1, #16]
   842b6:	ea4f 1962 	mov.w	r9, r2, asr #5
   842ba:	688b      	ldr	r3, [r1, #8]
   842bc:	444f      	add	r7, r9
   842be:	1c7d      	adds	r5, r7, #1
   842c0:	429d      	cmp	r5, r3
   842c2:	460e      	mov	r6, r1
   842c4:	4614      	mov	r4, r2
   842c6:	4680      	mov	r8, r0
   842c8:	6849      	ldr	r1, [r1, #4]
   842ca:	dd04      	ble.n	842d6 <__lshift+0x26>
   842cc:	005b      	lsls	r3, r3, #1
   842ce:	429d      	cmp	r5, r3
   842d0:	f101 0101 	add.w	r1, r1, #1
   842d4:	dcfa      	bgt.n	842cc <__lshift+0x1c>
   842d6:	4640      	mov	r0, r8
   842d8:	f7ff fe2e 	bl	83f38 <_Balloc>
   842dc:	f1b9 0f00 	cmp.w	r9, #0
   842e0:	f100 0114 	add.w	r1, r0, #20
   842e4:	dd09      	ble.n	842fa <__lshift+0x4a>
   842e6:	2300      	movs	r3, #0
   842e8:	469e      	mov	lr, r3
   842ea:	460a      	mov	r2, r1
   842ec:	3301      	adds	r3, #1
   842ee:	454b      	cmp	r3, r9
   842f0:	f842 eb04 	str.w	lr, [r2], #4
   842f4:	d1fa      	bne.n	842ec <__lshift+0x3c>
   842f6:	eb01 0183 	add.w	r1, r1, r3, lsl #2
   842fa:	6932      	ldr	r2, [r6, #16]
   842fc:	f106 0314 	add.w	r3, r6, #20
   84300:	eb03 0e82 	add.w	lr, r3, r2, lsl #2
   84304:	f014 021f 	ands.w	r2, r4, #31
   84308:	d022      	beq.n	84350 <__lshift+0xa0>
   8430a:	f1c2 0920 	rsb	r9, r2, #32
   8430e:	f04f 0a00 	mov.w	sl, #0
   84312:	681c      	ldr	r4, [r3, #0]
   84314:	468c      	mov	ip, r1
   84316:	4094      	lsls	r4, r2
   84318:	ea4a 0404 	orr.w	r4, sl, r4
   8431c:	f841 4b04 	str.w	r4, [r1], #4
   84320:	f853 4b04 	ldr.w	r4, [r3], #4
   84324:	459e      	cmp	lr, r3
   84326:	fa24 fa09 	lsr.w	sl, r4, r9
   8432a:	d8f2      	bhi.n	84312 <__lshift+0x62>
   8432c:	f8cc a004 	str.w	sl, [ip, #4]
   84330:	f1ba 0f00 	cmp.w	sl, #0
   84334:	d000      	beq.n	84338 <__lshift+0x88>
   84336:	1cbd      	adds	r5, r7, #2
   84338:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   8433c:	6872      	ldr	r2, [r6, #4]
   8433e:	3d01      	subs	r5, #1
   84340:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84344:	6105      	str	r5, [r0, #16]
   84346:	6031      	str	r1, [r6, #0]
   84348:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   8434c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84350:	3904      	subs	r1, #4
   84352:	f853 2b04 	ldr.w	r2, [r3], #4
   84356:	459e      	cmp	lr, r3
   84358:	f841 2f04 	str.w	r2, [r1, #4]!
   8435c:	d8f9      	bhi.n	84352 <__lshift+0xa2>
   8435e:	e7eb      	b.n	84338 <__lshift+0x88>

00084360 <__mcmp>:
   84360:	6902      	ldr	r2, [r0, #16]
   84362:	690b      	ldr	r3, [r1, #16]
   84364:	1ad2      	subs	r2, r2, r3
   84366:	d113      	bne.n	84390 <__mcmp+0x30>
   84368:	009b      	lsls	r3, r3, #2
   8436a:	3014      	adds	r0, #20
   8436c:	3114      	adds	r1, #20
   8436e:	4419      	add	r1, r3
   84370:	b410      	push	{r4}
   84372:	4403      	add	r3, r0
   84374:	e001      	b.n	8437a <__mcmp+0x1a>
   84376:	4298      	cmp	r0, r3
   84378:	d20c      	bcs.n	84394 <__mcmp+0x34>
   8437a:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   8437e:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   84382:	4294      	cmp	r4, r2
   84384:	d0f7      	beq.n	84376 <__mcmp+0x16>
   84386:	d309      	bcc.n	8439c <__mcmp+0x3c>
   84388:	2001      	movs	r0, #1
   8438a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8438e:	4770      	bx	lr
   84390:	4610      	mov	r0, r2
   84392:	4770      	bx	lr
   84394:	2000      	movs	r0, #0
   84396:	f85d 4b04 	ldr.w	r4, [sp], #4
   8439a:	4770      	bx	lr
   8439c:	f04f 30ff 	mov.w	r0, #4294967295
   843a0:	f85d 4b04 	ldr.w	r4, [sp], #4
   843a4:	4770      	bx	lr
   843a6:	bf00      	nop

000843a8 <__mdiff>:
   843a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   843ac:	460c      	mov	r4, r1
   843ae:	4605      	mov	r5, r0
   843b0:	4611      	mov	r1, r2
   843b2:	4620      	mov	r0, r4
   843b4:	4691      	mov	r9, r2
   843b6:	f7ff ffd3 	bl	84360 <__mcmp>
   843ba:	1e06      	subs	r6, r0, #0
   843bc:	d05d      	beq.n	8447a <__mdiff+0xd2>
   843be:	db56      	blt.n	8446e <__mdiff+0xc6>
   843c0:	f04f 0a00 	mov.w	sl, #0
   843c4:	4628      	mov	r0, r5
   843c6:	6861      	ldr	r1, [r4, #4]
   843c8:	f7ff fdb6 	bl	83f38 <_Balloc>
   843cc:	f109 0314 	add.w	r3, r9, #20
   843d0:	4680      	mov	r8, r0
   843d2:	461e      	mov	r6, r3
   843d4:	6927      	ldr	r7, [r4, #16]
   843d6:	f8d9 2010 	ldr.w	r2, [r9, #16]
   843da:	f104 0e14 	add.w	lr, r4, #20
   843de:	4675      	mov	r5, lr
   843e0:	f8c0 a00c 	str.w	sl, [r0, #12]
   843e4:	f100 0414 	add.w	r4, r0, #20
   843e8:	eb0e 0e87 	add.w	lr, lr, r7, lsl #2
   843ec:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   843f0:	f04f 0a00 	mov.w	sl, #0
   843f4:	f855 2b04 	ldr.w	r2, [r5], #4
   843f8:	f856 1b04 	ldr.w	r1, [r6], #4
   843fc:	b290      	uxth	r0, r2
   843fe:	eb00 030a 	add.w	r3, r0, sl
   84402:	b288      	uxth	r0, r1
   84404:	0c09      	lsrs	r1, r1, #16
   84406:	1a1b      	subs	r3, r3, r0
   84408:	ebc1 4212 	rsb	r2, r1, r2, lsr #16
   8440c:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84410:	b29b      	uxth	r3, r3
   84412:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84416:	45b4      	cmp	ip, r6
   84418:	f844 3b04 	str.w	r3, [r4], #4
   8441c:	ea4f 4a22 	mov.w	sl, r2, asr #16
   84420:	46a9      	mov	r9, r5
   84422:	d8e7      	bhi.n	843f4 <__mdiff+0x4c>
   84424:	45ae      	cmp	lr, r5
   84426:	4626      	mov	r6, r4
   84428:	d915      	bls.n	84456 <__mdiff+0xae>
   8442a:	f859 0b04 	ldr.w	r0, [r9], #4
   8442e:	b283      	uxth	r3, r0
   84430:	4453      	add	r3, sl
   84432:	0c00      	lsrs	r0, r0, #16
   84434:	eb00 4123 	add.w	r1, r0, r3, asr #16
   84438:	b29b      	uxth	r3, r3
   8443a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   8443e:	45ce      	cmp	lr, r9
   84440:	f844 3b04 	str.w	r3, [r4], #4
   84444:	ea4f 4a21 	mov.w	sl, r1, asr #16
   84448:	d8ef      	bhi.n	8442a <__mdiff+0x82>
   8444a:	43ed      	mvns	r5, r5
   8444c:	4475      	add	r5, lr
   8444e:	f025 0403 	bic.w	r4, r5, #3
   84452:	3404      	adds	r4, #4
   84454:	4434      	add	r4, r6
   84456:	3c04      	subs	r4, #4
   84458:	b923      	cbnz	r3, 84464 <__mdiff+0xbc>
   8445a:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   8445e:	3f01      	subs	r7, #1
   84460:	2b00      	cmp	r3, #0
   84462:	d0fa      	beq.n	8445a <__mdiff+0xb2>
   84464:	4640      	mov	r0, r8
   84466:	f8c8 7010 	str.w	r7, [r8, #16]
   8446a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8446e:	4623      	mov	r3, r4
   84470:	f04f 0a01 	mov.w	sl, #1
   84474:	464c      	mov	r4, r9
   84476:	4699      	mov	r9, r3
   84478:	e7a4      	b.n	843c4 <__mdiff+0x1c>
   8447a:	4628      	mov	r0, r5
   8447c:	4631      	mov	r1, r6
   8447e:	f7ff fd5b 	bl	83f38 <_Balloc>
   84482:	2301      	movs	r3, #1
   84484:	6146      	str	r6, [r0, #20]
   84486:	6103      	str	r3, [r0, #16]
   84488:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0008448c <__d2b>:
   8448c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8448e:	2101      	movs	r1, #1
   84490:	b083      	sub	sp, #12
   84492:	461c      	mov	r4, r3
   84494:	f3c3 550a 	ubfx	r5, r3, #20, #11
   84498:	4616      	mov	r6, r2
   8449a:	f7ff fd4d 	bl	83f38 <_Balloc>
   8449e:	f3c4 0413 	ubfx	r4, r4, #0, #20
   844a2:	4607      	mov	r7, r0
   844a4:	b10d      	cbz	r5, 844aa <__d2b+0x1e>
   844a6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   844aa:	9401      	str	r4, [sp, #4]
   844ac:	b306      	cbz	r6, 844f0 <__d2b+0x64>
   844ae:	a802      	add	r0, sp, #8
   844b0:	f840 6d08 	str.w	r6, [r0, #-8]!
   844b4:	f7ff fdd4 	bl	84060 <__lo0bits>
   844b8:	2800      	cmp	r0, #0
   844ba:	d130      	bne.n	8451e <__d2b+0x92>
   844bc:	e89d 000c 	ldmia.w	sp, {r2, r3}
   844c0:	617a      	str	r2, [r7, #20]
   844c2:	2b00      	cmp	r3, #0
   844c4:	bf14      	ite	ne
   844c6:	2402      	movne	r4, #2
   844c8:	2401      	moveq	r4, #1
   844ca:	61bb      	str	r3, [r7, #24]
   844cc:	613c      	str	r4, [r7, #16]
   844ce:	b9d5      	cbnz	r5, 84506 <__d2b+0x7a>
   844d0:	9a08      	ldr	r2, [sp, #32]
   844d2:	eb07 0384 	add.w	r3, r7, r4, lsl #2
   844d6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   844da:	6010      	str	r0, [r2, #0]
   844dc:	6918      	ldr	r0, [r3, #16]
   844de:	f7ff fd9f 	bl	84020 <__hi0bits>
   844e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   844e4:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   844e8:	6018      	str	r0, [r3, #0]
   844ea:	4638      	mov	r0, r7
   844ec:	b003      	add	sp, #12
   844ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
   844f0:	a801      	add	r0, sp, #4
   844f2:	f7ff fdb5 	bl	84060 <__lo0bits>
   844f6:	9b01      	ldr	r3, [sp, #4]
   844f8:	2201      	movs	r2, #1
   844fa:	4614      	mov	r4, r2
   844fc:	3020      	adds	r0, #32
   844fe:	613a      	str	r2, [r7, #16]
   84500:	617b      	str	r3, [r7, #20]
   84502:	2d00      	cmp	r5, #0
   84504:	d0e4      	beq.n	844d0 <__d2b+0x44>
   84506:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   8450a:	9a08      	ldr	r2, [sp, #32]
   8450c:	4403      	add	r3, r0
   8450e:	6013      	str	r3, [r2, #0]
   84510:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84512:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   84516:	6018      	str	r0, [r3, #0]
   84518:	4638      	mov	r0, r7
   8451a:	b003      	add	sp, #12
   8451c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8451e:	9b01      	ldr	r3, [sp, #4]
   84520:	f1c0 0120 	rsb	r1, r0, #32
   84524:	9a00      	ldr	r2, [sp, #0]
   84526:	fa03 f101 	lsl.w	r1, r3, r1
   8452a:	430a      	orrs	r2, r1
   8452c:	40c3      	lsrs	r3, r0
   8452e:	9301      	str	r3, [sp, #4]
   84530:	617a      	str	r2, [r7, #20]
   84532:	e7c6      	b.n	844c2 <__d2b+0x36>

00084534 <_realloc_r>:
   84534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84538:	4617      	mov	r7, r2
   8453a:	b083      	sub	sp, #12
   8453c:	460d      	mov	r5, r1
   8453e:	2900      	cmp	r1, #0
   84540:	f000 80e2 	beq.w	84708 <_realloc_r+0x1d4>
   84544:	4681      	mov	r9, r0
   84546:	f107 040b 	add.w	r4, r7, #11
   8454a:	f7ff fcf1 	bl	83f30 <__malloc_lock>
   8454e:	f855 3c04 	ldr.w	r3, [r5, #-4]
   84552:	2c16      	cmp	r4, #22
   84554:	f023 0603 	bic.w	r6, r3, #3
   84558:	f1a5 0808 	sub.w	r8, r5, #8
   8455c:	d84b      	bhi.n	845f6 <_realloc_r+0xc2>
   8455e:	2210      	movs	r2, #16
   84560:	4614      	mov	r4, r2
   84562:	42a7      	cmp	r7, r4
   84564:	d84c      	bhi.n	84600 <_realloc_r+0xcc>
   84566:	4296      	cmp	r6, r2
   84568:	da51      	bge.n	8460e <_realloc_r+0xda>
   8456a:	f8df b3a4 	ldr.w	fp, [pc, #932]	; 84910 <_realloc_r+0x3dc>
   8456e:	eb08 0106 	add.w	r1, r8, r6
   84572:	f8db 0008 	ldr.w	r0, [fp, #8]
   84576:	4288      	cmp	r0, r1
   84578:	f000 80d3 	beq.w	84722 <_realloc_r+0x1ee>
   8457c:	6848      	ldr	r0, [r1, #4]
   8457e:	f020 0e01 	bic.w	lr, r0, #1
   84582:	448e      	add	lr, r1
   84584:	f8de e004 	ldr.w	lr, [lr, #4]
   84588:	f01e 0f01 	tst.w	lr, #1
   8458c:	d154      	bne.n	84638 <_realloc_r+0x104>
   8458e:	f020 0003 	bic.w	r0, r0, #3
   84592:	4430      	add	r0, r6
   84594:	4290      	cmp	r0, r2
   84596:	f280 80bd 	bge.w	84714 <_realloc_r+0x1e0>
   8459a:	07db      	lsls	r3, r3, #31
   8459c:	f100 8090 	bmi.w	846c0 <_realloc_r+0x18c>
   845a0:	f855 3c08 	ldr.w	r3, [r5, #-8]
   845a4:	ebc3 0a08 	rsb	sl, r3, r8
   845a8:	f8da 3004 	ldr.w	r3, [sl, #4]
   845ac:	f023 0303 	bic.w	r3, r3, #3
   845b0:	eb00 0e03 	add.w	lr, r0, r3
   845b4:	4596      	cmp	lr, r2
   845b6:	db49      	blt.n	8464c <_realloc_r+0x118>
   845b8:	4657      	mov	r7, sl
   845ba:	68cb      	ldr	r3, [r1, #12]
   845bc:	6889      	ldr	r1, [r1, #8]
   845be:	1f32      	subs	r2, r6, #4
   845c0:	60cb      	str	r3, [r1, #12]
   845c2:	6099      	str	r1, [r3, #8]
   845c4:	f857 1f08 	ldr.w	r1, [r7, #8]!
   845c8:	f8da 300c 	ldr.w	r3, [sl, #12]
   845cc:	2a24      	cmp	r2, #36	; 0x24
   845ce:	60cb      	str	r3, [r1, #12]
   845d0:	6099      	str	r1, [r3, #8]
   845d2:	f200 8133 	bhi.w	8483c <_realloc_r+0x308>
   845d6:	2a13      	cmp	r2, #19
   845d8:	f240 80fa 	bls.w	847d0 <_realloc_r+0x29c>
   845dc:	682b      	ldr	r3, [r5, #0]
   845de:	2a1b      	cmp	r2, #27
   845e0:	f8ca 3008 	str.w	r3, [sl, #8]
   845e4:	686b      	ldr	r3, [r5, #4]
   845e6:	f8ca 300c 	str.w	r3, [sl, #12]
   845ea:	f200 813b 	bhi.w	84864 <_realloc_r+0x330>
   845ee:	3508      	adds	r5, #8
   845f0:	f10a 0310 	add.w	r3, sl, #16
   845f4:	e0ed      	b.n	847d2 <_realloc_r+0x29e>
   845f6:	f024 0407 	bic.w	r4, r4, #7
   845fa:	2c00      	cmp	r4, #0
   845fc:	4622      	mov	r2, r4
   845fe:	dab0      	bge.n	84562 <_realloc_r+0x2e>
   84600:	230c      	movs	r3, #12
   84602:	2000      	movs	r0, #0
   84604:	f8c9 3000 	str.w	r3, [r9]
   84608:	b003      	add	sp, #12
   8460a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8460e:	462f      	mov	r7, r5
   84610:	1b32      	subs	r2, r6, r4
   84612:	2a0f      	cmp	r2, #15
   84614:	f003 0301 	and.w	r3, r3, #1
   84618:	d840      	bhi.n	8469c <_realloc_r+0x168>
   8461a:	4333      	orrs	r3, r6
   8461c:	f8c8 3004 	str.w	r3, [r8, #4]
   84620:	4446      	add	r6, r8
   84622:	6873      	ldr	r3, [r6, #4]
   84624:	f043 0301 	orr.w	r3, r3, #1
   84628:	6073      	str	r3, [r6, #4]
   8462a:	4648      	mov	r0, r9
   8462c:	f7ff fc82 	bl	83f34 <__malloc_unlock>
   84630:	4638      	mov	r0, r7
   84632:	b003      	add	sp, #12
   84634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84638:	07d9      	lsls	r1, r3, #31
   8463a:	d441      	bmi.n	846c0 <_realloc_r+0x18c>
   8463c:	f855 3c08 	ldr.w	r3, [r5, #-8]
   84640:	ebc3 0a08 	rsb	sl, r3, r8
   84644:	f8da 3004 	ldr.w	r3, [sl, #4]
   84648:	f023 0303 	bic.w	r3, r3, #3
   8464c:	4433      	add	r3, r6
   8464e:	4293      	cmp	r3, r2
   84650:	db36      	blt.n	846c0 <_realloc_r+0x18c>
   84652:	4657      	mov	r7, sl
   84654:	f8da 100c 	ldr.w	r1, [sl, #12]
   84658:	f857 0f08 	ldr.w	r0, [r7, #8]!
   8465c:	1f32      	subs	r2, r6, #4
   8465e:	2a24      	cmp	r2, #36	; 0x24
   84660:	60c1      	str	r1, [r0, #12]
   84662:	6088      	str	r0, [r1, #8]
   84664:	f200 80f5 	bhi.w	84852 <_realloc_r+0x31e>
   84668:	2a13      	cmp	r2, #19
   8466a:	f240 80f0 	bls.w	8484e <_realloc_r+0x31a>
   8466e:	6829      	ldr	r1, [r5, #0]
   84670:	2a1b      	cmp	r2, #27
   84672:	f8ca 1008 	str.w	r1, [sl, #8]
   84676:	6869      	ldr	r1, [r5, #4]
   84678:	f8ca 100c 	str.w	r1, [sl, #12]
   8467c:	f200 8107 	bhi.w	8488e <_realloc_r+0x35a>
   84680:	3508      	adds	r5, #8
   84682:	f10a 0210 	add.w	r2, sl, #16
   84686:	6829      	ldr	r1, [r5, #0]
   84688:	461e      	mov	r6, r3
   8468a:	6011      	str	r1, [r2, #0]
   8468c:	6869      	ldr	r1, [r5, #4]
   8468e:	46d0      	mov	r8, sl
   84690:	6051      	str	r1, [r2, #4]
   84692:	68ab      	ldr	r3, [r5, #8]
   84694:	6093      	str	r3, [r2, #8]
   84696:	f8da 3004 	ldr.w	r3, [sl, #4]
   8469a:	e7b9      	b.n	84610 <_realloc_r+0xdc>
   8469c:	eb08 0104 	add.w	r1, r8, r4
   846a0:	4323      	orrs	r3, r4
   846a2:	f042 0001 	orr.w	r0, r2, #1
   846a6:	f8c8 3004 	str.w	r3, [r8, #4]
   846aa:	440a      	add	r2, r1
   846ac:	6048      	str	r0, [r1, #4]
   846ae:	6853      	ldr	r3, [r2, #4]
   846b0:	3108      	adds	r1, #8
   846b2:	f043 0301 	orr.w	r3, r3, #1
   846b6:	6053      	str	r3, [r2, #4]
   846b8:	4648      	mov	r0, r9
   846ba:	f7fe ffb3 	bl	83624 <_free_r>
   846be:	e7b4      	b.n	8462a <_realloc_r+0xf6>
   846c0:	4639      	mov	r1, r7
   846c2:	4648      	mov	r0, r9
   846c4:	f7ff f88a 	bl	837dc <_malloc_r>
   846c8:	4607      	mov	r7, r0
   846ca:	2800      	cmp	r0, #0
   846cc:	d0ad      	beq.n	8462a <_realloc_r+0xf6>
   846ce:	f855 3c04 	ldr.w	r3, [r5, #-4]
   846d2:	f1a0 0108 	sub.w	r1, r0, #8
   846d6:	f023 0201 	bic.w	r2, r3, #1
   846da:	4442      	add	r2, r8
   846dc:	4291      	cmp	r1, r2
   846de:	f000 80a6 	beq.w	8482e <_realloc_r+0x2fa>
   846e2:	1f32      	subs	r2, r6, #4
   846e4:	2a24      	cmp	r2, #36	; 0x24
   846e6:	f200 8093 	bhi.w	84810 <_realloc_r+0x2dc>
   846ea:	2a13      	cmp	r2, #19
   846ec:	d865      	bhi.n	847ba <_realloc_r+0x286>
   846ee:	4603      	mov	r3, r0
   846f0:	462a      	mov	r2, r5
   846f2:	6811      	ldr	r1, [r2, #0]
   846f4:	6019      	str	r1, [r3, #0]
   846f6:	6851      	ldr	r1, [r2, #4]
   846f8:	6059      	str	r1, [r3, #4]
   846fa:	6892      	ldr	r2, [r2, #8]
   846fc:	609a      	str	r2, [r3, #8]
   846fe:	4629      	mov	r1, r5
   84700:	4648      	mov	r0, r9
   84702:	f7fe ff8f 	bl	83624 <_free_r>
   84706:	e790      	b.n	8462a <_realloc_r+0xf6>
   84708:	4611      	mov	r1, r2
   8470a:	b003      	add	sp, #12
   8470c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84710:	f7ff b864 	b.w	837dc <_malloc_r>
   84714:	68ca      	ldr	r2, [r1, #12]
   84716:	6889      	ldr	r1, [r1, #8]
   84718:	462f      	mov	r7, r5
   8471a:	60ca      	str	r2, [r1, #12]
   8471c:	4606      	mov	r6, r0
   8471e:	6091      	str	r1, [r2, #8]
   84720:	e776      	b.n	84610 <_realloc_r+0xdc>
   84722:	6841      	ldr	r1, [r0, #4]
   84724:	f104 0010 	add.w	r0, r4, #16
   84728:	f021 0103 	bic.w	r1, r1, #3
   8472c:	4431      	add	r1, r6
   8472e:	4281      	cmp	r1, r0
   84730:	da5a      	bge.n	847e8 <_realloc_r+0x2b4>
   84732:	07db      	lsls	r3, r3, #31
   84734:	d4c4      	bmi.n	846c0 <_realloc_r+0x18c>
   84736:	f855 3c08 	ldr.w	r3, [r5, #-8]
   8473a:	ebc3 0a08 	rsb	sl, r3, r8
   8473e:	f8da 3004 	ldr.w	r3, [sl, #4]
   84742:	f023 0303 	bic.w	r3, r3, #3
   84746:	eb01 0c03 	add.w	ip, r1, r3
   8474a:	4560      	cmp	r0, ip
   8474c:	f73f af7e 	bgt.w	8464c <_realloc_r+0x118>
   84750:	4657      	mov	r7, sl
   84752:	f8da 300c 	ldr.w	r3, [sl, #12]
   84756:	f857 1f08 	ldr.w	r1, [r7, #8]!
   8475a:	1f32      	subs	r2, r6, #4
   8475c:	2a24      	cmp	r2, #36	; 0x24
   8475e:	60cb      	str	r3, [r1, #12]
   84760:	6099      	str	r1, [r3, #8]
   84762:	f200 80b6 	bhi.w	848d2 <_realloc_r+0x39e>
   84766:	2a13      	cmp	r2, #19
   84768:	f240 80a7 	bls.w	848ba <_realloc_r+0x386>
   8476c:	682b      	ldr	r3, [r5, #0]
   8476e:	2a1b      	cmp	r2, #27
   84770:	f8ca 3008 	str.w	r3, [sl, #8]
   84774:	686b      	ldr	r3, [r5, #4]
   84776:	f8ca 300c 	str.w	r3, [sl, #12]
   8477a:	f200 80b3 	bhi.w	848e4 <_realloc_r+0x3b0>
   8477e:	3508      	adds	r5, #8
   84780:	f10a 0310 	add.w	r3, sl, #16
   84784:	682a      	ldr	r2, [r5, #0]
   84786:	601a      	str	r2, [r3, #0]
   84788:	686a      	ldr	r2, [r5, #4]
   8478a:	605a      	str	r2, [r3, #4]
   8478c:	68aa      	ldr	r2, [r5, #8]
   8478e:	609a      	str	r2, [r3, #8]
   84790:	ebc4 030c 	rsb	r3, r4, ip
   84794:	eb0a 0204 	add.w	r2, sl, r4
   84798:	f043 0301 	orr.w	r3, r3, #1
   8479c:	f8cb 2008 	str.w	r2, [fp, #8]
   847a0:	6053      	str	r3, [r2, #4]
   847a2:	f8da 3004 	ldr.w	r3, [sl, #4]
   847a6:	4648      	mov	r0, r9
   847a8:	f003 0301 	and.w	r3, r3, #1
   847ac:	431c      	orrs	r4, r3
   847ae:	f8ca 4004 	str.w	r4, [sl, #4]
   847b2:	f7ff fbbf 	bl	83f34 <__malloc_unlock>
   847b6:	4638      	mov	r0, r7
   847b8:	e73b      	b.n	84632 <_realloc_r+0xfe>
   847ba:	682b      	ldr	r3, [r5, #0]
   847bc:	2a1b      	cmp	r2, #27
   847be:	6003      	str	r3, [r0, #0]
   847c0:	686b      	ldr	r3, [r5, #4]
   847c2:	6043      	str	r3, [r0, #4]
   847c4:	d828      	bhi.n	84818 <_realloc_r+0x2e4>
   847c6:	f100 0308 	add.w	r3, r0, #8
   847ca:	f105 0208 	add.w	r2, r5, #8
   847ce:	e790      	b.n	846f2 <_realloc_r+0x1be>
   847d0:	463b      	mov	r3, r7
   847d2:	682a      	ldr	r2, [r5, #0]
   847d4:	4676      	mov	r6, lr
   847d6:	601a      	str	r2, [r3, #0]
   847d8:	686a      	ldr	r2, [r5, #4]
   847da:	46d0      	mov	r8, sl
   847dc:	605a      	str	r2, [r3, #4]
   847de:	68aa      	ldr	r2, [r5, #8]
   847e0:	609a      	str	r2, [r3, #8]
   847e2:	f8da 3004 	ldr.w	r3, [sl, #4]
   847e6:	e713      	b.n	84610 <_realloc_r+0xdc>
   847e8:	1b0b      	subs	r3, r1, r4
   847ea:	eb08 0204 	add.w	r2, r8, r4
   847ee:	f043 0301 	orr.w	r3, r3, #1
   847f2:	f8cb 2008 	str.w	r2, [fp, #8]
   847f6:	6053      	str	r3, [r2, #4]
   847f8:	f855 3c04 	ldr.w	r3, [r5, #-4]
   847fc:	4648      	mov	r0, r9
   847fe:	f003 0301 	and.w	r3, r3, #1
   84802:	431c      	orrs	r4, r3
   84804:	f845 4c04 	str.w	r4, [r5, #-4]
   84808:	f7ff fb94 	bl	83f34 <__malloc_unlock>
   8480c:	4628      	mov	r0, r5
   8480e:	e710      	b.n	84632 <_realloc_r+0xfe>
   84810:	4629      	mov	r1, r5
   84812:	f7ff fb29 	bl	83e68 <memmove>
   84816:	e772      	b.n	846fe <_realloc_r+0x1ca>
   84818:	68ab      	ldr	r3, [r5, #8]
   8481a:	2a24      	cmp	r2, #36	; 0x24
   8481c:	6083      	str	r3, [r0, #8]
   8481e:	68eb      	ldr	r3, [r5, #12]
   84820:	60c3      	str	r3, [r0, #12]
   84822:	d02b      	beq.n	8487c <_realloc_r+0x348>
   84824:	f100 0310 	add.w	r3, r0, #16
   84828:	f105 0210 	add.w	r2, r5, #16
   8482c:	e761      	b.n	846f2 <_realloc_r+0x1be>
   8482e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84832:	462f      	mov	r7, r5
   84834:	f022 0203 	bic.w	r2, r2, #3
   84838:	4416      	add	r6, r2
   8483a:	e6e9      	b.n	84610 <_realloc_r+0xdc>
   8483c:	4629      	mov	r1, r5
   8483e:	4638      	mov	r0, r7
   84840:	4676      	mov	r6, lr
   84842:	46d0      	mov	r8, sl
   84844:	f7ff fb10 	bl	83e68 <memmove>
   84848:	f8da 3004 	ldr.w	r3, [sl, #4]
   8484c:	e6e0      	b.n	84610 <_realloc_r+0xdc>
   8484e:	463a      	mov	r2, r7
   84850:	e719      	b.n	84686 <_realloc_r+0x152>
   84852:	4629      	mov	r1, r5
   84854:	4638      	mov	r0, r7
   84856:	461e      	mov	r6, r3
   84858:	46d0      	mov	r8, sl
   8485a:	f7ff fb05 	bl	83e68 <memmove>
   8485e:	f8da 3004 	ldr.w	r3, [sl, #4]
   84862:	e6d5      	b.n	84610 <_realloc_r+0xdc>
   84864:	68ab      	ldr	r3, [r5, #8]
   84866:	2a24      	cmp	r2, #36	; 0x24
   84868:	f8ca 3010 	str.w	r3, [sl, #16]
   8486c:	68eb      	ldr	r3, [r5, #12]
   8486e:	f8ca 3014 	str.w	r3, [sl, #20]
   84872:	d018      	beq.n	848a6 <_realloc_r+0x372>
   84874:	3510      	adds	r5, #16
   84876:	f10a 0318 	add.w	r3, sl, #24
   8487a:	e7aa      	b.n	847d2 <_realloc_r+0x29e>
   8487c:	692a      	ldr	r2, [r5, #16]
   8487e:	f100 0318 	add.w	r3, r0, #24
   84882:	6102      	str	r2, [r0, #16]
   84884:	6969      	ldr	r1, [r5, #20]
   84886:	f105 0218 	add.w	r2, r5, #24
   8488a:	6141      	str	r1, [r0, #20]
   8488c:	e731      	b.n	846f2 <_realloc_r+0x1be>
   8488e:	68a9      	ldr	r1, [r5, #8]
   84890:	2a24      	cmp	r2, #36	; 0x24
   84892:	f8ca 1010 	str.w	r1, [sl, #16]
   84896:	68e9      	ldr	r1, [r5, #12]
   84898:	f8ca 1014 	str.w	r1, [sl, #20]
   8489c:	d00f      	beq.n	848be <_realloc_r+0x38a>
   8489e:	3510      	adds	r5, #16
   848a0:	f10a 0218 	add.w	r2, sl, #24
   848a4:	e6ef      	b.n	84686 <_realloc_r+0x152>
   848a6:	692a      	ldr	r2, [r5, #16]
   848a8:	f10a 0320 	add.w	r3, sl, #32
   848ac:	f8ca 2018 	str.w	r2, [sl, #24]
   848b0:	696a      	ldr	r2, [r5, #20]
   848b2:	3518      	adds	r5, #24
   848b4:	f8ca 201c 	str.w	r2, [sl, #28]
   848b8:	e78b      	b.n	847d2 <_realloc_r+0x29e>
   848ba:	463b      	mov	r3, r7
   848bc:	e762      	b.n	84784 <_realloc_r+0x250>
   848be:	6929      	ldr	r1, [r5, #16]
   848c0:	f10a 0220 	add.w	r2, sl, #32
   848c4:	f8ca 1018 	str.w	r1, [sl, #24]
   848c8:	6969      	ldr	r1, [r5, #20]
   848ca:	3518      	adds	r5, #24
   848cc:	f8ca 101c 	str.w	r1, [sl, #28]
   848d0:	e6d9      	b.n	84686 <_realloc_r+0x152>
   848d2:	4629      	mov	r1, r5
   848d4:	4638      	mov	r0, r7
   848d6:	f8cd c004 	str.w	ip, [sp, #4]
   848da:	f7ff fac5 	bl	83e68 <memmove>
   848de:	f8dd c004 	ldr.w	ip, [sp, #4]
   848e2:	e755      	b.n	84790 <_realloc_r+0x25c>
   848e4:	68ab      	ldr	r3, [r5, #8]
   848e6:	2a24      	cmp	r2, #36	; 0x24
   848e8:	f8ca 3010 	str.w	r3, [sl, #16]
   848ec:	68eb      	ldr	r3, [r5, #12]
   848ee:	f8ca 3014 	str.w	r3, [sl, #20]
   848f2:	d003      	beq.n	848fc <_realloc_r+0x3c8>
   848f4:	3510      	adds	r5, #16
   848f6:	f10a 0318 	add.w	r3, sl, #24
   848fa:	e743      	b.n	84784 <_realloc_r+0x250>
   848fc:	692a      	ldr	r2, [r5, #16]
   848fe:	f10a 0320 	add.w	r3, sl, #32
   84902:	f8ca 2018 	str.w	r2, [sl, #24]
   84906:	696a      	ldr	r2, [r5, #20]
   84908:	3518      	adds	r5, #24
   8490a:	f8ca 201c 	str.w	r2, [sl, #28]
   8490e:	e739      	b.n	84784 <_realloc_r+0x250>
   84910:	200705dc 	.word	0x200705dc

00084914 <__fpclassifyd>:
   84914:	b410      	push	{r4}
   84916:	f031 4400 	bics.w	r4, r1, #2147483648	; 0x80000000
   8491a:	d008      	beq.n	8492e <__fpclassifyd+0x1a>
   8491c:	4b11      	ldr	r3, [pc, #68]	; (84964 <__fpclassifyd+0x50>)
   8491e:	f5a1 1280 	sub.w	r2, r1, #1048576	; 0x100000
   84922:	429a      	cmp	r2, r3
   84924:	d808      	bhi.n	84938 <__fpclassifyd+0x24>
   84926:	2004      	movs	r0, #4
   84928:	f85d 4b04 	ldr.w	r4, [sp], #4
   8492c:	4770      	bx	lr
   8492e:	b918      	cbnz	r0, 84938 <__fpclassifyd+0x24>
   84930:	2002      	movs	r0, #2
   84932:	f85d 4b04 	ldr.w	r4, [sp], #4
   84936:	4770      	bx	lr
   84938:	f101 41ff 	add.w	r1, r1, #2139095040	; 0x7f800000
   8493c:	4b09      	ldr	r3, [pc, #36]	; (84964 <__fpclassifyd+0x50>)
   8493e:	f501 01e0 	add.w	r1, r1, #7340032	; 0x700000
   84942:	4299      	cmp	r1, r3
   84944:	d9ef      	bls.n	84926 <__fpclassifyd+0x12>
   84946:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
   8494a:	d201      	bcs.n	84950 <__fpclassifyd+0x3c>
   8494c:	2003      	movs	r0, #3
   8494e:	e7eb      	b.n	84928 <__fpclassifyd+0x14>
   84950:	4b05      	ldr	r3, [pc, #20]	; (84968 <__fpclassifyd+0x54>)
   84952:	429c      	cmp	r4, r3
   84954:	d001      	beq.n	8495a <__fpclassifyd+0x46>
   84956:	2000      	movs	r0, #0
   84958:	e7e6      	b.n	84928 <__fpclassifyd+0x14>
   8495a:	fab0 f080 	clz	r0, r0
   8495e:	0940      	lsrs	r0, r0, #5
   84960:	e7e2      	b.n	84928 <__fpclassifyd+0x14>
   84962:	bf00      	nop
   84964:	7fdfffff 	.word	0x7fdfffff
   84968:	7ff00000 	.word	0x7ff00000

0008496c <_sbrk_r>:
   8496c:	b538      	push	{r3, r4, r5, lr}
   8496e:	4c07      	ldr	r4, [pc, #28]	; (8498c <_sbrk_r+0x20>)
   84970:	2300      	movs	r3, #0
   84972:	4605      	mov	r5, r0
   84974:	4608      	mov	r0, r1
   84976:	6023      	str	r3, [r4, #0]
   84978:	f7fc fa7a 	bl	80e70 <_sbrk>
   8497c:	1c43      	adds	r3, r0, #1
   8497e:	d000      	beq.n	84982 <_sbrk_r+0x16>
   84980:	bd38      	pop	{r3, r4, r5, pc}
   84982:	6823      	ldr	r3, [r4, #0]
   84984:	2b00      	cmp	r3, #0
   84986:	d0fb      	beq.n	84980 <_sbrk_r+0x14>
   84988:	602b      	str	r3, [r5, #0]
   8498a:	bd38      	pop	{r3, r4, r5, pc}
   8498c:	20070ad8 	.word	0x20070ad8

00084990 <__ssprint_r>:
   84990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84994:	6893      	ldr	r3, [r2, #8]
   84996:	b083      	sub	sp, #12
   84998:	4691      	mov	r9, r2
   8499a:	f8d2 8000 	ldr.w	r8, [r2]
   8499e:	2b00      	cmp	r3, #0
   849a0:	d072      	beq.n	84a88 <__ssprint_r+0xf8>
   849a2:	f04f 0b00 	mov.w	fp, #0
   849a6:	460d      	mov	r5, r1
   849a8:	465c      	mov	r4, fp
   849aa:	4607      	mov	r7, r0
   849ac:	688b      	ldr	r3, [r1, #8]
   849ae:	6808      	ldr	r0, [r1, #0]
   849b0:	2c00      	cmp	r4, #0
   849b2:	d045      	beq.n	84a40 <__ssprint_r+0xb0>
   849b4:	429c      	cmp	r4, r3
   849b6:	461e      	mov	r6, r3
   849b8:	469a      	mov	sl, r3
   849ba:	d348      	bcc.n	84a4e <__ssprint_r+0xbe>
   849bc:	89ab      	ldrh	r3, [r5, #12]
   849be:	f413 6f90 	tst.w	r3, #1152	; 0x480
   849c2:	d02d      	beq.n	84a20 <__ssprint_r+0x90>
   849c4:	696e      	ldr	r6, [r5, #20]
   849c6:	6929      	ldr	r1, [r5, #16]
   849c8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
   849cc:	ebc1 0a00 	rsb	sl, r1, r0
   849d0:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
   849d4:	1c60      	adds	r0, r4, #1
   849d6:	1076      	asrs	r6, r6, #1
   849d8:	4450      	add	r0, sl
   849da:	4286      	cmp	r6, r0
   849dc:	4632      	mov	r2, r6
   849de:	bf3c      	itt	cc
   849e0:	4606      	movcc	r6, r0
   849e2:	4632      	movcc	r2, r6
   849e4:	055b      	lsls	r3, r3, #21
   849e6:	d535      	bpl.n	84a54 <__ssprint_r+0xc4>
   849e8:	4611      	mov	r1, r2
   849ea:	4638      	mov	r0, r7
   849ec:	f7fe fef6 	bl	837dc <_malloc_r>
   849f0:	2800      	cmp	r0, #0
   849f2:	d039      	beq.n	84a68 <__ssprint_r+0xd8>
   849f4:	4652      	mov	r2, sl
   849f6:	6929      	ldr	r1, [r5, #16]
   849f8:	9001      	str	r0, [sp, #4]
   849fa:	f7ff f9bf 	bl	83d7c <memcpy>
   849fe:	89aa      	ldrh	r2, [r5, #12]
   84a00:	9b01      	ldr	r3, [sp, #4]
   84a02:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84a06:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84a0a:	81aa      	strh	r2, [r5, #12]
   84a0c:	ebca 0206 	rsb	r2, sl, r6
   84a10:	eb03 000a 	add.w	r0, r3, sl
   84a14:	616e      	str	r6, [r5, #20]
   84a16:	46a2      	mov	sl, r4
   84a18:	4626      	mov	r6, r4
   84a1a:	612b      	str	r3, [r5, #16]
   84a1c:	6028      	str	r0, [r5, #0]
   84a1e:	60aa      	str	r2, [r5, #8]
   84a20:	4652      	mov	r2, sl
   84a22:	4659      	mov	r1, fp
   84a24:	f7ff fa20 	bl	83e68 <memmove>
   84a28:	f8d9 2008 	ldr.w	r2, [r9, #8]
   84a2c:	68ab      	ldr	r3, [r5, #8]
   84a2e:	6828      	ldr	r0, [r5, #0]
   84a30:	1b9b      	subs	r3, r3, r6
   84a32:	4450      	add	r0, sl
   84a34:	1b14      	subs	r4, r2, r4
   84a36:	60ab      	str	r3, [r5, #8]
   84a38:	6028      	str	r0, [r5, #0]
   84a3a:	f8c9 4008 	str.w	r4, [r9, #8]
   84a3e:	b31c      	cbz	r4, 84a88 <__ssprint_r+0xf8>
   84a40:	f8d8 b000 	ldr.w	fp, [r8]
   84a44:	f8d8 4004 	ldr.w	r4, [r8, #4]
   84a48:	f108 0808 	add.w	r8, r8, #8
   84a4c:	e7b0      	b.n	849b0 <__ssprint_r+0x20>
   84a4e:	4626      	mov	r6, r4
   84a50:	46a2      	mov	sl, r4
   84a52:	e7e5      	b.n	84a20 <__ssprint_r+0x90>
   84a54:	4638      	mov	r0, r7
   84a56:	f7ff fd6d 	bl	84534 <_realloc_r>
   84a5a:	4603      	mov	r3, r0
   84a5c:	2800      	cmp	r0, #0
   84a5e:	d1d5      	bne.n	84a0c <__ssprint_r+0x7c>
   84a60:	4638      	mov	r0, r7
   84a62:	6929      	ldr	r1, [r5, #16]
   84a64:	f7fe fdde 	bl	83624 <_free_r>
   84a68:	230c      	movs	r3, #12
   84a6a:	603b      	str	r3, [r7, #0]
   84a6c:	89ab      	ldrh	r3, [r5, #12]
   84a6e:	2200      	movs	r2, #0
   84a70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84a74:	f04f 30ff 	mov.w	r0, #4294967295
   84a78:	81ab      	strh	r3, [r5, #12]
   84a7a:	f8c9 2008 	str.w	r2, [r9, #8]
   84a7e:	f8c9 2004 	str.w	r2, [r9, #4]
   84a82:	b003      	add	sp, #12
   84a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84a88:	2000      	movs	r0, #0
   84a8a:	f8c9 0004 	str.w	r0, [r9, #4]
   84a8e:	b003      	add	sp, #12
   84a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084a94 <__register_exitproc>:
   84a94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   84a98:	4c25      	ldr	r4, [pc, #148]	; (84b30 <__register_exitproc+0x9c>)
   84a9a:	4606      	mov	r6, r0
   84a9c:	6825      	ldr	r5, [r4, #0]
   84a9e:	4688      	mov	r8, r1
   84aa0:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
   84aa4:	4692      	mov	sl, r2
   84aa6:	4699      	mov	r9, r3
   84aa8:	b3c4      	cbz	r4, 84b1c <__register_exitproc+0x88>
   84aaa:	6860      	ldr	r0, [r4, #4]
   84aac:	281f      	cmp	r0, #31
   84aae:	dc17      	bgt.n	84ae0 <__register_exitproc+0x4c>
   84ab0:	1c41      	adds	r1, r0, #1
   84ab2:	b176      	cbz	r6, 84ad2 <__register_exitproc+0x3e>
   84ab4:	eb04 0380 	add.w	r3, r4, r0, lsl #2
   84ab8:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
   84abc:	f8d4 5188 	ldr.w	r5, [r4, #392]	; 0x188
   84ac0:	2201      	movs	r2, #1
   84ac2:	4082      	lsls	r2, r0
   84ac4:	4315      	orrs	r5, r2
   84ac6:	2e02      	cmp	r6, #2
   84ac8:	f8c4 5188 	str.w	r5, [r4, #392]	; 0x188
   84acc:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
   84ad0:	d01e      	beq.n	84b10 <__register_exitproc+0x7c>
   84ad2:	1c83      	adds	r3, r0, #2
   84ad4:	6061      	str	r1, [r4, #4]
   84ad6:	2000      	movs	r0, #0
   84ad8:	f844 8023 	str.w	r8, [r4, r3, lsl #2]
   84adc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84ae0:	4b14      	ldr	r3, [pc, #80]	; (84b34 <__register_exitproc+0xa0>)
   84ae2:	b303      	cbz	r3, 84b26 <__register_exitproc+0x92>
   84ae4:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84ae8:	f3af 8000 	nop.w
   84aec:	4604      	mov	r4, r0
   84aee:	b1d0      	cbz	r0, 84b26 <__register_exitproc+0x92>
   84af0:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
   84af4:	2700      	movs	r7, #0
   84af6:	e884 0088 	stmia.w	r4, {r3, r7}
   84afa:	4638      	mov	r0, r7
   84afc:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   84b00:	2101      	movs	r1, #1
   84b02:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
   84b06:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
   84b0a:	2e00      	cmp	r6, #0
   84b0c:	d0e1      	beq.n	84ad2 <__register_exitproc+0x3e>
   84b0e:	e7d1      	b.n	84ab4 <__register_exitproc+0x20>
   84b10:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84b14:	431a      	orrs	r2, r3
   84b16:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   84b1a:	e7da      	b.n	84ad2 <__register_exitproc+0x3e>
   84b1c:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
   84b20:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   84b24:	e7c1      	b.n	84aaa <__register_exitproc+0x16>
   84b26:	f04f 30ff 	mov.w	r0, #4294967295
   84b2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84b2e:	bf00      	nop
   84b30:	00085a70 	.word	0x00085a70
   84b34:	00000000 	.word	0x00000000

00084b38 <_calloc_r>:
   84b38:	b510      	push	{r4, lr}
   84b3a:	fb02 f101 	mul.w	r1, r2, r1
   84b3e:	f7fe fe4d 	bl	837dc <_malloc_r>
   84b42:	4604      	mov	r4, r0
   84b44:	b168      	cbz	r0, 84b62 <_calloc_r+0x2a>
   84b46:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84b4a:	f022 0203 	bic.w	r2, r2, #3
   84b4e:	3a04      	subs	r2, #4
   84b50:	2a24      	cmp	r2, #36	; 0x24
   84b52:	d818      	bhi.n	84b86 <_calloc_r+0x4e>
   84b54:	2a13      	cmp	r2, #19
   84b56:	d806      	bhi.n	84b66 <_calloc_r+0x2e>
   84b58:	4603      	mov	r3, r0
   84b5a:	2200      	movs	r2, #0
   84b5c:	601a      	str	r2, [r3, #0]
   84b5e:	605a      	str	r2, [r3, #4]
   84b60:	609a      	str	r2, [r3, #8]
   84b62:	4620      	mov	r0, r4
   84b64:	bd10      	pop	{r4, pc}
   84b66:	2300      	movs	r3, #0
   84b68:	2a1b      	cmp	r2, #27
   84b6a:	6003      	str	r3, [r0, #0]
   84b6c:	6043      	str	r3, [r0, #4]
   84b6e:	d90f      	bls.n	84b90 <_calloc_r+0x58>
   84b70:	2a24      	cmp	r2, #36	; 0x24
   84b72:	6083      	str	r3, [r0, #8]
   84b74:	60c3      	str	r3, [r0, #12]
   84b76:	bf05      	ittet	eq
   84b78:	6103      	streq	r3, [r0, #16]
   84b7a:	6143      	streq	r3, [r0, #20]
   84b7c:	f100 0310 	addne.w	r3, r0, #16
   84b80:	f100 0318 	addeq.w	r3, r0, #24
   84b84:	e7e9      	b.n	84b5a <_calloc_r+0x22>
   84b86:	2100      	movs	r1, #0
   84b88:	f7fc f9d2 	bl	80f30 <memset>
   84b8c:	4620      	mov	r0, r4
   84b8e:	bd10      	pop	{r4, pc}
   84b90:	f100 0308 	add.w	r3, r0, #8
   84b94:	e7e1      	b.n	84b5a <_calloc_r+0x22>
   84b96:	bf00      	nop

00084b98 <__aeabi_drsub>:
   84b98:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84b9c:	e002      	b.n	84ba4 <__adddf3>
   84b9e:	bf00      	nop

00084ba0 <__aeabi_dsub>:
   84ba0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084ba4 <__adddf3>:
   84ba4:	b530      	push	{r4, r5, lr}
   84ba6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84baa:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84bae:	ea94 0f05 	teq	r4, r5
   84bb2:	bf08      	it	eq
   84bb4:	ea90 0f02 	teqeq	r0, r2
   84bb8:	bf1f      	itttt	ne
   84bba:	ea54 0c00 	orrsne.w	ip, r4, r0
   84bbe:	ea55 0c02 	orrsne.w	ip, r5, r2
   84bc2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   84bc6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84bca:	f000 80e2 	beq.w	84d92 <__adddf3+0x1ee>
   84bce:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84bd2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   84bd6:	bfb8      	it	lt
   84bd8:	426d      	neglt	r5, r5
   84bda:	dd0c      	ble.n	84bf6 <__adddf3+0x52>
   84bdc:	442c      	add	r4, r5
   84bde:	ea80 0202 	eor.w	r2, r0, r2
   84be2:	ea81 0303 	eor.w	r3, r1, r3
   84be6:	ea82 0000 	eor.w	r0, r2, r0
   84bea:	ea83 0101 	eor.w	r1, r3, r1
   84bee:	ea80 0202 	eor.w	r2, r0, r2
   84bf2:	ea81 0303 	eor.w	r3, r1, r3
   84bf6:	2d36      	cmp	r5, #54	; 0x36
   84bf8:	bf88      	it	hi
   84bfa:	bd30      	pophi	{r4, r5, pc}
   84bfc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84c00:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84c04:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84c08:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84c0c:	d002      	beq.n	84c14 <__adddf3+0x70>
   84c0e:	4240      	negs	r0, r0
   84c10:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84c14:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84c18:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84c1c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84c20:	d002      	beq.n	84c28 <__adddf3+0x84>
   84c22:	4252      	negs	r2, r2
   84c24:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84c28:	ea94 0f05 	teq	r4, r5
   84c2c:	f000 80a7 	beq.w	84d7e <__adddf3+0x1da>
   84c30:	f1a4 0401 	sub.w	r4, r4, #1
   84c34:	f1d5 0e20 	rsbs	lr, r5, #32
   84c38:	db0d      	blt.n	84c56 <__adddf3+0xb2>
   84c3a:	fa02 fc0e 	lsl.w	ip, r2, lr
   84c3e:	fa22 f205 	lsr.w	r2, r2, r5
   84c42:	1880      	adds	r0, r0, r2
   84c44:	f141 0100 	adc.w	r1, r1, #0
   84c48:	fa03 f20e 	lsl.w	r2, r3, lr
   84c4c:	1880      	adds	r0, r0, r2
   84c4e:	fa43 f305 	asr.w	r3, r3, r5
   84c52:	4159      	adcs	r1, r3
   84c54:	e00e      	b.n	84c74 <__adddf3+0xd0>
   84c56:	f1a5 0520 	sub.w	r5, r5, #32
   84c5a:	f10e 0e20 	add.w	lr, lr, #32
   84c5e:	2a01      	cmp	r2, #1
   84c60:	fa03 fc0e 	lsl.w	ip, r3, lr
   84c64:	bf28      	it	cs
   84c66:	f04c 0c02 	orrcs.w	ip, ip, #2
   84c6a:	fa43 f305 	asr.w	r3, r3, r5
   84c6e:	18c0      	adds	r0, r0, r3
   84c70:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84c74:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84c78:	d507      	bpl.n	84c8a <__adddf3+0xe6>
   84c7a:	f04f 0e00 	mov.w	lr, #0
   84c7e:	f1dc 0c00 	rsbs	ip, ip, #0
   84c82:	eb7e 0000 	sbcs.w	r0, lr, r0
   84c86:	eb6e 0101 	sbc.w	r1, lr, r1
   84c8a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84c8e:	d31b      	bcc.n	84cc8 <__adddf3+0x124>
   84c90:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84c94:	d30c      	bcc.n	84cb0 <__adddf3+0x10c>
   84c96:	0849      	lsrs	r1, r1, #1
   84c98:	ea5f 0030 	movs.w	r0, r0, rrx
   84c9c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84ca0:	f104 0401 	add.w	r4, r4, #1
   84ca4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84ca8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84cac:	f080 809a 	bcs.w	84de4 <__adddf3+0x240>
   84cb0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84cb4:	bf08      	it	eq
   84cb6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84cba:	f150 0000 	adcs.w	r0, r0, #0
   84cbe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84cc2:	ea41 0105 	orr.w	r1, r1, r5
   84cc6:	bd30      	pop	{r4, r5, pc}
   84cc8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84ccc:	4140      	adcs	r0, r0
   84cce:	eb41 0101 	adc.w	r1, r1, r1
   84cd2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84cd6:	f1a4 0401 	sub.w	r4, r4, #1
   84cda:	d1e9      	bne.n	84cb0 <__adddf3+0x10c>
   84cdc:	f091 0f00 	teq	r1, #0
   84ce0:	bf04      	itt	eq
   84ce2:	4601      	moveq	r1, r0
   84ce4:	2000      	moveq	r0, #0
   84ce6:	fab1 f381 	clz	r3, r1
   84cea:	bf08      	it	eq
   84cec:	3320      	addeq	r3, #32
   84cee:	f1a3 030b 	sub.w	r3, r3, #11
   84cf2:	f1b3 0220 	subs.w	r2, r3, #32
   84cf6:	da0c      	bge.n	84d12 <__adddf3+0x16e>
   84cf8:	320c      	adds	r2, #12
   84cfa:	dd08      	ble.n	84d0e <__adddf3+0x16a>
   84cfc:	f102 0c14 	add.w	ip, r2, #20
   84d00:	f1c2 020c 	rsb	r2, r2, #12
   84d04:	fa01 f00c 	lsl.w	r0, r1, ip
   84d08:	fa21 f102 	lsr.w	r1, r1, r2
   84d0c:	e00c      	b.n	84d28 <__adddf3+0x184>
   84d0e:	f102 0214 	add.w	r2, r2, #20
   84d12:	bfd8      	it	le
   84d14:	f1c2 0c20 	rsble	ip, r2, #32
   84d18:	fa01 f102 	lsl.w	r1, r1, r2
   84d1c:	fa20 fc0c 	lsr.w	ip, r0, ip
   84d20:	bfdc      	itt	le
   84d22:	ea41 010c 	orrle.w	r1, r1, ip
   84d26:	4090      	lslle	r0, r2
   84d28:	1ae4      	subs	r4, r4, r3
   84d2a:	bfa2      	ittt	ge
   84d2c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84d30:	4329      	orrge	r1, r5
   84d32:	bd30      	popge	{r4, r5, pc}
   84d34:	ea6f 0404 	mvn.w	r4, r4
   84d38:	3c1f      	subs	r4, #31
   84d3a:	da1c      	bge.n	84d76 <__adddf3+0x1d2>
   84d3c:	340c      	adds	r4, #12
   84d3e:	dc0e      	bgt.n	84d5e <__adddf3+0x1ba>
   84d40:	f104 0414 	add.w	r4, r4, #20
   84d44:	f1c4 0220 	rsb	r2, r4, #32
   84d48:	fa20 f004 	lsr.w	r0, r0, r4
   84d4c:	fa01 f302 	lsl.w	r3, r1, r2
   84d50:	ea40 0003 	orr.w	r0, r0, r3
   84d54:	fa21 f304 	lsr.w	r3, r1, r4
   84d58:	ea45 0103 	orr.w	r1, r5, r3
   84d5c:	bd30      	pop	{r4, r5, pc}
   84d5e:	f1c4 040c 	rsb	r4, r4, #12
   84d62:	f1c4 0220 	rsb	r2, r4, #32
   84d66:	fa20 f002 	lsr.w	r0, r0, r2
   84d6a:	fa01 f304 	lsl.w	r3, r1, r4
   84d6e:	ea40 0003 	orr.w	r0, r0, r3
   84d72:	4629      	mov	r1, r5
   84d74:	bd30      	pop	{r4, r5, pc}
   84d76:	fa21 f004 	lsr.w	r0, r1, r4
   84d7a:	4629      	mov	r1, r5
   84d7c:	bd30      	pop	{r4, r5, pc}
   84d7e:	f094 0f00 	teq	r4, #0
   84d82:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84d86:	bf06      	itte	eq
   84d88:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84d8c:	3401      	addeq	r4, #1
   84d8e:	3d01      	subne	r5, #1
   84d90:	e74e      	b.n	84c30 <__adddf3+0x8c>
   84d92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84d96:	bf18      	it	ne
   84d98:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84d9c:	d029      	beq.n	84df2 <__adddf3+0x24e>
   84d9e:	ea94 0f05 	teq	r4, r5
   84da2:	bf08      	it	eq
   84da4:	ea90 0f02 	teqeq	r0, r2
   84da8:	d005      	beq.n	84db6 <__adddf3+0x212>
   84daa:	ea54 0c00 	orrs.w	ip, r4, r0
   84dae:	bf04      	itt	eq
   84db0:	4619      	moveq	r1, r3
   84db2:	4610      	moveq	r0, r2
   84db4:	bd30      	pop	{r4, r5, pc}
   84db6:	ea91 0f03 	teq	r1, r3
   84dba:	bf1e      	ittt	ne
   84dbc:	2100      	movne	r1, #0
   84dbe:	2000      	movne	r0, #0
   84dc0:	bd30      	popne	{r4, r5, pc}
   84dc2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84dc6:	d105      	bne.n	84dd4 <__adddf3+0x230>
   84dc8:	0040      	lsls	r0, r0, #1
   84dca:	4149      	adcs	r1, r1
   84dcc:	bf28      	it	cs
   84dce:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84dd2:	bd30      	pop	{r4, r5, pc}
   84dd4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84dd8:	bf3c      	itt	cc
   84dda:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84dde:	bd30      	popcc	{r4, r5, pc}
   84de0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84de4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84de8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84dec:	f04f 0000 	mov.w	r0, #0
   84df0:	bd30      	pop	{r4, r5, pc}
   84df2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84df6:	bf1a      	itte	ne
   84df8:	4619      	movne	r1, r3
   84dfa:	4610      	movne	r0, r2
   84dfc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84e00:	bf1c      	itt	ne
   84e02:	460b      	movne	r3, r1
   84e04:	4602      	movne	r2, r0
   84e06:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84e0a:	bf06      	itte	eq
   84e0c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84e10:	ea91 0f03 	teqeq	r1, r3
   84e14:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84e18:	bd30      	pop	{r4, r5, pc}
   84e1a:	bf00      	nop

00084e1c <__aeabi_ui2d>:
   84e1c:	f090 0f00 	teq	r0, #0
   84e20:	bf04      	itt	eq
   84e22:	2100      	moveq	r1, #0
   84e24:	4770      	bxeq	lr
   84e26:	b530      	push	{r4, r5, lr}
   84e28:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84e2c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84e30:	f04f 0500 	mov.w	r5, #0
   84e34:	f04f 0100 	mov.w	r1, #0
   84e38:	e750      	b.n	84cdc <__adddf3+0x138>
   84e3a:	bf00      	nop

00084e3c <__aeabi_i2d>:
   84e3c:	f090 0f00 	teq	r0, #0
   84e40:	bf04      	itt	eq
   84e42:	2100      	moveq	r1, #0
   84e44:	4770      	bxeq	lr
   84e46:	b530      	push	{r4, r5, lr}
   84e48:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84e4c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84e50:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84e54:	bf48      	it	mi
   84e56:	4240      	negmi	r0, r0
   84e58:	f04f 0100 	mov.w	r1, #0
   84e5c:	e73e      	b.n	84cdc <__adddf3+0x138>
   84e5e:	bf00      	nop

00084e60 <__aeabi_f2d>:
   84e60:	0042      	lsls	r2, r0, #1
   84e62:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84e66:	ea4f 0131 	mov.w	r1, r1, rrx
   84e6a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84e6e:	bf1f      	itttt	ne
   84e70:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84e74:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84e78:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84e7c:	4770      	bxne	lr
   84e7e:	f092 0f00 	teq	r2, #0
   84e82:	bf14      	ite	ne
   84e84:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84e88:	4770      	bxeq	lr
   84e8a:	b530      	push	{r4, r5, lr}
   84e8c:	f44f 7460 	mov.w	r4, #896	; 0x380
   84e90:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84e94:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84e98:	e720      	b.n	84cdc <__adddf3+0x138>
   84e9a:	bf00      	nop

00084e9c <__aeabi_ul2d>:
   84e9c:	ea50 0201 	orrs.w	r2, r0, r1
   84ea0:	bf08      	it	eq
   84ea2:	4770      	bxeq	lr
   84ea4:	b530      	push	{r4, r5, lr}
   84ea6:	f04f 0500 	mov.w	r5, #0
   84eaa:	e00a      	b.n	84ec2 <__aeabi_l2d+0x16>

00084eac <__aeabi_l2d>:
   84eac:	ea50 0201 	orrs.w	r2, r0, r1
   84eb0:	bf08      	it	eq
   84eb2:	4770      	bxeq	lr
   84eb4:	b530      	push	{r4, r5, lr}
   84eb6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84eba:	d502      	bpl.n	84ec2 <__aeabi_l2d+0x16>
   84ebc:	4240      	negs	r0, r0
   84ebe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84ec2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84ec6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84eca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84ece:	f43f aedc 	beq.w	84c8a <__adddf3+0xe6>
   84ed2:	f04f 0203 	mov.w	r2, #3
   84ed6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84eda:	bf18      	it	ne
   84edc:	3203      	addne	r2, #3
   84ede:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84ee2:	bf18      	it	ne
   84ee4:	3203      	addne	r2, #3
   84ee6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84eea:	f1c2 0320 	rsb	r3, r2, #32
   84eee:	fa00 fc03 	lsl.w	ip, r0, r3
   84ef2:	fa20 f002 	lsr.w	r0, r0, r2
   84ef6:	fa01 fe03 	lsl.w	lr, r1, r3
   84efa:	ea40 000e 	orr.w	r0, r0, lr
   84efe:	fa21 f102 	lsr.w	r1, r1, r2
   84f02:	4414      	add	r4, r2
   84f04:	e6c1      	b.n	84c8a <__adddf3+0xe6>
   84f06:	bf00      	nop

00084f08 <__aeabi_dmul>:
   84f08:	b570      	push	{r4, r5, r6, lr}
   84f0a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84f0e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84f12:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84f16:	bf1d      	ittte	ne
   84f18:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84f1c:	ea94 0f0c 	teqne	r4, ip
   84f20:	ea95 0f0c 	teqne	r5, ip
   84f24:	f000 f8de 	bleq	850e4 <__aeabi_dmul+0x1dc>
   84f28:	442c      	add	r4, r5
   84f2a:	ea81 0603 	eor.w	r6, r1, r3
   84f2e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   84f32:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84f36:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84f3a:	bf18      	it	ne
   84f3c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   84f40:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84f44:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   84f48:	d038      	beq.n	84fbc <__aeabi_dmul+0xb4>
   84f4a:	fba0 ce02 	umull	ip, lr, r0, r2
   84f4e:	f04f 0500 	mov.w	r5, #0
   84f52:	fbe1 e502 	umlal	lr, r5, r1, r2
   84f56:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   84f5a:	fbe0 e503 	umlal	lr, r5, r0, r3
   84f5e:	f04f 0600 	mov.w	r6, #0
   84f62:	fbe1 5603 	umlal	r5, r6, r1, r3
   84f66:	f09c 0f00 	teq	ip, #0
   84f6a:	bf18      	it	ne
   84f6c:	f04e 0e01 	orrne.w	lr, lr, #1
   84f70:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   84f74:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   84f78:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   84f7c:	d204      	bcs.n	84f88 <__aeabi_dmul+0x80>
   84f7e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   84f82:	416d      	adcs	r5, r5
   84f84:	eb46 0606 	adc.w	r6, r6, r6
   84f88:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   84f8c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   84f90:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   84f94:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   84f98:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   84f9c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84fa0:	bf88      	it	hi
   84fa2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84fa6:	d81e      	bhi.n	84fe6 <__aeabi_dmul+0xde>
   84fa8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   84fac:	bf08      	it	eq
   84fae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   84fb2:	f150 0000 	adcs.w	r0, r0, #0
   84fb6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84fba:	bd70      	pop	{r4, r5, r6, pc}
   84fbc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   84fc0:	ea46 0101 	orr.w	r1, r6, r1
   84fc4:	ea40 0002 	orr.w	r0, r0, r2
   84fc8:	ea81 0103 	eor.w	r1, r1, r3
   84fcc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   84fd0:	bfc2      	ittt	gt
   84fd2:	ebd4 050c 	rsbsgt	r5, r4, ip
   84fd6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84fda:	bd70      	popgt	{r4, r5, r6, pc}
   84fdc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84fe0:	f04f 0e00 	mov.w	lr, #0
   84fe4:	3c01      	subs	r4, #1
   84fe6:	f300 80ab 	bgt.w	85140 <__aeabi_dmul+0x238>
   84fea:	f114 0f36 	cmn.w	r4, #54	; 0x36
   84fee:	bfde      	ittt	le
   84ff0:	2000      	movle	r0, #0
   84ff2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   84ff6:	bd70      	pople	{r4, r5, r6, pc}
   84ff8:	f1c4 0400 	rsb	r4, r4, #0
   84ffc:	3c20      	subs	r4, #32
   84ffe:	da35      	bge.n	8506c <__aeabi_dmul+0x164>
   85000:	340c      	adds	r4, #12
   85002:	dc1b      	bgt.n	8503c <__aeabi_dmul+0x134>
   85004:	f104 0414 	add.w	r4, r4, #20
   85008:	f1c4 0520 	rsb	r5, r4, #32
   8500c:	fa00 f305 	lsl.w	r3, r0, r5
   85010:	fa20 f004 	lsr.w	r0, r0, r4
   85014:	fa01 f205 	lsl.w	r2, r1, r5
   85018:	ea40 0002 	orr.w	r0, r0, r2
   8501c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   85020:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   85024:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85028:	fa21 f604 	lsr.w	r6, r1, r4
   8502c:	eb42 0106 	adc.w	r1, r2, r6
   85030:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85034:	bf08      	it	eq
   85036:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8503a:	bd70      	pop	{r4, r5, r6, pc}
   8503c:	f1c4 040c 	rsb	r4, r4, #12
   85040:	f1c4 0520 	rsb	r5, r4, #32
   85044:	fa00 f304 	lsl.w	r3, r0, r4
   85048:	fa20 f005 	lsr.w	r0, r0, r5
   8504c:	fa01 f204 	lsl.w	r2, r1, r4
   85050:	ea40 0002 	orr.w	r0, r0, r2
   85054:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85058:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8505c:	f141 0100 	adc.w	r1, r1, #0
   85060:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85064:	bf08      	it	eq
   85066:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8506a:	bd70      	pop	{r4, r5, r6, pc}
   8506c:	f1c4 0520 	rsb	r5, r4, #32
   85070:	fa00 f205 	lsl.w	r2, r0, r5
   85074:	ea4e 0e02 	orr.w	lr, lr, r2
   85078:	fa20 f304 	lsr.w	r3, r0, r4
   8507c:	fa01 f205 	lsl.w	r2, r1, r5
   85080:	ea43 0302 	orr.w	r3, r3, r2
   85084:	fa21 f004 	lsr.w	r0, r1, r4
   85088:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8508c:	fa21 f204 	lsr.w	r2, r1, r4
   85090:	ea20 0002 	bic.w	r0, r0, r2
   85094:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85098:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8509c:	bf08      	it	eq
   8509e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   850a2:	bd70      	pop	{r4, r5, r6, pc}
   850a4:	f094 0f00 	teq	r4, #0
   850a8:	d10f      	bne.n	850ca <__aeabi_dmul+0x1c2>
   850aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   850ae:	0040      	lsls	r0, r0, #1
   850b0:	eb41 0101 	adc.w	r1, r1, r1
   850b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   850b8:	bf08      	it	eq
   850ba:	3c01      	subeq	r4, #1
   850bc:	d0f7      	beq.n	850ae <__aeabi_dmul+0x1a6>
   850be:	ea41 0106 	orr.w	r1, r1, r6
   850c2:	f095 0f00 	teq	r5, #0
   850c6:	bf18      	it	ne
   850c8:	4770      	bxne	lr
   850ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   850ce:	0052      	lsls	r2, r2, #1
   850d0:	eb43 0303 	adc.w	r3, r3, r3
   850d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   850d8:	bf08      	it	eq
   850da:	3d01      	subeq	r5, #1
   850dc:	d0f7      	beq.n	850ce <__aeabi_dmul+0x1c6>
   850de:	ea43 0306 	orr.w	r3, r3, r6
   850e2:	4770      	bx	lr
   850e4:	ea94 0f0c 	teq	r4, ip
   850e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   850ec:	bf18      	it	ne
   850ee:	ea95 0f0c 	teqne	r5, ip
   850f2:	d00c      	beq.n	8510e <__aeabi_dmul+0x206>
   850f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   850f8:	bf18      	it	ne
   850fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   850fe:	d1d1      	bne.n	850a4 <__aeabi_dmul+0x19c>
   85100:	ea81 0103 	eor.w	r1, r1, r3
   85104:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85108:	f04f 0000 	mov.w	r0, #0
   8510c:	bd70      	pop	{r4, r5, r6, pc}
   8510e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85112:	bf06      	itte	eq
   85114:	4610      	moveq	r0, r2
   85116:	4619      	moveq	r1, r3
   85118:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8511c:	d019      	beq.n	85152 <__aeabi_dmul+0x24a>
   8511e:	ea94 0f0c 	teq	r4, ip
   85122:	d102      	bne.n	8512a <__aeabi_dmul+0x222>
   85124:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   85128:	d113      	bne.n	85152 <__aeabi_dmul+0x24a>
   8512a:	ea95 0f0c 	teq	r5, ip
   8512e:	d105      	bne.n	8513c <__aeabi_dmul+0x234>
   85130:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   85134:	bf1c      	itt	ne
   85136:	4610      	movne	r0, r2
   85138:	4619      	movne	r1, r3
   8513a:	d10a      	bne.n	85152 <__aeabi_dmul+0x24a>
   8513c:	ea81 0103 	eor.w	r1, r1, r3
   85140:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85144:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85148:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8514c:	f04f 0000 	mov.w	r0, #0
   85150:	bd70      	pop	{r4, r5, r6, pc}
   85152:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85156:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8515a:	bd70      	pop	{r4, r5, r6, pc}

0008515c <__aeabi_ddiv>:
   8515c:	b570      	push	{r4, r5, r6, lr}
   8515e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85162:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85166:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8516a:	bf1d      	ittte	ne
   8516c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85170:	ea94 0f0c 	teqne	r4, ip
   85174:	ea95 0f0c 	teqne	r5, ip
   85178:	f000 f8a7 	bleq	852ca <__aeabi_ddiv+0x16e>
   8517c:	eba4 0405 	sub.w	r4, r4, r5
   85180:	ea81 0e03 	eor.w	lr, r1, r3
   85184:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85188:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8518c:	f000 8088 	beq.w	852a0 <__aeabi_ddiv+0x144>
   85190:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85194:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85198:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8519c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   851a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   851a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   851a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   851ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
   851b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   851b4:	429d      	cmp	r5, r3
   851b6:	bf08      	it	eq
   851b8:	4296      	cmpeq	r6, r2
   851ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   851be:	f504 7440 	add.w	r4, r4, #768	; 0x300
   851c2:	d202      	bcs.n	851ca <__aeabi_ddiv+0x6e>
   851c4:	085b      	lsrs	r3, r3, #1
   851c6:	ea4f 0232 	mov.w	r2, r2, rrx
   851ca:	1ab6      	subs	r6, r6, r2
   851cc:	eb65 0503 	sbc.w	r5, r5, r3
   851d0:	085b      	lsrs	r3, r3, #1
   851d2:	ea4f 0232 	mov.w	r2, r2, rrx
   851d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   851da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   851de:	ebb6 0e02 	subs.w	lr, r6, r2
   851e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   851e6:	bf22      	ittt	cs
   851e8:	1ab6      	subcs	r6, r6, r2
   851ea:	4675      	movcs	r5, lr
   851ec:	ea40 000c 	orrcs.w	r0, r0, ip
   851f0:	085b      	lsrs	r3, r3, #1
   851f2:	ea4f 0232 	mov.w	r2, r2, rrx
   851f6:	ebb6 0e02 	subs.w	lr, r6, r2
   851fa:	eb75 0e03 	sbcs.w	lr, r5, r3
   851fe:	bf22      	ittt	cs
   85200:	1ab6      	subcs	r6, r6, r2
   85202:	4675      	movcs	r5, lr
   85204:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85208:	085b      	lsrs	r3, r3, #1
   8520a:	ea4f 0232 	mov.w	r2, r2, rrx
   8520e:	ebb6 0e02 	subs.w	lr, r6, r2
   85212:	eb75 0e03 	sbcs.w	lr, r5, r3
   85216:	bf22      	ittt	cs
   85218:	1ab6      	subcs	r6, r6, r2
   8521a:	4675      	movcs	r5, lr
   8521c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85220:	085b      	lsrs	r3, r3, #1
   85222:	ea4f 0232 	mov.w	r2, r2, rrx
   85226:	ebb6 0e02 	subs.w	lr, r6, r2
   8522a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8522e:	bf22      	ittt	cs
   85230:	1ab6      	subcs	r6, r6, r2
   85232:	4675      	movcs	r5, lr
   85234:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85238:	ea55 0e06 	orrs.w	lr, r5, r6
   8523c:	d018      	beq.n	85270 <__aeabi_ddiv+0x114>
   8523e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   85242:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   85246:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8524a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8524e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   85252:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   85256:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8525a:	d1c0      	bne.n	851de <__aeabi_ddiv+0x82>
   8525c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85260:	d10b      	bne.n	8527a <__aeabi_ddiv+0x11e>
   85262:	ea41 0100 	orr.w	r1, r1, r0
   85266:	f04f 0000 	mov.w	r0, #0
   8526a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8526e:	e7b6      	b.n	851de <__aeabi_ddiv+0x82>
   85270:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85274:	bf04      	itt	eq
   85276:	4301      	orreq	r1, r0
   85278:	2000      	moveq	r0, #0
   8527a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8527e:	bf88      	it	hi
   85280:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85284:	f63f aeaf 	bhi.w	84fe6 <__aeabi_dmul+0xde>
   85288:	ebb5 0c03 	subs.w	ip, r5, r3
   8528c:	bf04      	itt	eq
   8528e:	ebb6 0c02 	subseq.w	ip, r6, r2
   85292:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85296:	f150 0000 	adcs.w	r0, r0, #0
   8529a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8529e:	bd70      	pop	{r4, r5, r6, pc}
   852a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   852a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   852a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   852ac:	bfc2      	ittt	gt
   852ae:	ebd4 050c 	rsbsgt	r5, r4, ip
   852b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   852b6:	bd70      	popgt	{r4, r5, r6, pc}
   852b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   852bc:	f04f 0e00 	mov.w	lr, #0
   852c0:	3c01      	subs	r4, #1
   852c2:	e690      	b.n	84fe6 <__aeabi_dmul+0xde>
   852c4:	ea45 0e06 	orr.w	lr, r5, r6
   852c8:	e68d      	b.n	84fe6 <__aeabi_dmul+0xde>
   852ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   852ce:	ea94 0f0c 	teq	r4, ip
   852d2:	bf08      	it	eq
   852d4:	ea95 0f0c 	teqeq	r5, ip
   852d8:	f43f af3b 	beq.w	85152 <__aeabi_dmul+0x24a>
   852dc:	ea94 0f0c 	teq	r4, ip
   852e0:	d10a      	bne.n	852f8 <__aeabi_ddiv+0x19c>
   852e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   852e6:	f47f af34 	bne.w	85152 <__aeabi_dmul+0x24a>
   852ea:	ea95 0f0c 	teq	r5, ip
   852ee:	f47f af25 	bne.w	8513c <__aeabi_dmul+0x234>
   852f2:	4610      	mov	r0, r2
   852f4:	4619      	mov	r1, r3
   852f6:	e72c      	b.n	85152 <__aeabi_dmul+0x24a>
   852f8:	ea95 0f0c 	teq	r5, ip
   852fc:	d106      	bne.n	8530c <__aeabi_ddiv+0x1b0>
   852fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85302:	f43f aefd 	beq.w	85100 <__aeabi_dmul+0x1f8>
   85306:	4610      	mov	r0, r2
   85308:	4619      	mov	r1, r3
   8530a:	e722      	b.n	85152 <__aeabi_dmul+0x24a>
   8530c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85310:	bf18      	it	ne
   85312:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   85316:	f47f aec5 	bne.w	850a4 <__aeabi_dmul+0x19c>
   8531a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8531e:	f47f af0d 	bne.w	8513c <__aeabi_dmul+0x234>
   85322:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   85326:	f47f aeeb 	bne.w	85100 <__aeabi_dmul+0x1f8>
   8532a:	e712      	b.n	85152 <__aeabi_dmul+0x24a>

0008532c <__gedf2>:
   8532c:	f04f 3cff 	mov.w	ip, #4294967295
   85330:	e006      	b.n	85340 <__cmpdf2+0x4>
   85332:	bf00      	nop

00085334 <__ledf2>:
   85334:	f04f 0c01 	mov.w	ip, #1
   85338:	e002      	b.n	85340 <__cmpdf2+0x4>
   8533a:	bf00      	nop

0008533c <__cmpdf2>:
   8533c:	f04f 0c01 	mov.w	ip, #1
   85340:	f84d cd04 	str.w	ip, [sp, #-4]!
   85344:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85348:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8534c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85350:	bf18      	it	ne
   85352:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   85356:	d01b      	beq.n	85390 <__cmpdf2+0x54>
   85358:	b001      	add	sp, #4
   8535a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8535e:	bf0c      	ite	eq
   85360:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   85364:	ea91 0f03 	teqne	r1, r3
   85368:	bf02      	ittt	eq
   8536a:	ea90 0f02 	teqeq	r0, r2
   8536e:	2000      	moveq	r0, #0
   85370:	4770      	bxeq	lr
   85372:	f110 0f00 	cmn.w	r0, #0
   85376:	ea91 0f03 	teq	r1, r3
   8537a:	bf58      	it	pl
   8537c:	4299      	cmppl	r1, r3
   8537e:	bf08      	it	eq
   85380:	4290      	cmpeq	r0, r2
   85382:	bf2c      	ite	cs
   85384:	17d8      	asrcs	r0, r3, #31
   85386:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8538a:	f040 0001 	orr.w	r0, r0, #1
   8538e:	4770      	bx	lr
   85390:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85394:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85398:	d102      	bne.n	853a0 <__cmpdf2+0x64>
   8539a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8539e:	d107      	bne.n	853b0 <__cmpdf2+0x74>
   853a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   853a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   853a8:	d1d6      	bne.n	85358 <__cmpdf2+0x1c>
   853aa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   853ae:	d0d3      	beq.n	85358 <__cmpdf2+0x1c>
   853b0:	f85d 0b04 	ldr.w	r0, [sp], #4
   853b4:	4770      	bx	lr
   853b6:	bf00      	nop

000853b8 <__aeabi_cdrcmple>:
   853b8:	4684      	mov	ip, r0
   853ba:	4610      	mov	r0, r2
   853bc:	4662      	mov	r2, ip
   853be:	468c      	mov	ip, r1
   853c0:	4619      	mov	r1, r3
   853c2:	4663      	mov	r3, ip
   853c4:	e000      	b.n	853c8 <__aeabi_cdcmpeq>
   853c6:	bf00      	nop

000853c8 <__aeabi_cdcmpeq>:
   853c8:	b501      	push	{r0, lr}
   853ca:	f7ff ffb7 	bl	8533c <__cmpdf2>
   853ce:	2800      	cmp	r0, #0
   853d0:	bf48      	it	mi
   853d2:	f110 0f00 	cmnmi.w	r0, #0
   853d6:	bd01      	pop	{r0, pc}

000853d8 <__aeabi_dcmpeq>:
   853d8:	f84d ed08 	str.w	lr, [sp, #-8]!
   853dc:	f7ff fff4 	bl	853c8 <__aeabi_cdcmpeq>
   853e0:	bf0c      	ite	eq
   853e2:	2001      	moveq	r0, #1
   853e4:	2000      	movne	r0, #0
   853e6:	f85d fb08 	ldr.w	pc, [sp], #8
   853ea:	bf00      	nop

000853ec <__aeabi_dcmplt>:
   853ec:	f84d ed08 	str.w	lr, [sp, #-8]!
   853f0:	f7ff ffea 	bl	853c8 <__aeabi_cdcmpeq>
   853f4:	bf34      	ite	cc
   853f6:	2001      	movcc	r0, #1
   853f8:	2000      	movcs	r0, #0
   853fa:	f85d fb08 	ldr.w	pc, [sp], #8
   853fe:	bf00      	nop

00085400 <__aeabi_dcmple>:
   85400:	f84d ed08 	str.w	lr, [sp, #-8]!
   85404:	f7ff ffe0 	bl	853c8 <__aeabi_cdcmpeq>
   85408:	bf94      	ite	ls
   8540a:	2001      	movls	r0, #1
   8540c:	2000      	movhi	r0, #0
   8540e:	f85d fb08 	ldr.w	pc, [sp], #8
   85412:	bf00      	nop

00085414 <__aeabi_dcmpge>:
   85414:	f84d ed08 	str.w	lr, [sp, #-8]!
   85418:	f7ff ffce 	bl	853b8 <__aeabi_cdrcmple>
   8541c:	bf94      	ite	ls
   8541e:	2001      	movls	r0, #1
   85420:	2000      	movhi	r0, #0
   85422:	f85d fb08 	ldr.w	pc, [sp], #8
   85426:	bf00      	nop

00085428 <__aeabi_dcmpgt>:
   85428:	f84d ed08 	str.w	lr, [sp, #-8]!
   8542c:	f7ff ffc4 	bl	853b8 <__aeabi_cdrcmple>
   85430:	bf34      	ite	cc
   85432:	2001      	movcc	r0, #1
   85434:	2000      	movcs	r0, #0
   85436:	f85d fb08 	ldr.w	pc, [sp], #8
   8543a:	bf00      	nop

0008543c <__aeabi_d2iz>:
   8543c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85440:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   85444:	d215      	bcs.n	85472 <__aeabi_d2iz+0x36>
   85446:	d511      	bpl.n	8546c <__aeabi_d2iz+0x30>
   85448:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8544c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85450:	d912      	bls.n	85478 <__aeabi_d2iz+0x3c>
   85452:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   85456:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8545a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8545e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85462:	fa23 f002 	lsr.w	r0, r3, r2
   85466:	bf18      	it	ne
   85468:	4240      	negne	r0, r0
   8546a:	4770      	bx	lr
   8546c:	f04f 0000 	mov.w	r0, #0
   85470:	4770      	bx	lr
   85472:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   85476:	d105      	bne.n	85484 <__aeabi_d2iz+0x48>
   85478:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8547c:	bf08      	it	eq
   8547e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   85482:	4770      	bx	lr
   85484:	f04f 0000 	mov.w	r0, #0
   85488:	4770      	bx	lr
   8548a:	bf00      	nop

0008548c <__aeabi_uldivmod>:
   8548c:	b953      	cbnz	r3, 854a4 <__aeabi_uldivmod+0x18>
   8548e:	b94a      	cbnz	r2, 854a4 <__aeabi_uldivmod+0x18>
   85490:	2900      	cmp	r1, #0
   85492:	bf08      	it	eq
   85494:	2800      	cmpeq	r0, #0
   85496:	bf1c      	itt	ne
   85498:	f04f 31ff 	movne.w	r1, #4294967295
   8549c:	f04f 30ff 	movne.w	r0, #4294967295
   854a0:	f000 b83c 	b.w	8551c <__aeabi_idiv0>
   854a4:	b082      	sub	sp, #8
   854a6:	46ec      	mov	ip, sp
   854a8:	e92d 5000 	stmdb	sp!, {ip, lr}
   854ac:	f000 f81e 	bl	854ec <__gnu_uldivmod_helper>
   854b0:	f8dd e004 	ldr.w	lr, [sp, #4]
   854b4:	b002      	add	sp, #8
   854b6:	bc0c      	pop	{r2, r3}
   854b8:	4770      	bx	lr
   854ba:	bf00      	nop

000854bc <__gnu_ldivmod_helper>:
   854bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   854c0:	9c06      	ldr	r4, [sp, #24]
   854c2:	4690      	mov	r8, r2
   854c4:	4606      	mov	r6, r0
   854c6:	460f      	mov	r7, r1
   854c8:	461d      	mov	r5, r3
   854ca:	f000 f829 	bl	85520 <__divdi3>
   854ce:	fb08 fc01 	mul.w	ip, r8, r1
   854d2:	fba8 2300 	umull	r2, r3, r8, r0
   854d6:	fb00 c505 	mla	r5, r0, r5, ip
   854da:	1ab2      	subs	r2, r6, r2
   854dc:	442b      	add	r3, r5
   854de:	eb67 0303 	sbc.w	r3, r7, r3
   854e2:	4686      	mov	lr, r0
   854e4:	e9c4 2300 	strd	r2, r3, [r4]
   854e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000854ec <__gnu_uldivmod_helper>:
   854ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   854f0:	9e08      	ldr	r6, [sp, #32]
   854f2:	4617      	mov	r7, r2
   854f4:	4680      	mov	r8, r0
   854f6:	4689      	mov	r9, r1
   854f8:	461d      	mov	r5, r3
   854fa:	f000 f967 	bl	857cc <__udivdi3>
   854fe:	fb00 f305 	mul.w	r3, r0, r5
   85502:	fba0 4507 	umull	r4, r5, r0, r7
   85506:	fb07 3701 	mla	r7, r7, r1, r3
   8550a:	ebb8 0404 	subs.w	r4, r8, r4
   8550e:	443d      	add	r5, r7
   85510:	eb69 0505 	sbc.w	r5, r9, r5
   85514:	e9c6 4500 	strd	r4, r5, [r6]
   85518:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0008551c <__aeabi_idiv0>:
   8551c:	4770      	bx	lr
   8551e:	bf00      	nop

00085520 <__divdi3>:
   85520:	2900      	cmp	r1, #0
   85522:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   85526:	f2c0 80a8 	blt.w	8567a <__divdi3+0x15a>
   8552a:	2600      	movs	r6, #0
   8552c:	2b00      	cmp	r3, #0
   8552e:	f2c0 809e 	blt.w	8566e <__divdi3+0x14e>
   85532:	4681      	mov	r9, r0
   85534:	468e      	mov	lr, r1
   85536:	4690      	mov	r8, r2
   85538:	469c      	mov	ip, r3
   8553a:	4617      	mov	r7, r2
   8553c:	4604      	mov	r4, r0
   8553e:	460d      	mov	r5, r1
   85540:	2b00      	cmp	r3, #0
   85542:	d13d      	bne.n	855c0 <__divdi3+0xa0>
   85544:	428a      	cmp	r2, r1
   85546:	d959      	bls.n	855fc <__divdi3+0xdc>
   85548:	fab2 f382 	clz	r3, r2
   8554c:	b13b      	cbz	r3, 8555e <__divdi3+0x3e>
   8554e:	f1c3 0220 	rsb	r2, r3, #32
   85552:	409d      	lsls	r5, r3
   85554:	fa20 f202 	lsr.w	r2, r0, r2
   85558:	409f      	lsls	r7, r3
   8555a:	4315      	orrs	r5, r2
   8555c:	409c      	lsls	r4, r3
   8555e:	0c39      	lsrs	r1, r7, #16
   85560:	fbb5 f0f1 	udiv	r0, r5, r1
   85564:	fa1f fe87 	uxth.w	lr, r7
   85568:	fb01 5510 	mls	r5, r1, r0, r5
   8556c:	fb0e f300 	mul.w	r3, lr, r0
   85570:	0c22      	lsrs	r2, r4, #16
   85572:	ea42 4505 	orr.w	r5, r2, r5, lsl #16
   85576:	42ab      	cmp	r3, r5
   85578:	d909      	bls.n	8558e <__divdi3+0x6e>
   8557a:	19ed      	adds	r5, r5, r7
   8557c:	f100 32ff 	add.w	r2, r0, #4294967295
   85580:	f080 810b 	bcs.w	8579a <__divdi3+0x27a>
   85584:	42ab      	cmp	r3, r5
   85586:	f240 8108 	bls.w	8579a <__divdi3+0x27a>
   8558a:	3802      	subs	r0, #2
   8558c:	443d      	add	r5, r7
   8558e:	1aed      	subs	r5, r5, r3
   85590:	fbb5 f3f1 	udiv	r3, r5, r1
   85594:	fb01 5513 	mls	r5, r1, r3, r5
   85598:	fb0e fe03 	mul.w	lr, lr, r3
   8559c:	b2a4      	uxth	r4, r4
   8559e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
   855a2:	45ae      	cmp	lr, r5
   855a4:	d908      	bls.n	855b8 <__divdi3+0x98>
   855a6:	19ed      	adds	r5, r5, r7
   855a8:	f103 32ff 	add.w	r2, r3, #4294967295
   855ac:	f080 80f7 	bcs.w	8579e <__divdi3+0x27e>
   855b0:	45ae      	cmp	lr, r5
   855b2:	f240 80f4 	bls.w	8579e <__divdi3+0x27e>
   855b6:	3b02      	subs	r3, #2
   855b8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
   855bc:	2200      	movs	r2, #0
   855be:	e003      	b.n	855c8 <__divdi3+0xa8>
   855c0:	428b      	cmp	r3, r1
   855c2:	d90f      	bls.n	855e4 <__divdi3+0xc4>
   855c4:	2200      	movs	r2, #0
   855c6:	4613      	mov	r3, r2
   855c8:	1c34      	adds	r4, r6, #0
   855ca:	bf18      	it	ne
   855cc:	2401      	movne	r4, #1
   855ce:	4260      	negs	r0, r4
   855d0:	f04f 0500 	mov.w	r5, #0
   855d4:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
   855d8:	4058      	eors	r0, r3
   855da:	4051      	eors	r1, r2
   855dc:	1900      	adds	r0, r0, r4
   855de:	4169      	adcs	r1, r5
   855e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   855e4:	fab3 f283 	clz	r2, r3
   855e8:	2a00      	cmp	r2, #0
   855ea:	f040 8089 	bne.w	85700 <__divdi3+0x1e0>
   855ee:	428b      	cmp	r3, r1
   855f0:	d302      	bcc.n	855f8 <__divdi3+0xd8>
   855f2:	4580      	cmp	r8, r0
   855f4:	f200 80e2 	bhi.w	857bc <__divdi3+0x29c>
   855f8:	2301      	movs	r3, #1
   855fa:	e7e5      	b.n	855c8 <__divdi3+0xa8>
   855fc:	b912      	cbnz	r2, 85604 <__divdi3+0xe4>
   855fe:	2301      	movs	r3, #1
   85600:	fbb3 f7f2 	udiv	r7, r3, r2
   85604:	fab7 f887 	clz	r8, r7
   85608:	f1b8 0f00 	cmp.w	r8, #0
   8560c:	d13b      	bne.n	85686 <__divdi3+0x166>
   8560e:	1bed      	subs	r5, r5, r7
   85610:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   85614:	fa1f fe87 	uxth.w	lr, r7
   85618:	2201      	movs	r2, #1
   8561a:	fbb5 f0fc 	udiv	r0, r5, ip
   8561e:	fb0c 5510 	mls	r5, ip, r0, r5
   85622:	fb0e f300 	mul.w	r3, lr, r0
   85626:	0c21      	lsrs	r1, r4, #16
   85628:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
   8562c:	42ab      	cmp	r3, r5
   8562e:	d907      	bls.n	85640 <__divdi3+0x120>
   85630:	19ed      	adds	r5, r5, r7
   85632:	f100 31ff 	add.w	r1, r0, #4294967295
   85636:	d202      	bcs.n	8563e <__divdi3+0x11e>
   85638:	42ab      	cmp	r3, r5
   8563a:	f200 80c3 	bhi.w	857c4 <__divdi3+0x2a4>
   8563e:	4608      	mov	r0, r1
   85640:	1aed      	subs	r5, r5, r3
   85642:	fbb5 f3fc 	udiv	r3, r5, ip
   85646:	fb0c 5513 	mls	r5, ip, r3, r5
   8564a:	fb0e fe03 	mul.w	lr, lr, r3
   8564e:	b2a4      	uxth	r4, r4
   85650:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
   85654:	45ae      	cmp	lr, r5
   85656:	d907      	bls.n	85668 <__divdi3+0x148>
   85658:	19ed      	adds	r5, r5, r7
   8565a:	f103 31ff 	add.w	r1, r3, #4294967295
   8565e:	d202      	bcs.n	85666 <__divdi3+0x146>
   85660:	45ae      	cmp	lr, r5
   85662:	f200 80ad 	bhi.w	857c0 <__divdi3+0x2a0>
   85666:	460b      	mov	r3, r1
   85668:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
   8566c:	e7ac      	b.n	855c8 <__divdi3+0xa8>
   8566e:	4252      	negs	r2, r2
   85670:	ea6f 0606 	mvn.w	r6, r6
   85674:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   85678:	e75b      	b.n	85532 <__divdi3+0x12>
   8567a:	4240      	negs	r0, r0
   8567c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85680:	f04f 36ff 	mov.w	r6, #4294967295
   85684:	e752      	b.n	8552c <__divdi3+0xc>
   85686:	fa07 f708 	lsl.w	r7, r7, r8
   8568a:	f1c8 0220 	rsb	r2, r8, #32
   8568e:	fa25 f302 	lsr.w	r3, r5, r2
   85692:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   85696:	fbb3 f1fc 	udiv	r1, r3, ip
   8569a:	fa1f fe87 	uxth.w	lr, r7
   8569e:	fb0c 3311 	mls	r3, ip, r1, r3
   856a2:	fa24 f202 	lsr.w	r2, r4, r2
   856a6:	fa05 f508 	lsl.w	r5, r5, r8
   856aa:	fb0e f901 	mul.w	r9, lr, r1
   856ae:	432a      	orrs	r2, r5
   856b0:	0c10      	lsrs	r0, r2, #16
   856b2:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
   856b6:	4599      	cmp	r9, r3
   856b8:	fa04 f408 	lsl.w	r4, r4, r8
   856bc:	d907      	bls.n	856ce <__divdi3+0x1ae>
   856be:	19db      	adds	r3, r3, r7
   856c0:	f101 30ff 	add.w	r0, r1, #4294967295
   856c4:	d278      	bcs.n	857b8 <__divdi3+0x298>
   856c6:	4599      	cmp	r9, r3
   856c8:	d976      	bls.n	857b8 <__divdi3+0x298>
   856ca:	3902      	subs	r1, #2
   856cc:	443b      	add	r3, r7
   856ce:	ebc9 0303 	rsb	r3, r9, r3
   856d2:	fbb3 f0fc 	udiv	r0, r3, ip
   856d6:	fb0c 3310 	mls	r3, ip, r0, r3
   856da:	fb0e f500 	mul.w	r5, lr, r0
   856de:	b292      	uxth	r2, r2
   856e0:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   856e4:	429d      	cmp	r5, r3
   856e6:	d907      	bls.n	856f8 <__divdi3+0x1d8>
   856e8:	19db      	adds	r3, r3, r7
   856ea:	f100 32ff 	add.w	r2, r0, #4294967295
   856ee:	d25f      	bcs.n	857b0 <__divdi3+0x290>
   856f0:	429d      	cmp	r5, r3
   856f2:	d95d      	bls.n	857b0 <__divdi3+0x290>
   856f4:	3802      	subs	r0, #2
   856f6:	443b      	add	r3, r7
   856f8:	1b5d      	subs	r5, r3, r5
   856fa:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
   856fe:	e78c      	b.n	8561a <__divdi3+0xfa>
   85700:	f1c2 0320 	rsb	r3, r2, #32
   85704:	fa28 f103 	lsr.w	r1, r8, r3
   85708:	fa0c fc02 	lsl.w	ip, ip, r2
   8570c:	ea41 0c0c 	orr.w	ip, r1, ip
   85710:	ea4f 401c 	mov.w	r0, ip, lsr #16
   85714:	fa2e f103 	lsr.w	r1, lr, r3
   85718:	fbb1 f5f0 	udiv	r5, r1, r0
   8571c:	fa1f f78c 	uxth.w	r7, ip
   85720:	fb00 1115 	mls	r1, r0, r5, r1
   85724:	fa29 f303 	lsr.w	r3, r9, r3
   85728:	fa0e fe02 	lsl.w	lr, lr, r2
   8572c:	fb07 f905 	mul.w	r9, r7, r5
   85730:	ea43 0e0e 	orr.w	lr, r3, lr
   85734:	ea4f 431e 	mov.w	r3, lr, lsr #16
   85738:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   8573c:	4589      	cmp	r9, r1
   8573e:	fa08 f802 	lsl.w	r8, r8, r2
   85742:	d908      	bls.n	85756 <__divdi3+0x236>
   85744:	eb11 010c 	adds.w	r1, r1, ip
   85748:	f105 33ff 	add.w	r3, r5, #4294967295
   8574c:	d232      	bcs.n	857b4 <__divdi3+0x294>
   8574e:	4589      	cmp	r9, r1
   85750:	d930      	bls.n	857b4 <__divdi3+0x294>
   85752:	3d02      	subs	r5, #2
   85754:	4461      	add	r1, ip
   85756:	ebc9 0101 	rsb	r1, r9, r1
   8575a:	fbb1 f3f0 	udiv	r3, r1, r0
   8575e:	fb00 1113 	mls	r1, r0, r3, r1
   85762:	fb07 f703 	mul.w	r7, r7, r3
   85766:	fa1f fe8e 	uxth.w	lr, lr
   8576a:	ea4e 4e01 	orr.w	lr, lr, r1, lsl #16
   8576e:	4577      	cmp	r7, lr
   85770:	d908      	bls.n	85784 <__divdi3+0x264>
   85772:	eb1e 0e0c 	adds.w	lr, lr, ip
   85776:	f103 31ff 	add.w	r1, r3, #4294967295
   8577a:	d217      	bcs.n	857ac <__divdi3+0x28c>
   8577c:	4577      	cmp	r7, lr
   8577e:	d915      	bls.n	857ac <__divdi3+0x28c>
   85780:	3b02      	subs	r3, #2
   85782:	44e6      	add	lr, ip
   85784:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
   85788:	fba3 8908 	umull	r8, r9, r3, r8
   8578c:	ebc7 0e0e 	rsb	lr, r7, lr
   85790:	45ce      	cmp	lr, r9
   85792:	d309      	bcc.n	857a8 <__divdi3+0x288>
   85794:	d005      	beq.n	857a2 <__divdi3+0x282>
   85796:	2200      	movs	r2, #0
   85798:	e716      	b.n	855c8 <__divdi3+0xa8>
   8579a:	4610      	mov	r0, r2
   8579c:	e6f7      	b.n	8558e <__divdi3+0x6e>
   8579e:	4613      	mov	r3, r2
   857a0:	e70a      	b.n	855b8 <__divdi3+0x98>
   857a2:	4094      	lsls	r4, r2
   857a4:	4544      	cmp	r4, r8
   857a6:	d2f6      	bcs.n	85796 <__divdi3+0x276>
   857a8:	3b01      	subs	r3, #1
   857aa:	e7f4      	b.n	85796 <__divdi3+0x276>
   857ac:	460b      	mov	r3, r1
   857ae:	e7e9      	b.n	85784 <__divdi3+0x264>
   857b0:	4610      	mov	r0, r2
   857b2:	e7a1      	b.n	856f8 <__divdi3+0x1d8>
   857b4:	461d      	mov	r5, r3
   857b6:	e7ce      	b.n	85756 <__divdi3+0x236>
   857b8:	4601      	mov	r1, r0
   857ba:	e788      	b.n	856ce <__divdi3+0x1ae>
   857bc:	4613      	mov	r3, r2
   857be:	e703      	b.n	855c8 <__divdi3+0xa8>
   857c0:	3b02      	subs	r3, #2
   857c2:	e751      	b.n	85668 <__divdi3+0x148>
   857c4:	3802      	subs	r0, #2
   857c6:	443d      	add	r5, r7
   857c8:	e73a      	b.n	85640 <__divdi3+0x120>
   857ca:	bf00      	nop

000857cc <__udivdi3>:
   857cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   857d0:	2b00      	cmp	r3, #0
   857d2:	d144      	bne.n	8585e <__udivdi3+0x92>
   857d4:	428a      	cmp	r2, r1
   857d6:	4615      	mov	r5, r2
   857d8:	4604      	mov	r4, r0
   857da:	d94f      	bls.n	8587c <__udivdi3+0xb0>
   857dc:	fab2 f782 	clz	r7, r2
   857e0:	460e      	mov	r6, r1
   857e2:	b14f      	cbz	r7, 857f8 <__udivdi3+0x2c>
   857e4:	f1c7 0320 	rsb	r3, r7, #32
   857e8:	40b9      	lsls	r1, r7
   857ea:	fa20 f603 	lsr.w	r6, r0, r3
   857ee:	fa02 f507 	lsl.w	r5, r2, r7
   857f2:	430e      	orrs	r6, r1
   857f4:	fa00 f407 	lsl.w	r4, r0, r7
   857f8:	0c2f      	lsrs	r7, r5, #16
   857fa:	fbb6 f0f7 	udiv	r0, r6, r7
   857fe:	fa1f fe85 	uxth.w	lr, r5
   85802:	fb07 6210 	mls	r2, r7, r0, r6
   85806:	fb0e f100 	mul.w	r1, lr, r0
   8580a:	0c26      	lsrs	r6, r4, #16
   8580c:	ea46 4302 	orr.w	r3, r6, r2, lsl #16
   85810:	4299      	cmp	r1, r3
   85812:	d909      	bls.n	85828 <__udivdi3+0x5c>
   85814:	195b      	adds	r3, r3, r5
   85816:	f100 32ff 	add.w	r2, r0, #4294967295
   8581a:	f080 80ee 	bcs.w	859fa <__udivdi3+0x22e>
   8581e:	4299      	cmp	r1, r3
   85820:	f240 80eb 	bls.w	859fa <__udivdi3+0x22e>
   85824:	3802      	subs	r0, #2
   85826:	442b      	add	r3, r5
   85828:	1a59      	subs	r1, r3, r1
   8582a:	fbb1 f3f7 	udiv	r3, r1, r7
   8582e:	fb07 1113 	mls	r1, r7, r3, r1
   85832:	fb0e fe03 	mul.w	lr, lr, r3
   85836:	b2a4      	uxth	r4, r4
   85838:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
   8583c:	458e      	cmp	lr, r1
   8583e:	d908      	bls.n	85852 <__udivdi3+0x86>
   85840:	1949      	adds	r1, r1, r5
   85842:	f103 32ff 	add.w	r2, r3, #4294967295
   85846:	f080 80da 	bcs.w	859fe <__udivdi3+0x232>
   8584a:	458e      	cmp	lr, r1
   8584c:	f240 80d7 	bls.w	859fe <__udivdi3+0x232>
   85850:	3b02      	subs	r3, #2
   85852:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   85856:	2600      	movs	r6, #0
   85858:	4631      	mov	r1, r6
   8585a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8585e:	428b      	cmp	r3, r1
   85860:	d847      	bhi.n	858f2 <__udivdi3+0x126>
   85862:	fab3 f683 	clz	r6, r3
   85866:	2e00      	cmp	r6, #0
   85868:	d148      	bne.n	858fc <__udivdi3+0x130>
   8586a:	428b      	cmp	r3, r1
   8586c:	d302      	bcc.n	85874 <__udivdi3+0xa8>
   8586e:	4282      	cmp	r2, r0
   85870:	f200 80cf 	bhi.w	85a12 <__udivdi3+0x246>
   85874:	2001      	movs	r0, #1
   85876:	4631      	mov	r1, r6
   85878:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8587c:	b912      	cbnz	r2, 85884 <__udivdi3+0xb8>
   8587e:	2501      	movs	r5, #1
   85880:	fbb5 f5f2 	udiv	r5, r5, r2
   85884:	fab5 fc85 	clz	ip, r5
   85888:	f1bc 0f00 	cmp.w	ip, #0
   8588c:	d178      	bne.n	85980 <__udivdi3+0x1b4>
   8588e:	1b49      	subs	r1, r1, r5
   85890:	0c2f      	lsrs	r7, r5, #16
   85892:	fa1f fe85 	uxth.w	lr, r5
   85896:	2601      	movs	r6, #1
   85898:	fbb1 f0f7 	udiv	r0, r1, r7
   8589c:	fb07 1110 	mls	r1, r7, r0, r1
   858a0:	fb0e f200 	mul.w	r2, lr, r0
   858a4:	0c23      	lsrs	r3, r4, #16
   858a6:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   858aa:	428a      	cmp	r2, r1
   858ac:	d907      	bls.n	858be <__udivdi3+0xf2>
   858ae:	1949      	adds	r1, r1, r5
   858b0:	f100 33ff 	add.w	r3, r0, #4294967295
   858b4:	d202      	bcs.n	858bc <__udivdi3+0xf0>
   858b6:	428a      	cmp	r2, r1
   858b8:	f200 80bc 	bhi.w	85a34 <__udivdi3+0x268>
   858bc:	4618      	mov	r0, r3
   858be:	1a89      	subs	r1, r1, r2
   858c0:	fbb1 f3f7 	udiv	r3, r1, r7
   858c4:	fb07 1113 	mls	r1, r7, r3, r1
   858c8:	fb0e fe03 	mul.w	lr, lr, r3
   858cc:	b2a4      	uxth	r4, r4
   858ce:	ea44 4201 	orr.w	r2, r4, r1, lsl #16
   858d2:	4596      	cmp	lr, r2
   858d4:	d908      	bls.n	858e8 <__udivdi3+0x11c>
   858d6:	1952      	adds	r2, r2, r5
   858d8:	f103 31ff 	add.w	r1, r3, #4294967295
   858dc:	f080 8091 	bcs.w	85a02 <__udivdi3+0x236>
   858e0:	4596      	cmp	lr, r2
   858e2:	f240 808e 	bls.w	85a02 <__udivdi3+0x236>
   858e6:	3b02      	subs	r3, #2
   858e8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   858ec:	4631      	mov	r1, r6
   858ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   858f2:	2600      	movs	r6, #0
   858f4:	4630      	mov	r0, r6
   858f6:	4631      	mov	r1, r6
   858f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   858fc:	f1c6 0420 	rsb	r4, r6, #32
   85900:	fa22 f504 	lsr.w	r5, r2, r4
   85904:	40b3      	lsls	r3, r6
   85906:	432b      	orrs	r3, r5
   85908:	fa21 f704 	lsr.w	r7, r1, r4
   8590c:	ea4f 4813 	mov.w	r8, r3, lsr #16
   85910:	fbb7 fcf8 	udiv	ip, r7, r8
   85914:	fa1f f983 	uxth.w	r9, r3
   85918:	fb08 771c 	mls	r7, r8, ip, r7
   8591c:	fa20 fe04 	lsr.w	lr, r0, r4
   85920:	fa01 f506 	lsl.w	r5, r1, r6
   85924:	fb09 f40c 	mul.w	r4, r9, ip
   85928:	ea4e 0505 	orr.w	r5, lr, r5
   8592c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   85930:	ea4e 4707 	orr.w	r7, lr, r7, lsl #16
   85934:	42bc      	cmp	r4, r7
   85936:	fa02 f206 	lsl.w	r2, r2, r6
   8593a:	d904      	bls.n	85946 <__udivdi3+0x17a>
   8593c:	18ff      	adds	r7, r7, r3
   8593e:	f10c 31ff 	add.w	r1, ip, #4294967295
   85942:	d368      	bcc.n	85a16 <__udivdi3+0x24a>
   85944:	468c      	mov	ip, r1
   85946:	1b3f      	subs	r7, r7, r4
   85948:	fbb7 f4f8 	udiv	r4, r7, r8
   8594c:	fb08 7714 	mls	r7, r8, r4, r7
   85950:	fb09 f904 	mul.w	r9, r9, r4
   85954:	b2ad      	uxth	r5, r5
   85956:	ea45 4107 	orr.w	r1, r5, r7, lsl #16
   8595a:	4589      	cmp	r9, r1
   8595c:	d904      	bls.n	85968 <__udivdi3+0x19c>
   8595e:	18c9      	adds	r1, r1, r3
   85960:	f104 35ff 	add.w	r5, r4, #4294967295
   85964:	d35d      	bcc.n	85a22 <__udivdi3+0x256>
   85966:	462c      	mov	r4, r5
   85968:	ea44 440c 	orr.w	r4, r4, ip, lsl #16
   8596c:	fba4 2302 	umull	r2, r3, r4, r2
   85970:	ebc9 0101 	rsb	r1, r9, r1
   85974:	4299      	cmp	r1, r3
   85976:	d349      	bcc.n	85a0c <__udivdi3+0x240>
   85978:	d045      	beq.n	85a06 <__udivdi3+0x23a>
   8597a:	4620      	mov	r0, r4
   8597c:	2600      	movs	r6, #0
   8597e:	e76b      	b.n	85858 <__udivdi3+0x8c>
   85980:	f1cc 0420 	rsb	r4, ip, #32
   85984:	fa05 f50c 	lsl.w	r5, r5, ip
   85988:	fa21 f304 	lsr.w	r3, r1, r4
   8598c:	0c2a      	lsrs	r2, r5, #16
   8598e:	fbb3 f6f2 	udiv	r6, r3, r2
   85992:	fa1f fe85 	uxth.w	lr, r5
   85996:	fb02 3816 	mls	r8, r2, r6, r3
   8599a:	fa20 f704 	lsr.w	r7, r0, r4
   8599e:	fa01 f10c 	lsl.w	r1, r1, ip
   859a2:	fb0e f906 	mul.w	r9, lr, r6
   859a6:	430f      	orrs	r7, r1
   859a8:	0c3c      	lsrs	r4, r7, #16
   859aa:	ea44 4308 	orr.w	r3, r4, r8, lsl #16
   859ae:	4599      	cmp	r9, r3
   859b0:	fa00 f40c 	lsl.w	r4, r0, ip
   859b4:	d907      	bls.n	859c6 <__udivdi3+0x1fa>
   859b6:	195b      	adds	r3, r3, r5
   859b8:	f106 31ff 	add.w	r1, r6, #4294967295
   859bc:	d238      	bcs.n	85a30 <__udivdi3+0x264>
   859be:	4599      	cmp	r9, r3
   859c0:	d936      	bls.n	85a30 <__udivdi3+0x264>
   859c2:	3e02      	subs	r6, #2
   859c4:	442b      	add	r3, r5
   859c6:	ebc9 0303 	rsb	r3, r9, r3
   859ca:	fbb3 f0f2 	udiv	r0, r3, r2
   859ce:	fb02 3310 	mls	r3, r2, r0, r3
   859d2:	fb0e f100 	mul.w	r1, lr, r0
   859d6:	b2bf      	uxth	r7, r7
   859d8:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
   859dc:	4299      	cmp	r1, r3
   859de:	d907      	bls.n	859f0 <__udivdi3+0x224>
   859e0:	195b      	adds	r3, r3, r5
   859e2:	f100 37ff 	add.w	r7, r0, #4294967295
   859e6:	d221      	bcs.n	85a2c <__udivdi3+0x260>
   859e8:	4299      	cmp	r1, r3
   859ea:	d91f      	bls.n	85a2c <__udivdi3+0x260>
   859ec:	3802      	subs	r0, #2
   859ee:	442b      	add	r3, r5
   859f0:	4617      	mov	r7, r2
   859f2:	1a59      	subs	r1, r3, r1
   859f4:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
   859f8:	e74e      	b.n	85898 <__udivdi3+0xcc>
   859fa:	4610      	mov	r0, r2
   859fc:	e714      	b.n	85828 <__udivdi3+0x5c>
   859fe:	4613      	mov	r3, r2
   85a00:	e727      	b.n	85852 <__udivdi3+0x86>
   85a02:	460b      	mov	r3, r1
   85a04:	e770      	b.n	858e8 <__udivdi3+0x11c>
   85a06:	40b0      	lsls	r0, r6
   85a08:	4290      	cmp	r0, r2
   85a0a:	d2b6      	bcs.n	8597a <__udivdi3+0x1ae>
   85a0c:	1e60      	subs	r0, r4, #1
   85a0e:	2600      	movs	r6, #0
   85a10:	e722      	b.n	85858 <__udivdi3+0x8c>
   85a12:	4630      	mov	r0, r6
   85a14:	e720      	b.n	85858 <__udivdi3+0x8c>
   85a16:	42bc      	cmp	r4, r7
   85a18:	d994      	bls.n	85944 <__udivdi3+0x178>
   85a1a:	f1ac 0c02 	sub.w	ip, ip, #2
   85a1e:	441f      	add	r7, r3
   85a20:	e791      	b.n	85946 <__udivdi3+0x17a>
   85a22:	4589      	cmp	r9, r1
   85a24:	d99f      	bls.n	85966 <__udivdi3+0x19a>
   85a26:	3c02      	subs	r4, #2
   85a28:	4419      	add	r1, r3
   85a2a:	e79d      	b.n	85968 <__udivdi3+0x19c>
   85a2c:	4638      	mov	r0, r7
   85a2e:	e7df      	b.n	859f0 <__udivdi3+0x224>
   85a30:	460e      	mov	r6, r1
   85a32:	e7c8      	b.n	859c6 <__udivdi3+0x1fa>
   85a34:	3802      	subs	r0, #2
   85a36:	4429      	add	r1, r5
   85a38:	e741      	b.n	858be <__udivdi3+0xf2>
   85a3a:	bf00      	nop
   85a3c:	00006425 	.word	0x00006425
   85a40:	00000001 	.word	0x00000001
   85a44:	00000002 	.word	0x00000002
   85a48:	00000004 	.word	0x00000004
   85a4c:	00000008 	.word	0x00000008
   85a50:	00000010 	.word	0x00000010
   85a54:	00000020 	.word	0x00000020
   85a58:	00000040 	.word	0x00000040
   85a5c:	00000080 	.word	0x00000080
   85a60:	00000100 	.word	0x00000100
   85a64:	00000200 	.word	0x00000200
   85a68:	00000400 	.word	0x00000400
   85a6c:	00000043 	.word	0x00000043

00085a70 <_global_impure_ptr>:
   85a70:	20070178                                x.. 

00085a74 <zeroes.6911>:
   85a74:	30303030 30303030 30303030 30303030     0000000000000000

00085a84 <blanks.6910>:
   85a84:	20202020 20202020 20202020 20202020                     
   85a94:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   85aa4:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   85ab4:	00000000 33323130 37363534 62613938     ....0123456789ab
   85ac4:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   85ad4:	00000030 69666e49 7974696e 00000000     0...Infinity....
   85ae4:	004e614e 49534f50 00000058 0000002e     NaN.POSIX.......
   85af4:	00000000                                ....

00085af8 <__mprec_tens>:
   85af8:	00000000 3ff00000 00000000 40240000     .......?......$@
   85b08:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85b18:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85b28:	00000000 412e8480 00000000 416312d0     .......A......cA
   85b38:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   85b48:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   85b58:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   85b68:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   85b78:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85b88:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85b98:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85ba8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85bb8:	79d99db4 44ea7843                       ...yCx.D

00085bc0 <p05.5302>:
   85bc0:	00000005 00000019 0000007d 00000000     ........}.......

00085bd0 <__mprec_bigtens>:
   85bd0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85be0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85bf0:	7f73bf3c 75154fdd                       <.s..O.u

00085bf8 <_init>:
   85bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85bfa:	bf00      	nop
   85bfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85bfe:	bc08      	pop	{r3}
   85c00:	469e      	mov	lr, r3
   85c02:	4770      	bx	lr

00085c04 <__init_array_start>:
   85c04:	00082569 	.word	0x00082569

00085c08 <__frame_dummy_init_array_entry>:
   85c08:	00080119                                ....

00085c0c <_fini>:
   85c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85c0e:	bf00      	nop
   85c10:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85c12:	bc08      	pop	{r3}
   85c14:	469e      	mov	lr, r3
   85c16:	4770      	bx	lr

00085c18 <__fini_array_start>:
   85c18:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4a14      	ldr	r2, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b13      	ldr	r3, [r2, #48]	; 0x30
2007003c:	f023 0303 	bic.w	r3, r3, #3
20070040:	f043 0301 	orr.w	r3, r3, #1
20070044:	6313      	str	r3, [r2, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070048:	f013 0f08 	tst.w	r3, #8
2007004c:	d0fb      	beq.n	20070046 <SystemInit+0x46>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007004e:	4a12      	ldr	r2, [pc, #72]	; (20070098 <SystemInit+0x98>)
20070050:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070052:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070054:	461a      	mov	r2, r3
20070056:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070058:	f013 0f02 	tst.w	r3, #2
2007005c:	d0fb      	beq.n	20070056 <SystemInit+0x56>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007005e:	2211      	movs	r2, #17
20070060:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070062:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070064:	461a      	mov	r2, r3
20070066:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070068:	f013 0f08 	tst.w	r3, #8
2007006c:	d0fb      	beq.n	20070066 <SystemInit+0x66>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007006e:	2212      	movs	r2, #18
20070070:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070072:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070074:	461a      	mov	r2, r3
20070076:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070078:	f013 0f08 	tst.w	r3, #8
2007007c:	d0fb      	beq.n	20070076 <SystemInit+0x76>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007007e:	4a07      	ldr	r2, [pc, #28]	; (2007009c <SystemInit+0x9c>)
20070080:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070082:	601a      	str	r2, [r3, #0]
20070084:	4770      	bx	lr
20070086:	bf00      	nop
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070170 	.word	0x20070170

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <pin_table>:
2007012c:	5c390908 5758591d 675d5556 00003b68     ..9\.YXWVU]gh;..
2007013c:	00000000 0e3a0000 6261600f 07696663     ......:..`abcfi.
2007014c:	4342416a 47464544 14134948 50515253     jABCDEFGHI..SRQP
2007015c:	4c4d4e4f 18102e35 04061617 32310203     ONML5.........12
2007016c:	00003433                                34..

20070170 <SystemCoreClock>:
20070170:	003d0900 00000000                       ..=.....

20070178 <impure_data>:
20070178:	00000000 20070464 200704cc 20070534     ....d.. ... 4.. 
	...
200701ac:	00085a6c 00000000 00000000 00000000     lZ..............
	...
20070220:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070230:	0005deec 0000000b 00000000 00000000     ................
	...

200705a0 <_impure_ptr>:
200705a0:	20070178                                x.. 

200705a4 <lconv>:
200705a4:	00085af0 00085ab4 00085ab4 00085ab4     .Z...Z...Z...Z..
200705b4:	00085ab4 00085ab4 00085ab4 00085ab4     .Z...Z...Z...Z..
200705c4:	00085ab4 00085ab4 ffffffff ffffffff     .Z...Z..........
200705d4:	ffffffff 0000ffff                       ........

200705dc <__malloc_av_>:
	...
200705e4:	200705dc 200705dc 200705e4 200705e4     ... ... ... ... 
200705f4:	200705ec 200705ec 200705f4 200705f4     ... ... ... ... 
20070604:	200705fc 200705fc 20070604 20070604     ... ... ... ... 
20070614:	2007060c 2007060c 20070614 20070614     ... ... ... ... 
20070624:	2007061c 2007061c 20070624 20070624     ... ... $.. $.. 
20070634:	2007062c 2007062c 20070634 20070634     ,.. ,.. 4.. 4.. 
20070644:	2007063c 2007063c 20070644 20070644     <.. <.. D.. D.. 
20070654:	2007064c 2007064c 20070654 20070654     L.. L.. T.. T.. 
20070664:	2007065c 2007065c 20070664 20070664     \.. \.. d.. d.. 
20070674:	2007066c 2007066c 20070674 20070674     l.. l.. t.. t.. 
20070684:	2007067c 2007067c 20070684 20070684     |.. |.. ... ... 
20070694:	2007068c 2007068c 20070694 20070694     ... ... ... ... 
200706a4:	2007069c 2007069c 200706a4 200706a4     ... ... ... ... 
200706b4:	200706ac 200706ac 200706b4 200706b4     ... ... ... ... 
200706c4:	200706bc 200706bc 200706c4 200706c4     ... ... ... ... 
200706d4:	200706cc 200706cc 200706d4 200706d4     ... ... ... ... 
200706e4:	200706dc 200706dc 200706e4 200706e4     ... ... ... ... 
200706f4:	200706ec 200706ec 200706f4 200706f4     ... ... ... ... 
20070704:	200706fc 200706fc 20070704 20070704     ... ... ... ... 
20070714:	2007070c 2007070c 20070714 20070714     ... ... ... ... 
20070724:	2007071c 2007071c 20070724 20070724     ... ... $.. $.. 
20070734:	2007072c 2007072c 20070734 20070734     ,.. ,.. 4.. 4.. 
20070744:	2007073c 2007073c 20070744 20070744     <.. <.. D.. D.. 
20070754:	2007074c 2007074c 20070754 20070754     L.. L.. T.. T.. 
20070764:	2007075c 2007075c 20070764 20070764     \.. \.. d.. d.. 
20070774:	2007076c 2007076c 20070774 20070774     l.. l.. t.. t.. 
20070784:	2007077c 2007077c 20070784 20070784     |.. |.. ... ... 
20070794:	2007078c 2007078c 20070794 20070794     ... ... ... ... 
200707a4:	2007079c 2007079c 200707a4 200707a4     ... ... ... ... 
200707b4:	200707ac 200707ac 200707b4 200707b4     ... ... ... ... 
200707c4:	200707bc 200707bc 200707c4 200707c4     ... ... ... ... 
200707d4:	200707cc 200707cc 200707d4 200707d4     ... ... ... ... 
200707e4:	200707dc 200707dc 200707e4 200707e4     ... ... ... ... 
200707f4:	200707ec 200707ec 200707f4 200707f4     ... ... ... ... 
20070804:	200707fc 200707fc 20070804 20070804     ... ... ... ... 
20070814:	2007080c 2007080c 20070814 20070814     ... ... ... ... 
20070824:	2007081c 2007081c 20070824 20070824     ... ... $.. $.. 
20070834:	2007082c 2007082c 20070834 20070834     ,.. ,.. 4.. 4.. 
20070844:	2007083c 2007083c 20070844 20070844     <.. <.. D.. D.. 
20070854:	2007084c 2007084c 20070854 20070854     L.. L.. T.. T.. 
20070864:	2007085c 2007085c 20070864 20070864     \.. \.. d.. d.. 
20070874:	2007086c 2007086c 20070874 20070874     l.. l.. t.. t.. 
20070884:	2007087c 2007087c 20070884 20070884     |.. |.. ... ... 
20070894:	2007088c 2007088c 20070894 20070894     ... ... ... ... 
200708a4:	2007089c 2007089c 200708a4 200708a4     ... ... ... ... 
200708b4:	200708ac 200708ac 200708b4 200708b4     ... ... ... ... 
200708c4:	200708bc 200708bc 200708c4 200708c4     ... ... ... ... 
200708d4:	200708cc 200708cc 200708d4 200708d4     ... ... ... ... 
200708e4:	200708dc 200708dc 200708e4 200708e4     ... ... ... ... 
200708f4:	200708ec 200708ec 200708f4 200708f4     ... ... ... ... 
20070904:	200708fc 200708fc 20070904 20070904     ... ... ... ... 
20070914:	2007090c 2007090c 20070914 20070914     ... ... ... ... 
20070924:	2007091c 2007091c 20070924 20070924     ... ... $.. $.. 
20070934:	2007092c 2007092c 20070934 20070934     ,.. ,.. 4.. 4.. 
20070944:	2007093c 2007093c 20070944 20070944     <.. <.. D.. D.. 
20070954:	2007094c 2007094c 20070954 20070954     L.. L.. T.. T.. 
20070964:	2007095c 2007095c 20070964 20070964     \.. \.. d.. d.. 
20070974:	2007096c 2007096c 20070974 20070974     l.. l.. t.. t.. 
20070984:	2007097c 2007097c 20070984 20070984     |.. |.. ... ... 
20070994:	2007098c 2007098c 20070994 20070994     ... ... ... ... 
200709a4:	2007099c 2007099c 200709a4 200709a4     ... ... ... ... 
200709b4:	200709ac 200709ac 200709b4 200709b4     ... ... ... ... 
200709c4:	200709bc 200709bc 200709c4 200709c4     ... ... ... ... 
200709d4:	200709cc 200709cc 200709d4 200709d4     ... ... ... ... 

200709e4 <__malloc_trim_threshold>:
200709e4:	00020000                                ....

200709e8 <__malloc_sbrk_base>:
200709e8:	ffffffff                                ....
